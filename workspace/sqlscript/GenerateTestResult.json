{
	"name": "GenerateTestResult",
	"properties": {
		"description": "Generate NUnit XML format test results from logging.e2e_test_results table for Azure DevOps reporting",
		"content": {
			"query": "/*\nSQL Stored Procedure: GenerateTestResult\nPurpose: Generate NUnit XML format test results from logging.e2e_test_results table\nUsage: Called by Synapse pipeline to convert E2E test results into Azure DevOps compatible format\n*/\n\nCREATE OR ALTER PROCEDURE [dbo].[GenerateTestResult]\n    @hours_back INT = 2,\n    @workspace_name NVARCHAR(100) = NULL\nAS\nBEGIN\n    SET NOCOUNT ON;\n    \n    -- Declare variables for XML generation\n    DECLARE @xml_output NVARCHAR(MAX);\n    DECLARE @test_count INT;\n    DECLARE @failure_count INT;\n    DECLARE @success_count INT;\n    DECLARE @execution_time DATETIME2 = GETDATE();\n    \n    -- Get test results from the last N hours\n    WITH TestResults AS (\n        SELECT \n            entity,\n            test_status,\n            test_timestamp,\n            std_count,\n            hrm_count,\n            hrm_active_count,\n            cur_count,\n            std_to_hrm_match,\n            hrm_to_cur_match,\n            cur_unique_check,\n            -- Create a test case name that includes entity and validation type\n            CASE \n                WHEN std_to_hrm_match = 1 AND hrm_to_cur_match = 1 AND cur_unique_check = 1 \n                THEN 'DataValidation.' + entity + '.AllChecks'\n                ELSE 'DataValidation.' + entity + '.PartialChecks'\n            END AS test_case_name,\n            -- Create failure message if test failed\n            CASE \n                WHEN test_status != 'PASSED' THEN \n                    'Test failed: ' + test_status + \n                    '. STD count: ' + CAST(std_count AS NVARCHAR) +\n                    ', HRM count: ' + CAST(hrm_count AS NVARCHAR) +\n                    ', CUR count: ' + CAST(cur_count AS NVARCHAR) +\n                    '. STD->HRM match: ' + CASE WHEN std_to_hrm_match = 1 THEN 'TRUE' ELSE 'FALSE' END +\n                    ', HRM->CUR match: ' + CASE WHEN hrm_to_cur_match = 1 THEN 'TRUE' ELSE 'FALSE' END +\n                    ', Unique check: ' + CASE WHEN cur_unique_check = 1 THEN 'TRUE' ELSE 'FALSE' END\n                ELSE NULL\n            END AS failure_message,\n            -- Calculate test duration (use a fixed duration for simplicity)\n            DATEDIFF(SECOND, test_timestamp, GETDATE()) AS test_duration\n        FROM logging.e2e_test_results \n        WHERE test_timestamp >= DATEADD(HOUR, -@hours_back, GETDATE())\n    ),\n    LatestTestResults AS (\n        -- Get the most recent test result per entity\n        SELECT *,\n            ROW_NUMBER() OVER (PARTITION BY entity ORDER BY test_timestamp DESC) as rn\n        FROM TestResults\n    )\n    SELECT \n        @test_count = COUNT(*),\n        @failure_count = SUM(CASE WHEN test_status != 'PASSED' THEN 1 ELSE 0 END),\n        @success_count = SUM(CASE WHEN test_status = 'PASSED' THEN 1 ELSE 0 END)\n    FROM LatestTestResults\n    WHERE rn = 1;\n    \n    -- Handle case where no test results are found\n    IF @test_count = 0\n    BEGIN\n        SET @xml_output = N'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<test-results xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"nunit_schema_25.xsd\" name=\"E2E Data Validation Tests\" total=\"1\" errors=\"0\" failures=\"1\" not-run=\"0\" inconclusive=\"0\" ignored=\"0\" skipped=\"0\" invalid=\"0\" date=\"' + CONVERT(NVARCHAR, @execution_time, 126) + '\" time=\"' + CONVERT(NVARCHAR, @execution_time, 114) + '\">\n  <environment nunit-version=\"2.5.0.0\" clr-version=\"2.0.50727.42\" os-version=\"Microsoft Windows NT 6.1.7601 Service Pack 1\" platform=\"Win32NT\" cwd=\"' + ISNULL(@workspace_name, 'Unknown') + '\" machine-name=\"Synapse-Analytics\" user=\"DataValidation\" user-domain=\"ODW\" />\n  <culture-info current-culture=\"en-US\" current-uiculture=\"en-US\" />\n  <test-suite type=\"Assembly\" name=\"DataValidationTests\" executed=\"True\" result=\"Failure\" success=\"False\" time=\"0\" asserts=\"1\">\n    <results>\n      <test-case name=\"DataValidation.NoResults.MissingData\" executed=\"True\" result=\"Failure\" success=\"False\" time=\"0\" asserts=\"1\">\n        <failure>\n          <message>No E2E test results found in the last ' + CAST(@hours_back AS NVARCHAR) + ' hours. This may indicate that data validation tests did not run or completed successfully.</message>\n          <stack-trace>At: logging.e2e_test_results table query</stack-trace>\n        </failure>\n      </test-case>\n    </results>\n  </test-suite>\n</test-results>';\n        \n        SELECT @xml_output as XmlOutput, @test_count as TestCount, @failure_count as FailureCount;\n        RETURN;\n    END\n    \n    -- Generate NUnit XML format\n    SET @xml_output = N'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<test-results xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"nunit_schema_25.xsd\" name=\"E2E Data Validation Tests\" total=\"' + CAST(@test_count AS NVARCHAR) + '\" errors=\"0\" failures=\"' + CAST(@failure_count AS NVARCHAR) + '\" not-run=\"0\" inconclusive=\"0\" ignored=\"0\" skipped=\"0\" invalid=\"0\" date=\"' + CONVERT(NVARCHAR, @execution_time, 126) + '\" time=\"' + CONVERT(NVARCHAR, @execution_time, 114) + '\">\n  <environment nunit-version=\"2.5.0.0\" clr-version=\"2.0.50727.42\" os-version=\"Microsoft Windows NT 6.1.7601 Service Pack 1\" platform=\"Win32NT\" cwd=\"' + ISNULL(@workspace_name, 'Unknown') + '\" machine-name=\"Synapse-Analytics\" user=\"DataValidation\" user-domain=\"ODW\" />\n  <culture-info current-culture=\"en-US\" current-uiculture=\"en-US\" />\n  <test-suite type=\"Assembly\" name=\"DataValidationTests\" executed=\"True\" result=\"' + \n    CASE WHEN @failure_count = 0 THEN 'Success' ELSE 'Failure' END + '\" success=\"' + \n    CASE WHEN @failure_count = 0 THEN 'True' ELSE 'False' END + '\" time=\"30\" asserts=\"' + CAST(@test_count AS NVARCHAR) + '\">\n    <results>';\n\n    -- Add individual test cases\n    WITH LatestTestResults AS (\n        SELECT \n            entity,\n            test_status,\n            test_timestamp,\n            std_count,\n            hrm_count,\n            hrm_active_count,\n            cur_count,\n            std_to_hrm_match,\n            hrm_to_cur_match,\n            cur_unique_check,\n            CASE \n                WHEN std_to_hrm_match = 1 AND hrm_to_cur_match = 1 AND cur_unique_check = 1 \n                THEN 'DataValidation.' + entity + '.AllChecks'\n                ELSE 'DataValidation.' + entity + '.PartialChecks'\n            END AS test_case_name,\n            CASE \n                WHEN test_status != 'PASSED' THEN \n                    'Test failed: ' + test_status + \n                    '. STD count: ' + CAST(std_count AS NVARCHAR) +\n                    ', HRM count: ' + CAST(hrm_count AS NVARCHAR) +\n                    ', CUR count: ' + CAST(cur_count AS NVARCHAR) +\n                    '. STD->HRM match: ' + CASE WHEN std_to_hrm_match = 1 THEN 'TRUE' ELSE 'FALSE' END +\n                    ', HRM->CUR match: ' + CASE WHEN hrm_to_cur_match = 1 THEN 'TRUE' ELSE 'FALSE' END +\n                    ', Unique check: ' + CASE WHEN cur_unique_check = 1 THEN 'TRUE' ELSE 'FALSE' END\n                ELSE NULL\n            END AS failure_message,\n            DATEDIFF(SECOND, test_timestamp, GETDATE()) AS test_duration,\n            ROW_NUMBER() OVER (PARTITION BY entity ORDER BY test_timestamp DESC) as rn\n        FROM logging.e2e_test_results \n        WHERE test_timestamp >= DATEADD(HOUR, -@hours_back, GETDATE())\n    )\n    SELECT @xml_output = @xml_output + CHAR(13) + CHAR(10) + \n        '      <test-case name=\"' + test_case_name + '\" executed=\"True\" result=\"' + \n        CASE WHEN test_status = 'PASSED' THEN 'Success' ELSE 'Failure' END + '\" success=\"' +\n        CASE WHEN test_status = 'PASSED' THEN 'True' ELSE 'False' END + '\" time=\"' + \n        CAST(ISNULL(test_duration, 30) AS NVARCHAR) + '\" asserts=\"1\"' +\n        CASE WHEN test_status = 'PASSED' THEN ' />' \n        ELSE '>\n        <failure>\n          <message><![CDATA[' + failure_message + ']]></message>\n          <stack-trace>Entity: ' + entity + ', Timestamp: ' + CONVERT(NVARCHAR, test_timestamp, 121) + '</stack-trace>\n        </failure>\n      </test-case>' \n        END\n    FROM LatestTestResults \n    WHERE rn = 1\n    ORDER BY entity;\n    \n    -- Close the XML\n    SET @xml_output = @xml_output + CHAR(13) + CHAR(10) + \n        '    </results>\n  </test-suite>\n</test-results>';\n    \n    -- Return the results\n    SELECT \n        @xml_output as XmlOutput, \n        @test_count as TestCount, \n        @failure_count as FailureCount,\n        @success_count as SuccessCount;\nEND",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery",
		"folder": {
			"name": "Testing/"
		}
	}
}
