{
	"name": "Inspector_Specialisms",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6845c4fd-319e-4a56-bf06-c2ef96527b54"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\n",
					"# Author: Prathap A\n",
					"# Date: 25/02/2025\n",
					"# Entity Name : Inspector Specialism \n",
					"# version : 0001"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Intialisations"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf\n",
					"from pyspark.sql.types import DateType\n",
					"from datetime import datetime\n",
					"from delta.tables import DeltaTable\n",
					"from pyspark.sql import Window\n",
					"from pyspark.sql.functions import row_number\n",
					"from pyspark.sql.types import StructType, StructField, TimestampType, StringType"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Table transform_inspector_Specialisms"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.transform_inspector_Specialisms (\n",
					"\n",
					"    StaffNumber         string,\n",
					"    Firstname           string,\n",
					"    Lastname            string,\n",
					"    QualificationName   string,\n",
					"    Proficien           string,\n",
					"    ValidFrom           string,\n",
					"\tValidTo             string,\n",
					"\tCurrent             string,\n",
					"\tValHashKey          string,\n",
					"    LastUpdated         string\n",
					" )\n",
					"    USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# "
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Table inspector_Specialisms"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.inspector_Specialisms (\n",
					"\n",
					"    StaffNumber         string,\n",
					"    Firstname           string,\n",
					"    Lastname            string,\n",
					"    QualificationName   string,\n",
					"    Proficien           string,\n",
					"    ValidFrom           string,\n",
					"\tValidTo             string,\n",
					"\tCurrent             string,\n",
					"\tValHashKey          string,\n",
					"    LastUpdated         string\n",
					" )\n",
					"    USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"DELETE from odw_harmonised_db.transform_inspector_Specialisms;\n",
					"\n",
					"insert into odw_harmonised_db.transform_inspector_Specialisms\n",
					"\t(\n",
					"    StaffNumber ,\n",
					"    Firstname ,\n",
					"    Lastname ,\n",
					"    QualificationName ,\n",
					"    Proficien,\n",
					"    ValidFrom ,\n",
					"\tValidTo  ,\n",
					"\tCurrent  ,\n",
					"\tValHashKey ,\n",
					"    LastUpdated \n",
					"\t)\n",
					"select \n",
					"\tcase len(StaffNumber)\n",
					"\t when 6 then\n",
					"\tcase when StaffNumber like '50%' then concat('00',StaffNumber) \n",
					"\twhen StaffNumber like '42%' then concat('50',StaffNumber)  \n",
					"\telse StaffNumber -- RV added length part for 6 and 8 \n",
					"\tend \n",
					"\t when 8 then StaffNumber\n",
					"\telse StaffNumber end as\n",
					"\t\t\t\t\t\t\t\t\tStaffNumber,\n",
					"\t\t\t\t\t\t\t\t\tFirstname ,\n",
					"\t\t\t\t\t\t\t\t\tLastname ,\n",
					"\t\t\t\t\t\t\t\t\tQualificationName ,\n",
					"\t\t\t\t\t\t\t\t\tProficien ,\n",
					"\t\t\t\t\t\t\t\t\tnull as ValidFrom ,\n",
					"\t\t\t\t\t\t\t\t\tnull as ValidTo  ,\n",
					"\t\t\t\t\t\t\t\t\tnull as Current  ,\n",
					"\t\t\t\t\t\t\t\t\tnull as ValHashKey ,\n",
					"   \t\t\t\t\t\t\t\t    null as LastUpdated \n",
					"\tfrom odw_standardised_db.inspector_specialisms_monthly t1\n",
					"\twhere StaffNumber is not null\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"UPDATE odw_harmonised_db.transform_inspector_Specialisms\n",
					"SET ValHashKey = md5(concat_ws('|', \n",
					"    coalesce(cast(StaffNumber as string), ''), \n",
					"    coalesce(cast(Firstname as string), ''), \n",
					"    coalesce(cast(Lastname as string), ''), \n",
					"    coalesce(cast(QualificationName as string), ''), \n",
					"    coalesce(cast(Proficien as string), '')\n",
					"))"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Update Statements"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"MERGE INTO odw_harmonised_db.inspector_Specialisms AS target\n",
					"USING (\n",
					"    SELECT \n",
					"        oldSpe.StaffNumber, \n",
					"        oldSpe.QualificationName\n",
					"    FROM \n",
					"        odw_harmonised_db.inspector_Specialisms oldSpe\n",
					"    LEFT OUTER JOIN \n",
					"        odw_harmonised_db.transform_inspector_Specialisms souSpe\n",
					"    ON \n",
					"        oldSpe.StaffNumber = souSpe.StaffNumber\n",
					"        AND oldSpe.QualificationName = souSpe.QualificationName\n",
					"    WHERE \n",
					"        souSpe.StaffNumber IS NULL\n",
					") AS source\n",
					"ON \n",
					"    target.StaffNumber = source.StaffNumber\n",
					"    AND target.QualificationName = source.QualificationName\n",
					"    AND target.Current = 1\n",
					"WHEN MATCHED THEN\n",
					"UPDATE SET \n",
					"    target.Current = 0,\n",
					"    target.ValidTo = CURRENT_DATE();"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"insert INTO odw_harmonised_db.inspector_Specialisms (StaffNumber, Firstname, Lastname, QualificationName, Proficien, ValidFrom, ValidTo, Current, ValHashKey, LastUpdated)\n",
					"select souSpe.StaffNumber, souSpe.Firstname, souSpe.Lastname, souSpe.QualificationName, souSpe.Proficien, current_date(), '9999-12-31', 1, souSpe.ValHashKey, current_date()\n",
					"from odw_harmonised_db.transform_inspector_Specialisms souSpe\n",
					"left outer join odw_harmonised_db.inspector_Specialisms tarSpe\n",
					"\ton souSpe.StaffNumber = tarSpe.StaffNumber\n",
					"\tand tarSpe.Current = 1\n",
					"\tand souSpe.QualificationName = tarSpe.QualificationName\n",
					"where tarSpe.StaffNumber is null\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"insert INTO odw_harmonised_db.inspector_Specialisms (StaffNumber, Firstname, Lastname, QualificationName, Proficien, ValidFrom, ValidTo, Current, ValHashKey, LastUpdated)\n",
					"select souSpe.StaffNumber, souSpe.Firstname, souSpe.Lastname, souSpe.QualificationName, souSpe.Proficien, current_date(), '9999-12-31', 1, souSpe.ValHashKey, current_date()\n",
					"from odw_harmonised_db.transform_inspector_Specialisms souSpe\n",
					"inner join odw_harmonised_db.inspector_Specialisms tarSpe\n",
					"\ton souSpe.StaffNumber = tarSpe.StaffNumber\n",
					"\tand tarSpe.Current = 1\n",
					"\tand souSpe.QualificationName = tarSpe.QualificationName\n",
					"where tarSpe.ValHashKey <> souSpe.ValHashKey\n",
					""
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Step 1: Deduplicate the source table (newSpe)\n",
					"WITH DeduplicatedSource AS (\n",
					"    SELECT \n",
					"        StaffNumber,\n",
					"        QualificationName,\n",
					"        ValidFrom,\n",
					"        Current,\n",
					"        ROW_NUMBER() OVER (\n",
					"            PARTITION BY StaffNumber, QualificationName \n",
					"            ORDER BY ValidFrom DESC\n",
					"        ) AS row_num\n",
					"    FROM \n",
					"        odw_harmonised_db.inspector_Specialisms\n",
					"    WHERE \n",
					"        Current = 1\n",
					"        AND ValidFrom = CURRENT_DATE()\n",
					")\n",
					"\n",
					"-- Step 2: Perform the MERGE operation using the deduplicated source\n",
					"MERGE INTO odw_harmonised_db.inspector_Specialisms AS oldSpe\n",
					"USING DeduplicatedSource AS newSpe\n",
					"ON \n",
					"    oldSpe.StaffNumber = newSpe.StaffNumber\n",
					"    AND oldSpe.QualificationName = newSpe.QualificationName\n",
					"    AND oldSpe.Current = 1\n",
					"    AND oldSpe.ValidFrom < CURRENT_DATE()\n",
					"    AND newSpe.row_num = 1 -- Ensure only one row per combination\n",
					"WHEN MATCHED THEN\n",
					"UPDATE SET \n",
					"    oldSpe.Current = 0,\n",
					"    oldSpe.ValidTo = CURRENT_DATE();"
				],
				"execution_count": 9
			}
		]
	}
}