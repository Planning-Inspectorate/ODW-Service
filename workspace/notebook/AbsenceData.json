{
	"name": "AbsenceData",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "5bf03a62-6794-4d18-bf68-409f8bf35697"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Entity Name : Absence Data"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Intialisations"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf\n",
					"from pyspark.sql.types import DateType\n",
					"from datetime import datetime\n",
					"from delta.tables import DeltaTable\n",
					"from pyspark.sql import Window\n",
					"from pyspark.sql.functions import row_number\n",
					"from pyspark.sql.types import StructType, StructField, TimestampType, StringType"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"drop table odw_harmonised_db.absence_all"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.absence_all (\n",
					"   \n",
					"   \n",
					"   StaffNumber              STRING,\n",
					"\tAbsType                 STRING,\n",
					"\tSicknessGroup           STRING,\n",
					"\tStartDate               DATE ,\n",
					"\tEndDate                 DATE ,\n",
					"\tAttendanceorAbsenceType STRING,\n",
					"\tDays                    double,\n",
					"\tHrs                     double,\n",
					"\tStart                   date,\n",
					"\tEndtime                 date,\n",
					"\tCaldays                 double ,\n",
					"\tWorkScheduleRule        STRING ,\n",
					"\tWkhrs                   double ,\n",
					"\tHrsDay                  double ,\n",
					"\tWkDys                   double ,\n",
					"\tAnnualLeaveStart         date\n",
					"\n",
					"    )\n",
					"USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"SET spark.sql.legacy.timeParserPolicy = LEGACY;"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Step 1: Delete all rows from the target table\n",
					"DELETE FROM odw_harmonised_db.absence_all;\n",
					"\n",
					"-- Step 2: Insert data into the target table\n",
					"INSERT INTO odw_harmonised_db.absence_all\n",
					"(   \n",
					"    StaffNumber,            \n",
					"    AbsType,                \n",
					"    SicknessGroup,          \n",
					"    StartDate,              \n",
					"    EndDate,                \n",
					"    AttendanceorAbsenceType,\n",
					"    Days,                   \n",
					"    Hrs,                    \n",
					"    Start,                  \n",
					"    Endtime,                \n",
					"    Caldays,                \n",
					"    WorkScheduleRule,       \n",
					"    Wkhrs,                  \n",
					"    HrsDay,                 \n",
					"    WkDys,                  \n",
					"    AnnualLeaveStart      \n",
					")\n",
					"SELECT  \n",
					"    StaffNumber,\n",
					"    COALESCE(AbsType, '') AS AbsType,\n",
					"    COALESCE(SicknessGroup, '') AS SicknessGroup,\n",
					"    to_date(StartDate,'M/d/yy') as StartDate,\n",
					"    to_date(StartDate,'M/d/yy') as EndDate,\n",
					"    AttendanceorAbsenceType,\n",
					"    REPLACE(Days, ',', '') AS Days,  -- Remove commas before casting\n",
					"    REPLACE(Hrs, ',', '') AS Hrs,    -- Remove commas before casting\n",
					"    to_date('31/12/1899','dd/mm/yyyy')  as StartTime,\n",
					"    to_date('31/12/1899','dd/mm/yyyy')  as Endtime,  \n",
					"    Caldays,\n",
					"    WorkScheduleRule,\n",
					"    TRY_CAST(REPLACE(Wkhrs, ',', '') AS DOUBLE) AS Wkhrs,  -- Use TRY_CAST for safety\n",
					"    TRY_CAST(REPLACE(HrsDay, ',', '') AS DOUBLE) AS HrsDay,  -- Use TRY_CAST for safety\n",
					"    TRY_CAST(REPLACE(WkDys, ',', '') AS DOUBLE) AS WkDys,  -- Use TRY_CAST for safety\n",
					"    \n",
					"     to_date(AnnualLeaveStart,'M/d/yy')  AS AnnualLeaveStart\n",
					"FROM odw_standardised_db.hr_absence_monthly;\n",
					"\n",
					""
				],
				"execution_count": 64
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Step 3: Remove rows with null values in key columns\n",
					"DELETE FROM odw_harmonised_db.absence_all\n",
					"WHERE\n",
					"    StaffNumber IS NULL\n",
					"    OR StartDate IS NULL\n",
					"    OR EndDate IS NULL;\n",
					"\n",
					"-- Step 4: Use MERGE to remove duplicates\n",
					"MERGE INTO odw_harmonised_db.absence_all AS target\n",
					"USING (\n",
					"    SELECT \n",
					"        StaffNumber, \n",
					"        StartDate, \n",
					"        ROW_NUMBER() OVER (PARTITION BY StaffNumber, StartDate ORDER BY StaffNumber, StartDate) AS Val\n",
					"    FROM odw_harmonised_db.absence_all\n",
					") AS source\n",
					"ON target.StaffNumber = source.StaffNumber\n",
					"    AND target.StartDate = source.StartDate\n",
					"    AND source.Val > 1\n",
					"WHEN MATCHED THEN DELETE;"
				],
				"execution_count": 67
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select * from odw_harmonised_db.absence_all"
				],
				"execution_count": 69
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}