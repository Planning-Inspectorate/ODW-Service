{
	"name": "py_unit_tests_azure_function",
	"properties": {
		"folder": {
			"name": "utils/unit-tests"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f40dc6ee-acfa-4cae-8486-a2921039890c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"function_name = \"\"\n",
					"url_parameters = \"\""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"import json\n",
					"from pyspark.sql.types import *\n",
					"from pyspark.sql import DataFrame\n",
					"import pprint\n",
					"import requests as req"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"secret_name = f\"function-url-{function_name.replace('-', '')}\"\n",
					"keyvault_url = json.loads(mssparkutils.credentials.getPropertiesAll(\"ls_kv\"))[\"Endpoint\"]\n",
					"function_url = mssparkutils.credentials.getSecret(keyvault_url, secret_name)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"function_url = f\"{mssparkutils.credentials.getSecret(keyvault_url, secret_name)}{url_parameters}\"\n",
					"print(function_url)\n",
					"response = req.get(function_url)\n",
					"if response.status_code == 200:\n",
					"    text:str = response.text\n",
					"    parsed_json = json.loads(text)\n",
					"    print(len(parsed_json))\n",
					"    if len(parsed_json) > 0:\n",
					"        #we have some results, everything else is a failure\n",
					"        mssparkutils.notebook.exit(\"0\")\n",
					"    else:\n",
					"        raise Exception(\"Invalid Response\")\n",
					"else:\n",
					"    raise Exception(\"Invalid Response\")"
				],
				"execution_count": null
			}
		]
	}
}