{
	"name": "py_populate_HR_dimension_tables_protected_data",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e1e5f8a2-5c13-478d-b6b0-87f750b5f21c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build SourceSystem_Fact table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sourcesystem_fact (\r\n",
					"    SourceSystemID,\r\n",
					"    Description,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    NULL AS SourceSystemID,\r\n",
					"    \"SAP HR\" AS Description,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate, \r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(\"SAP HR\") as RowID\r\n",
					";\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sourcesystem_fact (\r\n",
					"    SourceSystemID,\r\n",
					"    Description,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    ROW_NUMBER() OVER (ORDER BY Description NULLS LAST) AS SourceSystemID,\r\n",
					"    Description,\r\n",
					"    StartDate, \r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID\r\n",
					"FROM odw_harmonised_db.sourcesystem_fact"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build diversity_dim table\r\n",
					"\r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW diversity_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ethnic_Origin IS NULL\r\n",
					"        THEN first(T3.DiversityID)\r\n",
					"        ELSE NULL\r\n",
					"    END as DiversityID, -- surrogate key\r\n",
					"    Ethnic_Origin AS Description,\r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(Ethnic_Origin) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ethnic_Origin = first(T3.Description) AND md5(concat(T1.Ethnic_Origin)) <> first(T3.RowID)     \r\n",
					"        THEN 'Y'\r\n",
					"        WHEN first(T3.Description) IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ethnic_Origin IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"FULL JOIN odw_harmonised_db.diversity_dim T3 ON T1.Ethnic_Origin = T3.Description\r\n",
					"WHERE  (T3.IsActive = 'Y' or T3.IsActive IS NULL)\r\n",
					"    \r\n",
					"        AND (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Ethnic_Origin = T3.Description AND md5(concat(T1.Ethnic_Origin)) <> T3.RowID\r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T3.Description IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Ethnic_Origin IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					"    )\r\n",
					"\r\n",
					"    AND\r\n",
					"\r\n",
					"        T1.Ethnic_Origin IS NOT NULL\r\n",
					"\r\n",
					"GROUP BY T1.Ethnic_Origin\r\n",
					"\r\n",
					";\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY  VIEW diversity_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"\r\n",
					"    DiversityID,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From diversity_dim_new\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    DiversityID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.diversity_dim\r\n",
					"WHERE Description IN (SELECT Description FROM diversity_dim_new); -- gets original versions of updated rows\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.diversity_dim AS Target\r\n",
					"USING diversity_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.DiversityID = Target.DiversityID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   \r\n",
					"\r\n",
					"-- Insert new DiversityID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.diversity_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY DiversityID NULLS LAST) AS DiversityID, \r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.diversity_dim;\r\n",
					"\r\n",
					"Select * FROM odw_harmonised_db.diversity_dim;"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- INSERT INTO odw_standardised_db.personal_characteristics \r\n",
					"\r\n",
					"-- VALUES ('2210-3000',\t'Asian - Thai',\t'None',\t'Lesbian',\t'NOT DISABLED',\t'No',\t'No',\t'White',\t'Agnostic / Atheist',\t'LGBT',\t'AO')\r\n",
					"-- ;\r\n",
					""
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build diversity_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"-- OLD SCRIPT DO NOT USE\r\n",
					"\r\n",
					"\r\n",
					"-- INSERT OVERWRITE odw_harmonised_db.diversity_dim (\r\n",
					"--     DiversityID,\r\n",
					"--     Description,\r\n",
					"--     SourceSystemID,\r\n",
					"--     StartDate,\r\n",
					"--     EndDate,\r\n",
					"--     IngestionDate,\r\n",
					"--     ValidTo,\r\n",
					"--     RowID\r\n",
					"--  )\r\n",
					"\r\n",
					"-- SELECT\r\n",
					"--     uuid() AS DiversityID,\r\n",
					"--     Ethnic_Origin AS Description,\r\n",
					"--     first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"--     CURRENT_TIMESTAMP AS StartDate,\r\n",
					"--     NULL AS EndDate,\r\n",
					"--     CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"--     NULL AS ValidTo,\r\n",
					"--     md5(Ethnic_Origin) as RowID\r\n",
					"\r\n",
					"-- FROM odw_standardised_db.personal_characteristics T1\r\n",
					"-- LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"-- GROUP BY Ethnic_Origin;\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build disability_dim table\r\n",
					"-- INSERT OVERWRITE odw_harmonised_db.disability_dim (\r\n",
					"--     DisabilityID,\r\n",
					"--     DisabilityCode,\r\n",
					"--     Description,\r\n",
					"--     SourceSystemID,\r\n",
					"--     StartDate,\r\n",
					"--     EndDate,\r\n",
					"--     IngestionDate,\r\n",
					"--     ValidTo\r\n",
					"-- )\r\n",
					"\r\n",
					"-- SELECT\r\n",
					"--     uuid() AS DisabilityID,\r\n",
					"--     Disability_Text AS DisabilityCode,\r\n",
					"--     Disability_Code_Description AS Description, \r\n",
					"--     first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"--     CURRENT_TIMESTAMP AS StartDate,\r\n",
					"--     '9999-12-31' AS EndDate,\r\n",
					"--     CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"--     NULL AS ValidTo\r\n",
					"-- FROM odw_standardised_db.personal_characteristics T1\r\n",
					"-- LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"-- GROUP BY Disability_Text, Disability_Code_Description;\r\n",
					"\r\n",
					"-- NEW\r\n",
					"-- Build disability_dim table\r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW disability_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.Disability_Text IS NULL\r\n",
					"        THEN first(T3.DisabilityID)\r\n",
					"        ELSE NULL\r\n",
					"    END as DisabilityID, -- surrogate key\r\n",
					"    Disability_Text AS DisabilityCode,\r\n",
					"    first(T1.Disability_Code_Description) AS Description,\r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(Disability_Text) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Disability_Text = first(T3.DisabilityCode) AND md5(concat(T1.Disability_Text)) <> first(T3.RowID)     \r\n",
					"        THEN 'Y'\r\n",
					"        WHEN first(T3.DisabilityCode) IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Disability_Text IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"FULL JOIN odw_harmonised_db.disability_dim T3 ON T1.Disability_Text = T3.DisabilityCode\r\n",
					"WHERE  (T3.IsActive = 'Y' or T3.IsActive IS NULL)\r\n",
					"    \r\n",
					"        AND (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Disability_Text = T3.DisabilityCode AND md5(concat(T1.Disability_Text)) <> T3.RowID\r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T3.DisabilityCode IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Disability_Text IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					"    )\r\n",
					"\r\n",
					"    AND\r\n",
					"        T1.Disability_Text IS NOT NULL\r\n",
					"\r\n",
					"GROUP BY T1.Disability_Text\r\n",
					"\r\n",
					";\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW disability_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    DisabilityID,\r\n",
					"    DisabilityCode,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From disability_dim_new\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    DisabilityID,\r\n",
					"    DisabilityCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.disability_dim\r\n",
					"WHERE DisabilityCode IN (SELECT DisabilityCode FROM disability_dim_new); -- gets original versions of updated rows\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.disability_dim AS Target\r\n",
					"USING disability_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.DisabilityID = Target.DisabilityID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   \r\n",
					"\r\n",
					"-- Insert new DisabilityID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.disability_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY DisabilityID NULLS LAST) AS DisabilityID, \r\n",
					"    DisabilityCode,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.disability_dim;\r\n",
					"\r\n",
					"Select * FROM odw_harmonised_db.disability_dim;\r\n",
					"\r\n",
					""
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build religion_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"-- INSERT OVERWRITE odw_harmonised_db.religion_dim (\r\n",
					"--     ReligionID,\r\n",
					"--     ReligionCode,\r\n",
					"--     Description,\r\n",
					"--     SourceSystemID,\r\n",
					"--     StartDate,\r\n",
					"--     EndDate,\r\n",
					"--     IngestionDate,\r\n",
					"--     ValidTo\r\n",
					"-- )\r\n",
					"\r\n",
					"-- SELECT\r\n",
					"--     uuid() AS ReligionID,\r\n",
					"--     Religion AS ReligionCode,\r\n",
					"--     Religious_Denomination_Key AS Description, \r\n",
					"--     first(T2.SourceSystemID) as SourceSystemID,\r\n",
					"--     CURRENT_TIMESTAMP AS StartDate,\r\n",
					"--     '9999-12-31' AS EndDate,\r\n",
					"--     CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"--     NULL AS ValidTo\r\n",
					"-- FROM odw_standardised_db.personal_characteristics T1\r\n",
					"-- LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"-- GROUP BY Religion, Religious_Denomination_Key;\r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW religion_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.Religion IS NULL\r\n",
					"        THEN first(T3.DisabilityID)\r\n",
					"        ELSE NULL\r\n",
					"    END as ReligionID, -- surrogate key\r\n",
					"    Religion AS ReligionCode,\r\n",
					"    first(T1.Religious_Denomination) AS Description,\r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(Disability_Text) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Disability_Text = first(T3.ReligionCode) AND md5(concat(T1.Disability_Text)) <> first(T3.RowID)     \r\n",
					"        THEN 'Y'\r\n",
					"        WHEN first(T3.ReligionCode) IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Disability_Text IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"FULL JOIN odw_harmonised_db.religion_dim T3 ON T1.Disability_Text = T3.ReligionCode\r\n",
					"WHERE  (T3.IsActive = 'Y' or T3.IsActive IS NULL)\r\n",
					"    \r\n",
					"        AND (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Disability_Text = T3.ReligionCode AND md5(concat(T1.Disability_Text)) <> T3.RowID\r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T3.ReligionCode IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Disability_Text IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					"    )\r\n",
					"\r\n",
					"    AND\r\n",
					"        T1.Disability_Text IS NOT NULL\r\n",
					"\r\n",
					"GROUP BY T1.Disability_Text\r\n",
					"\r\n",
					";\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW religion_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    ReligionID,\r\n",
					"    ReligionCode,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From religion_dim_new\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    ReligionID,\r\n",
					"    ReligionCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.religion_dim\r\n",
					"WHERE ReligionCode IN (SELECT ReligionCode FROM religion_dim_new); -- gets original versions of updated rows\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.religion_dim AS Target\r\n",
					"USING religion_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.ReligionID = Target.ReligionID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   \r\n",
					"\r\n",
					"-- Insert new ReligionID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.religion_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY ReligionID NULLS LAST) AS ReligionID, \r\n",
					"    ReligionCode,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.religion_dim;\r\n",
					"\r\n",
					"Select * FROM odw_harmonised_db.religion_dim;\r\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build sxo_dim table\r\n",
					"-- INSERT OVERWRITE odw_harmonised_db.sxo_dim (\r\n",
					"--     SXOID,\r\n",
					"--     Description,\r\n",
					"--     SourceSystemID,\r\n",
					"--     StartDate,\r\n",
					"--     EndDate,\r\n",
					"--     IngestionDate,\r\n",
					"--     ValidTo\r\n",
					"-- )\r\n",
					"\r\n",
					"-- SELECT\r\n",
					"--     uuid() AS SXOID,\r\n",
					"--     SxO AS Description, \r\n",
					"--     first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"--     CURRENT_TIMESTAMP AS StartDate,\r\n",
					"--     '9999-12-31' AS EndDate,\r\n",
					"--     CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"--     NULL AS ValidTo\r\n",
					"-- FROM odw_standardised_db.personal_characteristics T1\r\n",
					"-- LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"-- GROUP BY SxO;\r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW sxo_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.SxO IS NULL\r\n",
					"        THEN first(T3.SXOID)\r\n",
					"        ELSE NULL\r\n",
					"    END as SXOID, -- surrogate key\r\n",
					"    SxO AS Description,\r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(SxO) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.SxO = first(T3.Description) AND md5(concat(T1.SxO)) <> first(T3.RowID)     \r\n",
					"        THEN 'Y'\r\n",
					"        WHEN first(T3.Description) IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.SxO IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"FULL JOIN odw_harmonised_db.sxo_dim T3 ON T1.SxO = T3.Description\r\n",
					"WHERE  (T3.IsActive = 'Y' or T3.IsActive IS NULL)\r\n",
					"    \r\n",
					"        AND (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN T1.SxO = T3.Description AND md5(concat(T1.SxO)) <> T3.RowID\r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T3.Description IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        ( CASE\r\n",
					"            WHEN T1.SxO IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					"    )\r\n",
					"\r\n",
					"    AND\r\n",
					"\r\n",
					"        T1.SxO IS NOT NULL\r\n",
					"\r\n",
					"GROUP BY T1.SxO\r\n",
					"\r\n",
					";\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY  VIEW sxo_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    SXOID,\r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From sxo_dim_new\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    SXOID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.sxo_dim\r\n",
					"WHERE Description IN (SELECT Description FROM sxo_dim_new); -- gets original versions of updated rows\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.sxo_dim AS Target\r\n",
					"USING sxo_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.SXOID = Target.SXOID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   \r\n",
					"\r\n",
					"-- Insert new SXOID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sxo_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY SXOID NULLS LAST) AS SXOID, \r\n",
					"    Description, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.sxo_dim;\r\n",
					"\r\n",
					"Select * FROM odw_harmonised_db.sxo_dim;"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"--drop table odw_harmonised_db.sourcesystem_fact;\r\n",
					"drop table odw_harmonised_db.secureinfo_fact"
				],
				"execution_count": 91
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build and merge secureinfo_fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.secureinfo_fact AS Target\r\n",
					"USING ( SELECT\r\n",
					"            uuid() AS SecureInfoID, -- surrogate key\r\n",
					"            T1.Ref_No AS SourceID, -- source system id\r\n",
					"            T3.DisabilityID,\r\n",
					"            T4.DiversityID,\r\n",
					"            T5.ReligionID,\r\n",
					"            T6.SXOID, \r\n",
					"            T2.SourceSystemID,\r\n",
					"            CURRENT_TIMESTAMP AS StartDate,\r\n",
					"            '9999-12-31' AS EndDate,\r\n",
					"            CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"            NULL AS ValidTo,\r\n",
					"            md5(concat(Ref_No,DisabilityID,DiversityID,ReligionID,SXOID)) as RowID,\r\n",
					"            'Y' as IsActive\r\n",
					"\r\n",
					"        FROM odw_standardised_db.personal_characteristics T1\r\n",
					"        LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"        LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"        LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"        LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"        LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					"    ) AS Source\r\n",
					"\r\n",
					"ON Source.SourceID = Target.SourceID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED AND Target.RowID <> Source.RowID\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;    \r\n",
					"\r\n",
					"-- Insert changed data as new row\r\n",
					"\r\n",
					"INSERT INTO odw_harmonised_db.secureinfo_fact (\r\n",
					"    SecureInfoID,\r\n",
					"    SourceID,\r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SecureInfoID, -- surrogate key\r\n",
					"    T1.Ref_No AS SourceID, -- source system id\r\n",
					"    T3.DisabilityID,\r\n",
					"    T4.DiversityID,\r\n",
					"    T5.ReligionID,\r\n",
					"    T6.SXOID, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    'null' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) as RowID,\r\n",
					"    'Y' as IsActive\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					"LEFT JOIN odw_harmonised_db.secureinfo_fact T7 ON T1.Ref_No = T7.SourceID\r\n",
					"WHERE T1.Ref_No = T7.SourceID AND md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) <> T7.RowID;\r\n",
					"\r\n",
					"-- Deactivate old rows\r\n",
					"\r\n",
					"UPDATE odw_harmonised_db.secureinfo_fact\r\n",
					"    SET T1.IsActive = 'N',\r\n",
					"        T1.EndDate = date_sub(current_timestamp,1)\r\n",
					"    FROM odw_harmonised_db.secureinfo_fact T1\r\n",
					"        LEFT JOIN odw_standardised_db.personal_characteristics T2 ON T1.SourceID = T2.Ref_No\r\n",
					"        WHERE T2.Ref_No IS NULL \r\n",
					"    \r\n",
					"    -- Where SourceID IN \r\n",
					"    -- (\r\n",
					"    --     SELECT SourceID\r\n",
					"    --     FROM odw_harmonised_db.secureinfo_fact T1\r\n",
					"    --     LEFT JOIN odw_standardised_db.personal_characteristics T2 ON T1.SourceID = T2.Ref_No\r\n",
					"    --     WHERE T2.Ref_No IS NULL\r\n",
					"    -- )\r\n",
					""
				],
				"execution_count": 102
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql  \r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW secureinfo_fact_new \r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No IS NULL\r\n",
					"        THEN T7.SecureInfoID\r\n",
					"        ELSE NULL\r\n",
					"    END as SecureInfoID, -- surrogate key\r\n",
					"    T1.Ref_No AS SourceID, -- source system id\r\n",
					"    T3.DisabilityID,\r\n",
					"    T4.DiversityID,\r\n",
					"    T5.ReligionID,\r\n",
					"    T6.SXOID, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    'null' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No = T7.SourceID AND md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) <> T7.RowID    -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T7.SourceID IS NULL -- new employee\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					"FULL JOIN odw_harmonised_db.secureinfo_fact T7 ON T1.Ref_No = T7.SourceID\r\n",
					"WHERE  (T7.IsActive = 'Y' or T7.IsActive IS NULL)\r\n",
					"    \r\n",
					"        AND (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Ref_No = T7.SourceID AND md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) <> T7.RowID     \r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T7.SourceID IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        ( CASE\r\n",
					"            WHEN T1.Ref_No IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					")\r\n",
					";\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY  VIEW secureinfo_fact_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"\r\n",
					"    SecureInfoID, -- surrogate key\r\n",
					"    SourceID, -- source system id\r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From secureinfo_fact_new\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    SecureInfoID, -- surrogate key\r\n",
					"    SourceID, -- source system id\r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.secureinfo_fact\r\n",
					"WHERE SourceID IN (SELECT SourceID FROM secureinfo_fact_new); -- gets original versions of updated rows\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.secureinfo_fact AS Target\r\n",
					"USING secureinfo_fact_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.SecureInfoID = Target.SecureInfoID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.EndDate = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   \r\n",
					"\r\n",
					"-- Insert new SecureInfoID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.secureinfo_fact \r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY SecureInfoID NULLS LAST) AS SecureInfoID, \r\n",
					"    SourceID, \r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID, \r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.secureinfo_fact;\r\n",
					"\r\n",
					"SELECT * from odw_harmonised_db.secureinfo_fact where sourceID = '2210-1102';\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT * from odw_harmonised_db.secureinfo_fact where sourceID = '2210-1102'\r\n",
					""
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- amendments to personal_characteristics\r\n",
					"\r\n",
					"--DELETE FROM odw_standardised_db.personal_characteristics  where Ref_no = '2210-1103'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No IS NULL\r\n",
					"        THEN T7.SecureInfoID\r\n",
					"        ELSE NULL\r\n",
					"    END as SecureInfoID, -- surrogate key\r\n",
					"    T1.Ref_No AS SourceID, -- source system id\r\n",
					"    T3.DisabilityID,\r\n",
					"    T4.DiversityID,\r\n",
					"    T5.ReligionID,\r\n",
					"    T6.SXOID, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    'null' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No = T7.SourceID AND md5(concat(T1.Ref_No, T3.DisabilityID, T4.DiversityID, T5.ReligionID, T6.SXOID)) <> T7.RowID     \r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T7.SourceID IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.Ref_No IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData,\r\n",
					"    T7.IsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					"FULL JOIN odw_harmonised_db.secureinfo_fact T7 ON T1.Ref_No = T7.SourceID\r\n",
					"\r\n",
					"-- UPDATE odw_standardised_db.personal_characteristics \r\n",
					"-- set Ethnic_Origin = 'Black - African',\r\n",
					"--      Ethnicity = 'BME'\r\n",
					"-- where Ref_No = '2210-1102'\r\n",
					"\r\n",
					"-- INSERT INTO odw_standardised_db.personal_characteristics \r\n",
					"\r\n",
					"-- VALUES ('2210-1103',\t'White - Northern Irish',\t'None',\t'Lesbian',\t'NOT DISABLED',\t'No',\t'No',\t'White',\t'Agnostic / Atheist',\t'LGBT',\t'AO')\r\n",
					"\r\n",
					""
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Employee_Dim table \r\n",
					"\r\n",
					"-- Notes - Addresses are only supplied for Inspectors - need to check inspector count against addresses data\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.employee_dim (\r\n",
					"    EmployeeID,\r\n",
					"    FirstName,\r\n",
					"    LastName,\r\n",
					"    DOB,\r\n",
					"    NINumber,\r\n",
					"    Gender,\r\n",
					"    AddressLine1,\r\n",
					"    AddressLine2,\r\n",
					"    AddressLine3,\r\n",
					"    City,\r\n",
					"    County,\r\n",
					"    PostCode,\r\n",
					"    EmailAddress,\r\n",
					"    TelephoneNumberPersonal,\r\n",
					"    TelephoneNumberWork,\r\n",
					"    PersNumber,\r\n",
					"    EmployeeNumber,\r\n",
					"    FTE,\r\n",
					"    WorkHours,\r\n",
					"    PartTimeEmployee,\r\n",
					"    EmploymentStatus,\r\n",
					"    CivilServiceStart,\r\n",
					"    DateToCurrentJob,\r\n",
					"    SeniorityDate,\r\n",
					"    OrgStartDate,\r\n",
					"    FixTermEndDate,\r\n",
					"    LoanStartDate,\r\n",
					"    LoanEndDate,\r\n",
					"    PayrollArea,\r\n",
					"    AssignmentNumber,\r\n",
					"    EmployeeGroup,\r\n",
					"    AnnualSalary,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT \r\n",
					"    uuid(), --EmployeeID\r\n",
					"    T1.First_name as FirstName,\r\n",
					"    T1.Last_name as LastName,\r\n",
					"    T1.Birth_date as DOB,\r\n",
					"    T1.NI_number as NINumber,\r\n",
					"    T1.Gender_Key as Gender,\r\n",
					"    T2.Street_and_House_Number as AddressLine1,\r\n",
					"    T2.`2nd_Address_Line` as AddressLine2,\r\n",
					"    T2.District as AddressLine3,\r\n",
					"    T2.City as City,\r\n",
					"    T2.Region_State_Province_Count as County,\r\n",
					"    T2.Postal_Code as PostCode,\r\n",
					"    T3.Email_Address as EmailAddress,\r\n",
					"    T2.Personal_Mobile as TelephoneNumberPersonal,\r\n",
					"    T2.Work_Mobile as TelephoneNumberWork,\r\n",
					"    T2.Staff_Number as PersNumber,\r\n",
					"    T1.Pers_No as EmployeeNumber,\r\n",
					"    T1.FTE,\r\n",
					"    T1.Wk_hrs as WorkHours,\r\n",
					"    T1.`Indicator_Part-Time_Employee` as PartTimeEmployee,\r\n",
					"    T1.Employment_Status as EmploymentStatus,\r\n",
					"    T1.Civil_Service_Start as CivilServiceStart,\r\n",
					"    T1.Date_to_Current_Job as DateToCurrentJob,\r\n",
					"    T1.Seniority_Date as SeniorityDate,\r\n",
					"    T1.Org_Start_Date as OrgStartDate,\r\n",
					"    T1.Fix_Term_End_Date as FixTermEndDate,\r\n",
					"    T1.Loan_Start_Date as LoanStartDate,\r\n",
					"    T1.Loan_End_Date as LoadEndDate,\r\n",
					"    T1.Payroll_Area as PayrollArea,\r\n",
					"    T1.Assignment_Number as AssignmentNumber,\r\n",
					"    T1.Employee_Group as EmployeeGroup,\r\n",
					"    T1.Annual_salary as AnnualSalary,\r\n",
					"    T4.SourceSystemID,\r\n",
					"    current_timestamp as StartDate,\r\n",
					"    '9999-12-31' as EndDate,\r\n",
					"    current_timestamp as IngestDate,\r\n",
					"    null as ValidTo\r\n",
					"\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_standardised_db.vw_addresses T2 ON T1.Pers_No = T2.Staff_Number\r\n",
					"LEFT JOIN odw_standardised_db.vw_email T3 ON T2.Staff_Number = T3.Staff_Number\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T4 ON \"SAP HR\" = T4.Description\r\n",
					"\r\n",
					"-- select T1.*\r\n",
					"-- from odw_standardised_db.vw_addresses t1\r\n",
					"-- LEFT JOIN odw_standardised_db.vw_saphr t2 on t1.Staff_Number = t2.Pers_No\r\n",
					"-- where t2.pers_no is null\r\n",
					""
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.employee_dim"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- select * from odw_standardised_db.saphr\r\n",
					"-- where Pers_No in ('500161',\r\n",
					"-- '50424642',\r\n",
					"-- '50426364',\r\n",
					"-- '50426375',\r\n",
					"-- '50426387',\r\n",
					"-- '50427420',\r\n",
					"-- '50427469',\r\n",
					"-- '50427470',\r\n",
					"-- '50427471',\r\n",
					"-- '50427472',\r\n",
					"-- '50427474',\r\n",
					"-- '50427476',\r\n",
					"-- '50427478',\r\n",
					"-- '50427479',\r\n",
					"-- '50427480',\r\n",
					"-- '50427482',\r\n",
					"-- '50427483',\r\n",
					"-- '50427484',\r\n",
					"-- '50427499',\r\n",
					"-- '50427536',\r\n",
					"-- '50427568',\r\n",
					"-- '50427711',\r\n",
					"-- '50427712',\r\n",
					"-- '50427713',\r\n",
					"-- '50427715',\r\n",
					"-- '50427718',\r\n",
					"-- '50427719'\r\n",
					"-- )"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build PersonnelArea_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PersonnelArea_dim (\r\n",
					"    PersonnelAreaID,\r\n",
					"    PersonnelAreaCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT \r\n",
					"    uuid() AS PersonnelAreaID,\r\n",
					"    T1.PA AS PersonnelAreaCode,\r\n",
					"    First(T1.Personnel_Area) AS Description, \r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.PA\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build PersonnelSubArea_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PersonnelSubArea_dim (\r\n",
					"    PersonnelSubAreaID,\r\n",
					"    PersonnelSubAreaCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT \r\n",
					"    uuid() AS PersonnelSubAreaID,\r\n",
					"    T1.PSubarea as PersonnelSubAreaCode,\r\n",
					"    First(T1.Personnel_Subarea) AS Description,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.PSubarea"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build EmployeeLeavers_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.EmployeeLeavers_dim (\r\n",
					"    EmployeeLeaversID,\r\n",
					"    EmployeeID,\r\n",
					"    ReasonForLeaving,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS EmployeeLeaversID,\r\n",
					"    T3.EmployeeID, -- FK to Employee_dim table\r\n",
					"    Reason_For_Action AS ReasonForLeaving, \r\n",
					"    T2.SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_leavers T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Pers_No = T3.PersNumber;\r\n",
					"\r\n",
					""
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build WorkSchedule_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.WorkSchedule_dim (\r\n",
					"    WorkScheduleID,\r\n",
					"    WorkScheduleRule,\r\n",
					"    WorkWeekDays,\r\n",
					"    WorkWeekHours,\r\n",
					"    WorkDayHours,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS WorkScheduleID,\r\n",
					"    Work_Schedule_Rule AS WorkScheduleRule,\r\n",
					"    WkDys AS WorkWeekDays,\r\n",
					"    Wk_hrs AS WorkWeekHours,\r\n",
					"    Hrs_Day AS WorkDayHours,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Work_Schedule_Rule, WkDys, Wk_hrs, Hrs_Day ;"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Specialism_dim table -- CHECK LOGIC\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Specialism_dim (\r\n",
					"    SpecialismID,\r\n",
					"    EmployeeID,\r\n",
					"    Qualification,\r\n",
					"    Proficiency,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SpecialismID,\r\n",
					"    first(T3.EmployeeID), -- FK to Employee_Dim\r\n",
					"    Qualification_Name AS Qualification,\r\n",
					"    Proficien AS Proficiency,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_specialisms T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Staff_Number = T3.PersNumber\r\n",
					"GROUP BY Staff_Number, Qualification_Name, Proficien;\r\n",
					""
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build LeaveEntitlement_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.LeaveEntitlement_dim (\r\n",
					"    LeaveEntitlementID,\r\n",
					"    EmployeeID,\r\n",
					"    LeaveDaysPerYear,\r\n",
					"    LeaveDeduction,\r\n",
					"    LeaveYearStart,\r\n",
					"    LeaveYearEnd,\r\n",
					"    AbsenceQuotaType,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS LeaveEntitlementID,\r\n",
					"    T3.EmployeeID, -- FK to Employee_Dim\r\n",
					"    Number AS LeaveDaysPerYear,\r\n",
					"    Deduction AS LeaveDeduction,\r\n",
					"    Ded_from AS LeaveYearStart,\r\n",
					"    Ded_To AS LeaveYearEnd,\r\n",
					"    Absence_Quota_type AS AbsenceQuotaType,\r\n",
					"    T2.SourceSystemID AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_leave T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Staff_Number = T3.PersNumber\r\n",
					"\r\n",
					"-- Select * from odw_harmonised_db.LeaveEntitlement_dim "
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build absence_dim table \r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Absence_dim (\r\n",
					"    AbsenceID,\r\n",
					"    EmployeeID,\r\n",
					"    StaffNumber,\r\n",
					"    Type,\r\n",
					"    SicknessGroup,\r\n",
					"    AbsenceStartDate,\r\n",
					"    AbsenceEndDate,\r\n",
					"    Days,\r\n",
					"    CalendarDays,\r\n",
					"    WorkScheduleID,\r\n",
					"    AnnualLeaveStart,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS AbsenceID,\r\n",
					"    T4.EmployeeID,\r\n",
					"    T1.Staff_Number as StaffNumber,\r\n",
					"    T1.Attendance_or_Absence_Type as Type,\r\n",
					"    T1.Sickness_Group as SicknessGroup,\r\n",
					"    T1.Start_Date as AbsenceStartDate,\r\n",
					"    T1.End_Date as AbsenceEndDate,\r\n",
					"    T1.Days,\r\n",
					"    T1.Cal_Days as CalendarDays,\r\n",
					"    T3.WorkScheduleID,\r\n",
					"    T1.Annual_Leave_Start AS AnnualLeaveStart,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.workschedule_dim T3 ON  T1.Work_Schedule_Rule = T3.WorkScheduleRule AND  \r\n",
					"                                                    T1.Wk_hrs = T3.WorkWeekHours AND\r\n",
					"                                                    T1.Hrs_Day = T3.WorkDayHours AND\r\n",
					"                                                    T1.WkDys = T3.WorkWeekDays\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T4 ON T1.Staff_Number = T4.PersNumber"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build contract_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.contract_dim (\r\n",
					"    ContractID,\r\n",
					"    ContractCode,\r\n",
					"    Description,\r\n",
					"    ContractTypeCode,\r\n",
					"    ContractType,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ContractID,\r\n",
					"    T1.WorkC as ContractCode, \r\n",
					"    First(T1.Work_Contract) as Description,\r\n",
					"    T1.CT as ContractTypeCode,\r\n",
					"    First(T1.Contract_Type) as ContractType,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.WorkC, T1.Work_Contract, T1.CT, T1.Contract_Type"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build payband_dim table  - table is incorrect\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.payband_dim (\r\n",
					"    PayBandID,\r\n",
					"    PSGroupCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS PayBandID,\r\n",
					"    PS_Group  AS PSGroupCode,\r\n",
					"    First(Pay_Band_Description) AS Description,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.PS_Group\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build position_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.position_dim (\r\n",
					"    PositionID,\r\n",
					"    PositionCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS PositionID,\r\n",
					"    T1.PositionID  AS PositionCode, -- cell AH\r\n",
					"    First(PositionName)  AS Description, -- cell AI\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.PositionID"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build PINSLocation_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PINS_Location_dim (\r\n",
					"    LocationID,\r\n",
					"    LocationCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS LocationID,\r\n",
					"    Loc  AS LocationCode, -- check\r\n",
					"    First(Location)  AS Description,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Loc"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build OrganisationUnit_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.OrganisationUnit_dim (\r\n",
					"    OrganisationUnitID,\r\n",
					"    OrganisationUnit,\r\n",
					"    Description,\r\n",
					"    OrganisationUnitKey,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS OrganisationUnitID,\r\n",
					"    T1.Org_unit as OrganisationUnit,\r\n",
					"    T1.Organizational_Unit AS Description,\r\n",
					"    T1.Organizational_Key12 AS OrganisationUnitKey,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Org_unit, T1.Organizational_Unit, T1.Organizational_Key12"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build CostCenter_Dim table  \r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.CostCenter_Dim (\r\n",
					"    CostCenterID,\r\n",
					"    CostCenterCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS CostCenterID,\r\n",
					"    T1.Cost_Ctr AS CostCenterCode,\r\n",
					"    First(T1.Cost_Centre) AS Description,\r\n",
					"    First(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Cost_Ctr"
				],
				"execution_count": 50
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Employee_HR_Hierarchy_Dim table  \r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Employee_HR_Hierarchy_Dim (\r\n",
					"    EmployeeHRHierarchyID,\r\n",
					"    EmployeeID,\r\n",
					"    ManagerEmployeeID,\r\n",
					"    CounterSignManagerID, -- join back on first name and last name\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS EmployeeHRHierarchyID,\r\n",
					"    T3.EmployeeID AS EmployeeID,\r\n",
					"    T4.EmployeeID as ManagerEmployeeID,\r\n",
					"    T5.EmployeeID AS CounterSignManagerID,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    '9999-12-31' AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.vw_saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Pers_No = T3.PersNumber\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T4 ON T1.Pers_No_2 = T4.PersNumber\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T5 ON T1.Counter_Sign_Manager = CONCAT(T5.FirstName,' ', T5.LastName)"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build FACT - HR_Record_Fact\r\n",
					"\r\n",
					"Select\r\n",
					"    -- uuid() as HRRecordID,\r\n",
					"    -- T2.EmployeeID,\r\n",
					"    -- T1.CoCd as CoCd, -- do we need this, always the same\r\n",
					"    -- T1.Company_Code as CompanyCode, -- do we need this, always the same\r\n",
					"    -- T3.PersonnelAreaID,\r\n",
					"    -- T4.PersonnelSubAreaID,\r\n",
					"    -- T5.OrganisationUnitID,\r\n",
					"    -- T6.ContractID,\r\n",
					"    -- T7.PayBandID,\r\n",
					"    -- T8.CostCenterID,\r\n",
					"    -- T9.PositionID,\r\n",
					"    -- T10.ManagersEmployeeID,\r\n",
					"    -- null as ManagerPositionID,\r\n",
					"    -- T10.CounterSignManagerID,\r\n",
					"    -- T11.LocationID,\r\n",
					"    -- T13.WorkScheduleID,\r\n",
					"    -- T14.SpecialismID\r\n",
					"        \r\n",
					"    count(*)\r\n",
					"\r\n",
					"From odw_standardised_db.vw_saphr T1 -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T2                 ON T1.Pers_No = T2.PersNumber -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.personnelarea_dim T3            ON T1.PA = T3.PersonnelAreaCode -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.personnelsubarea_dim T4         ON T1.PSubarea = T4.PersonnelSubAreaCode -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.organisationunit_dim T5         ON T1.Org_Unit = T5.OrganisationUnit AND -- 997\r\n",
					"                                                               T1.Organizational_Unit = T5.Description AND \r\n",
					"                                                               T1.Organizational_Key12 = T5.OrganisationUnitKey\r\n",
					"LEFT JOIN odw_harmonised_db.contract_dim T6                 ON T1.WorkC = T6.ContractCode AND -- 997\r\n",
					"                                                               T1.Work_Contract = T6.Description AND\r\n",
					"                                                               T1.CT = T6.ContractTypeCode AND \r\n",
					"                                                               T1.Contract_Type = T6.ContractType\r\n",
					"LEFT JOIN odw_harmonised_db.payband_dim T7                  ON T1.PS_Group = T7.PSGroupCode -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.costcenter_dim T8               ON T1.Cost_Ctr = T8.CostCenterCode --997\r\n",
					"LEFT JOIN odw_harmonised_db.position_dim T9                 ON T1.PositionID = T9.PositionCode -- this may change -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.employee_hr_hierarchy_dim T10   ON T2.EmployeeID = T10.EmployeeID -- 997\r\n",
					"LEFT JOIN odw_harmonised_db.pins_location_dim T11           ON T1.Loc = T11.LocationCode -- 997\r\n",
					"--LEFT JOIN odw_harmonised_db.absence_dim T12 ON T1.Pers_No = T12.StaffNumber\r\n",
					"--LEFT JOIN odw_harmonised_db.workschedule_dim T13 ON T12.WorkScheduleID = T13.WorkScheduleID  --Employees have multiple work schedules based on the absences data is work schedule anywhere else?\r\n",
					"--LEFT JOIN odw_harmonised_db.specialism_dim T14 ON T2.EmployeeID = T14.EmployeeID -- will cause duplication\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Hashbytes option**\r\n",
					"- does the system primary key already exist? Yes - do hashbytes of all columns exist date columns if we generated i.e. any column we want to check for a change\r\n",
					"- No - find the changed row, update old, insert new "
				]
			}
		]
	}
}