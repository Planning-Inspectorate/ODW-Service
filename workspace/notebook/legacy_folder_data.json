{
	"name": "legacy_folder_data",
	"properties": {
		"description": "This is the S51 advice curated table for ODT consumption",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "b4770c90-7d24-42ef-b24f-ea57d02fb893"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_legacy_folder_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"\n",
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_legacy_folder_data\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"\n",
					"    CAST(AD.NSIPAdviceID as INT)\t\t\t\t\t\t    AS adviceId,\n",
					"    CAST(AD.AdviceNodeID as INT)                            AS caseId,\n",
					"    AD.AdviceReference\t\t\t\t\t\t\t\t\t    AS adviceReference,\n",
					"    AD.CaseReference\t\t\t\t\t\t\t\t\t    AS caseReference,\n",
					"    AD.AdviceTitle\t\t\t\t\t\t\t\t\t        AS title,\n",
					"    AD.Enquirer                                             AS from,\n",
					"    AD.EnquirerOrganisation                                 AS agent,\n",
					"    LOWER(AD.EnquiryMethod)                                 AS method,\n",
					"    AD.EnquiryDate                                          AS enquiryDate,\n",
					"    AD.Enquiry                                              AS enquiryDetails,\n",
					"    AD.AdviceFrom                                           AS adviceGivenBy,\n",
					"    AD.AdviceDate                                           AS adviceDate,\n",
					"    AD.Advice                                               AS adviceDetails,\n",
					"    LOWER(AD.AdviceStatus)                                  AS status,\n",
					"    \"unredacted\"                                            AS redactionStatus,\n",
					"    CASE\n",
					"        WHEN AD.AttachmentID = 'None'\n",
					"        THEN NULL\n",
					"        ELSE AD.AttachmentID\n",
					"    END                                                     AS attachmentIds\n",
					"\n",
					"FROM odw_harmonised_db.casework_nsip_advice_dim \t        AS AD"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.legacy_folder_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"spark = SparkSession.builder.getOrCreate()\n",
					"view_df = spark.sql('SELECT * FROM odw_curated_db.vw_legacy_folder_data')\n",
					"view_df.write.mode(\"overwrite\").saveAsTable('odw_curated_db.legacy_folder_data')"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT * FROM odw_curated_db.legacy_folder_data"
				],
				"execution_count": 3
			}
		]
	}
}