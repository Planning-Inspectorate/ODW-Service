{
	"name": "Horizon_appeals_events_harmonised",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Appeals Event"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2ee6ce4d-b174-4de2-a8e0-e7120c4f3ab8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_Horizon_appeals_event\r\n",
					"AS\r\n",
					"SELECT\r\n",
					"    raw.*\r\n",
					"FROM \r\n",
					"    odw_standardised_db.horizon_appeals_event AS raw\r\n",
					"    INNER JOIN (\r\n",
					"                SELECT -- Get only the latest data for cases that haven't been migrated\r\n",
					"                    Horizon.casenumber\r\n",
					"                    ,Horizon.eventId\r\n",
					"                    ,MAX(Horizon.ingested_datetime) AS Last_update\r\n",
					"                FROM\r\n",
					"                    odw_standardised_db.horizon_appeals_event AS Horizon\r\n",
					"                GROUP BY\r\n",
					"                    Horizon.casenumber\r\n",
					"                    ,Horizon.eventId) AS Dedupe\r\n",
					"        ON raw.casenumber = Dedupe.casenumber\r\n",
					"        AND raw.casenumber = Dedupe.casenumber\r\n",
					"        AND raw.ingested_datetime = Dedupe.Last_update\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT \r\n",
					"    *\r\n",
					"FROM\r\n",
					"    vw_Horizon_appeals_event AS raw\r\n",
					"    LEFT OUTER JOIN odw_harmonised_db.appeal_event AS target\r\n",
					"        ON CONCAT(raw.casenumber, '-',raw.eventId) = target.eventID"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}