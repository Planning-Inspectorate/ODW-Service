{
	"name": "nsip-project-subscribe",
	"properties": {
		"folder": {
			"name": "odt-source-to-raw"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "056f0423-9678-4de6-943f-995d2a01f894"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# NSIP Project Subscribe\n",
					"\n",
					"Using a predefined subscription to a topic; read the messages and save them to the data lake\n",
					"\n",
					"See https://learn.microsoft.com/en-us/samples/azure/azure-sdk-for-python/servicebus-samples/ for servicebus samples\n",
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Sets the notebook variables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"secret_name=\"odt-message-queue-connection-string\"\n",
					"kv_linked_service=\"ls_kv\"\n",
					"topic_name=\"nsip-project\"\n",
					"#subscription_name=\"nsip-project-odw\"\n",
					"subscription_name=\"nsip-project-poc-subscriber\"\n",
					"table_name=\"odw_curated_db.employee\"\n",
					"custom_props_attributes=[\"_change_type\"]"
				],
				"execution_count": 32
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Get Servicebus connectionstring from Key Vault"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"spark = SparkSession.builder.getOrCreate()\n",
					"akv_name=spark.sparkContext.environment.get('keyVaultName', 'get')\n",
					"from notebookutils import mssparkutils\n",
					"conn_str = mssparkutils.credentials.getSecret(akv_name, secret_name, kv_linked_service)\n",
					""
				],
				"execution_count": 33
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Get the latest messages from the subscription and write to the data lake"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from azure.servicebus import ServiceBusClient, ServiceBusMessage\n",
					"\n",
					"servicebus_client = ServiceBusClient.from_connection_string(conn_str=conn_str, logging_enable=True)\n",
					"\n",
					"try:\n",
					"    with servicebus_client:\n",
					"        receiver = servicebus_client.get_subscription_receiver(\n",
					"            topic_name=topic_name,\n",
					"            subscription_name=subscription_name\n",
					"        )\n",
					"        with receiver:\n",
					"            \n",
					"            counter = 0\n",
					"\n",
					"            received_msgs = receiver.peek_messages(max_message_count=10, timeout=5)\n",
					"            #received_msgs = receiver.receive_messages(max_message_count=10, max_wait_time=5)\n",
					"\n",
					"            for msg in received_msgs:\n",
					"                print(str(counter) +\":\" +str(msg) +\"\\n\")\n",
					"                counter+=1\n",
					"                #TODO send messages\n",
					"                \n",
					"                \n",
					"                \n",
					"                #receiver.complete_message(msg)\n",
					"            \n",
					"except Exception as e:\n",
					"    print(f\"{e}\")"
				],
				"execution_count": 45
			}
		]
	}
}