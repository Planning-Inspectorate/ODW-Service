{
	"name": "mipins_hr_measures",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "70963307-6cd8-4f43-8c71-68efd8e59a86"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"expected_from = ''"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"if expected_from == '':\n",
					"    spark.sql(\"SET EXPECTED_FROM_VAR = current_date();\")\n",
					"else:\n",
					"    spark.sql(f\"SET EXPECTED_FROM_VAR = '{expected_from}'\")\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW staff_cost AS \n",
					"SELECT DISTINCT\n",
					"    h.pers_no as EmployeeID,\n",
					"    h.ps_group as Grade, \n",
					"\th.annual_salary as Salary, \n",
					"    cast(cast(h.annual_salary as float)/(365.0*7.4) as float) as HourlyRate,\n",
					"    cast(${EXPECTED_FROM_VAR} as date) as ReportMonthEndDate,\n",
					"    le.LeaveDaysPerYear as LeaveAllowance,\n",
					"    cast(case sign(datediff(day, cast(le.LeaveYearStart as date), ${EXPECTED_FROM_VAR}))\n",
					"\t\t\t\twhen 1 then le.LeaveYearStart\n",
					"\t\t\t\twhen 0 then le.LeaveYearStart\n",
					"\t\t\t\telse dateadd(year, -1, le.LeaveYearStart)\n",
					"\t\t\tend as date) as LeaveStartDate,\n",
					"    le.leavedaysperyear*(1 - abs((((datediff(day, cast(\n",
					"                                                    CASE sign(datediff(day, cast(le.leaveyearstart AS date), ${EXPECTED_FROM_VAR}))\n",
					"                                                    WHEN 1 THEN\n",
					"                                                    le.leaveyearstart\n",
					"                                                    ELSE dateadd(year, -1, le.leaveyearstart)\n",
					"                                                    END\n",
					"                                                    AS date), ${EXPECTED_FROM_VAR}))/364.25)%1))) AS ExpectedLeaveHoursRemaining\n",
					"    \n",
					"FROM odw_standardised_db.vw_saphr h\n",
					"LEFT JOIN odw_harmonised_db.hr_leave_entitlement_dim le on h.pers_no = le.EmployeeID\n",
					"WHERE\n",
					"    le.AbsenceQuotaType = 'Annual Leave / P&P' \n",
					"    AND le.IsActive = 'Y'"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW carried_over AS \n",
					"SELECT DISTINCT\n",
					"    h.pers_no AS EmployeeID,\n",
					"    FORMAT_NUMBER( \n",
					"        CASE\n",
					"            SIGN(le.LeaveDaysPerYear - 148) \n",
					"            WHEN\n",
					"                1 \n",
					"            THEN\n",
					"                148 \n",
					"            WHEN\n",
					"                0 \n",
					"            THEN\n",
					"                148 \n",
					"            ELSE\n",
					"                le.LeaveDaysPerYear \n",
					"        END\n",
					"    , 2) AS CarriedOverHours \n",
					"FROM\n",
					"    odw_standardised_db.vw_saphr h \n",
					"    LEFT JOIN\n",
					"        odw_harmonised_db.hr_leave_entitlement_dim le \n",
					"        ON h.pers_no = le.EmployeeID \n",
					"WHERE\n",
					"    le.AbsenceQuotaType = 'Brought Forward' \n",
					"    AND le.IsActive = 'Y';"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW leave_taken AS \n",
					"SELECT DISTINCT\n",
					"   a.EmployeeID,\n",
					"   CASE\n",
					"      WHEN\n",
					"         sc.ReportMonthEndDate >= a.AbsenceEndDate \n",
					"      THEN\n",
					"         a.Hours \n",
					"      ELSE\n",
					"         a.Hours - (w.WorkDayHours * datediff(a.AbsenceEndDate, sc.ReportMonthEndDate)) \n",
					"   END\n",
					"   AS LeaveHours, \n",
					"   a.Days, \n",
					"   a.Hours, \n",
					"   a.CalendarDays, \n",
					"   a.AbsenceStartDate, \n",
					"   a.AbsenceEndDate, \n",
					"   sc.LeaveStartDate \n",
					"FROM\n",
					"   odw_harmonised_db.hr_absence_dim a \n",
					"   LEFT JOIN\n",
					"      odw_harmonised_db.hr_work_schedule_dim w \n",
					"      ON a.WorkScheduleID = w.WorkScheduleID \n",
					"   LEFT JOIN\n",
					"      staff_cost sc \n",
					"      ON a.EmployeeID = sc.EmployeeID \n",
					"WHERE\n",
					"   a.AbsenceType IN \n",
					"   (\n",
					"      'PT Annual / P&P Leave', 'FT Annual / Priv Leave'\n",
					"   )\n",
					"   AND a.AbsenceStartDate BETWEEN sc.LeaveStartDate AND sc.ReportMonthEndDate \n",
					"   AND a.IsActive = 'Y'\n",
					"ORDER BY\n",
					"   EmployeeID, AbsenceStartDate"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW leave_taken_fixed AS \n",
					"SELECT\n",
					"   EmployeeID,\n",
					"   FORMAT_NUMBER(SUM(LeaveHours), 2) AS LeaveHoursTaken \n",
					"FROM\n",
					"   leave_taken \n",
					"WHERE\n",
					"   EmployeeID IS NOT NULL \n",
					"   AND LeaveStartDate <= AbsenceStartDate \n",
					"GROUP BY\n",
					"   EmployeeID \n",
					"ORDER BY\n",
					"   EmployeeID"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW mipins_hr_measures\n",
					"\n",
					"     AS\n",
					"\t \n",
					"SELECT DISTINCT\n",
					"\th.pers_no,\n",
					"\th.first_name,\n",
					"\th.last_name,\n",
					"\th.employee_no,\n",
					"\th.cocd,\n",
					"\th.company_code,\n",
					"\th.pa,\n",
					"\th.personnel_area,\n",
					"\th.psubarea,\n",
					"\th.personnel_subarea,\n",
					"\th.org_unit,\n",
					"\th.organizational_unit,\n",
					"\th.organizational_key1,\n",
					"\th.organizational_key2,\n",
					"\th.workc,\n",
					"\th.work_contract,\n",
					"\th.ct,\n",
					"\th.contract_type,\n",
					"\th.ps_group,\n",
					"\th.pay_band_description,\n",
					"\th.fte,\n",
					"\th.wk_hrs,\n",
					"\th.indicator_part_time_employee,\n",
					"\th.s,\n",
					"\th.employment_status,\n",
					"\th.gender_key,\n",
					"\th.tra_start_date,\n",
					"\th.tra_end_date,\n",
					"\th.tra_status,\n",
					"\th.tra_grade,\n",
					"\th.prev_persno,\n",
					"\th.actr,\n",
					"\th.reason_for_action,\n",
					"\th.position,\n",
					"\th.position_1,\n",
					"\th.cost_ctr,\n",
					"\th.cost_centre,\n",
					"\th.civil_service_start,\n",
					"\th.date_to_current_job,\n",
					"\th.seniority_date,\n",
					"\th.date_to_subst_grade,\n",
					"\th.pers_no_1,\n",
					"\th.name_of_manager_om,\n",
					"\th.manager_position,\n",
					"\th.manager_position_text,\n",
					"\th.counter_sign_manager,\n",
					"\th.loc,\n",
					"\th.location,\n",
					"\th.org_start_date,\n",
					"\th.fix_term_end_date,\n",
					"\th.loan_start_date,\n",
					"\th.loan_end_date,\n",
					"\th.eegrp,\n",
					"\th.employee_group,\n",
					"\th.annual_salary,\n",
					"\th.curr,\n",
					"\th.ni_number,\n",
					"\th.birth_date,\n",
					"\th.age_of_employee,\n",
					"\th.eo,\n",
					"\th.ethnic_origin,\n",
					"\th.nid,\n",
					"\th.rel,\n",
					"\th.religious_denomination_key,\n",
					"\th.sxo,\n",
					"\th.wage_type,\n",
					"\th.employee_subgroup,\n",
					"\th.loa_abs_type,\n",
					"\th.loa_absence_type_text,\n",
					"\th.scheme_reference,\n",
					"\th.pension_scheme_name,\n",
					"\th.disability_code,\n",
					"\th.disability_text,\n",
					"\th.disability_code_description,\n",
					"\th.parea,\n",
					"\th.payroll_area,\n",
					"\th.assignment_number,\n",
					"\th.fte_2,\n",
					"\t${EXPECTED_FROM_VAR} AS Report_MonthEnd_Date,\n",
					"\tcoalesce(sc.LeaveAllowance, 0) + coalesce(co.CarriedOverHours, 0) \tAS leave_entitlement_hrs,\n",
					"\tcoalesce(lt.LeaveHoursTaken, 0) \t\t\t\t\t\t\t\t\tAS leave_taken_hrs,\n",
					"\tround((coalesce(sc.LeaveAllowance, 0) + \n",
					"\t\tcoalesce(co.CarriedOverHours, 0) - \n",
					"\t\tcoalesce(sc.ExpectedLeaveHoursRemaining, 0)  - \n",
					"\t\tcoalesce(lt.LeaveHoursTaken, 0)), 2) \t\t\t\t\t\t\tAS leave_remaining_hours,\n",
					"\tcoalesce(round(sc.ExpectedLeaveHoursRemaining, 2), 0) \t\t\t\tAS leave_remaining_prorata_hours,\n",
					"\th.expected_from\n",
					"\t--,coalesce(round((coalesce(sc.LeaveAllowance, 0) + coalesce(co.CarriedOverHours, 0) - coalesce(sc.ExpectedLeaveHoursRemaining, 0)  - coalesce(lt.LeaveHoursTaken, 0)) * (sc.hourly_rate) * (1 + p.Total), 2),0.0) as cost_untaken_al\n",
					"from odw_standardised_db.vw_saphr h\n",
					"\tleft join staff_cost sc on cast(h.pers_no as int) = cast(sc.EmployeeID as int)\n",
					"\tleft join carried_over co on cast(sc.EmployeeID as int) = cast(co.EmployeeID as int)\n",
					"\tleft join leave_taken_fixed lt on cast(sc.EmployeeID as int) = cast(lt.EmployeeID as int)\n",
					"\tleft join odw_standardised_db.bis_pension_ernic_rates p on sc.Grade = p.Grade\n",
					"where \n",
					"\tright(cast(cast(${EXPECTED_FROM_VAR} as date) as varchar(10)),5) in ('01-31','02-28','02-29','03-31','04-30','05-31','06-30','07-31','08-31','09-30','10-31','11-30','12-31')"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View mipins_hr_measures_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW mipins_hr_measures_new \r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of EmployeeID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN h.pers_no IS NULL\r\n",
					"        THEN T5.MeasureID\r\n",
					"        ELSE NULL\r\n",
					"    END                             AS  MeasureID, -- surrogate\r\n",
					"    h.pers_no\t                    AS\tEmployeeID\t,\r\n",
					"    h.first_name\t                AS\tFirstName\t,\r\n",
					"    h.last_name\t                    AS\tLastName\t,\r\n",
					"    h.employee_no\t                AS\tEmployeeNo\t,\r\n",
					"    h.cocd\t                        AS\tCoCd\t,\r\n",
					"    h.company_code\t                AS\tCompanyCode\t,\r\n",
					"    h.pa\t                        AS\tPA\t,\r\n",
					"    h.personnel_area\t            AS\tPersonnelArea\t,\r\n",
					"    h.psubarea\t                    AS\tPSubArea\t,\r\n",
					"    h.personnel_subarea\t            AS\tPersonnelSubArea\t,\r\n",
					"    h.org_unit\t                    AS\tOrgUnit\t,\r\n",
					"    h.organizational_unit\t        AS\tOrganizationalUnit\t,\r\n",
					"    h.organizational_key1\t        AS\tOrganizationalKey1\t,\r\n",
					"    h.organizational_key2\t        AS\tOrganizationalKey2\t,\r\n",
					"    h.workc\t                        AS\tWorkC\t,\r\n",
					"    h.work_contract\t                AS\tWorkContract\t,\r\n",
					"    h.ct\t                        AS\tCT\t,\r\n",
					"    h.contract_type\t                AS\tContractType\t,\r\n",
					"    h.ps_group\t                    AS\tPSGroup\t,\r\n",
					"    h.pay_band_description\t        AS\tPayBandDescription\t,\r\n",
					"    h.fte\t                        AS\tFTE\t,\r\n",
					"    h.wk_hrs\t                    AS\tWeekHours\t,\r\n",
					"    h.indicator_part_time_employee\tAS\tIndicatorPartTimeEmployee\t,\r\n",
					"    h.s\t                            AS\tS\t,\r\n",
					"    h.employment_status\t            AS\tEmploymentStatus\t,\r\n",
					"    h.gender_key\t                AS\tGenderKey\t,\r\n",
					"    h.tra_start_date\t            AS\tTRAStartDate\t,\r\n",
					"    h.tra_end_date\t                AS\tTRAEndDate\t,\r\n",
					"    h.tra_status\t                AS\tTRAStatus\t,\r\n",
					"    h.tra_grade\t                    AS\tTRAGrade\t,\r\n",
					"    h.prev_persno\t                AS\tPrevPersNo\t,\r\n",
					"    h.actr\t                        AS\tActr\t,\r\n",
					"    h.reason_for_action\t            AS\tReasonForAction\t,\r\n",
					"    h.position\t                    AS\tPosition\t,\r\n",
					"    h.position_1\t                AS\tPosition1\t,\r\n",
					"    h.cost_ctr\t                    AS\tCostCtr\t,\r\n",
					"    h.cost_centre\t                AS\tCostCentre\t,\r\n",
					"    h.civil_service_start\t        AS\tCivilServiceStart\t,\r\n",
					"    h.date_to_current_job\t        AS\tDateToCurrentJob\t,\r\n",
					"    h.seniority_date\t            AS\tSeniorityDate\t,\r\n",
					"    h.date_to_subst_grade\t        AS\tDateToSubstGrade\t,\r\n",
					"    h.pers_no_1\t                    AS\tPersNo1\t,\r\n",
					"    h.name_of_manager_om\t        AS\tNameOfManagerOm\t,\r\n",
					"    h.manager_position\t            AS\tManagerPosition\t,\r\n",
					"    h.manager_position_text\t        AS\tManagerPositionText\t,\r\n",
					"    h.counter_sign_manager\t        AS\tCounterSignManager\t,\r\n",
					"    h.loc\t                        AS\tLoc\t,\r\n",
					"    h.location\t                    AS\tLocation\t,\r\n",
					"    h.org_start_date\t            AS\tOrgStartDate\t,\r\n",
					"    h.fix_term_end_date\t            AS\tFixTermEndDate\t,\r\n",
					"    h.loan_start_date\t            AS\tLoanStartDate\t,\r\n",
					"    h.loan_end_date\t                AS\tLoanEndDate\t,\r\n",
					"    h.eegrp\t                        AS\tEEGrp\t,\r\n",
					"    h.employee_group\t            AS\tEmployeeGroup\t,\r\n",
					"    h.annual_salary\t                AS\tAnnualSalary\t,\r\n",
					"    h.curr\t                        AS\tCurr\t,\r\n",
					"    h.ni_number\t                    AS\tNINumber\t,\r\n",
					"    h.birth_date\t                AS\tBirthDate\t,\r\n",
					"    h.age_of_employee\t            AS\tAgeOfEmployee\t,\r\n",
					"    h.eo\t                        AS\tEO\t,\r\n",
					"    h.ethnic_origin\t                AS\tEthnicOrigin\t,\r\n",
					"    h.nid\t                        AS\tNID\t,\r\n",
					"    h.rel\t                        AS\tRel\t,\r\n",
					"    h.religious_denomination_key\tAS\tReligiousDenominationKey\t,\r\n",
					"    h.sxo\t                        AS\tSxo\t,\r\n",
					"    h.wage_type\t                    AS\tWageType\t,\r\n",
					"    h.employee_subgroup\t            AS\tEmployeeSubgroup\t,\r\n",
					"    h.loa_abs_type\t                AS\tLoaAbsType\t,\r\n",
					"    h.loa_absence_type_text\t        AS\tLoaAbsenceTypeText\t,\r\n",
					"    h.scheme_reference\t            AS\tSchemeReference\t,\r\n",
					"    h.pension_scheme_name\t        AS\tPensionSchemeName\t,\r\n",
					"    h.disability_code\t            AS\tDisabilityCode\t,\r\n",
					"    h.disability_text\t            AS\tDisabilityText\t,\r\n",
					"    h.disability_code_description\tAS\tDisabilityCodeDescription\t,\r\n",
					"    h.parea\t                        AS\tPArea\t,\r\n",
					"    h.payroll_area\t                AS\tPayrollArea\t,\r\n",
					"    h.assignment_number\t            AS\tAssignmentNumber\t,\r\n",
					"    h.fte_2\t                        AS\tFTE2\t,\r\n",
					"    h.Report_MonthEnd_Date\t        AS\tReportMonthEndDate\t,\r\n",
					"    h.leave_entitlement_hrs\t        AS\tLeaveEntitlementHours\t,\r\n",
					"    h.leave_taken_hrs\t            AS\tLeaveTakenHours\t,\r\n",
					"    h.leave_remaining_hours\t        AS\tLeaveRemainingHours\t,\r\n",
					"    h.leave_remaining_prorata_hours\tAS\tLeaveRemainingProrataHours,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    h.expected_from                 AS IngestionDate,\r\n",
					"    NULL                            AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(h.pers_no,'.'),\r\n",
					"            IFNULL(CAST(h.Report_MonthEnd_Date as VARCHAR(20)),'.'),\r\n",
					"            IFNULL(h.leave_entitlement_hrs,'.'),\r\n",
					"            IFNULL(h.leave_taken_hrs,'.'),\r\n",
					"            IFNULL(h.leave_remaining_hours,'.'),\r\n",
					"            IFNULL(h.leave_remaining_prorata_hours,'.')\r\n",
					"            )\r\n",
					"        )                           AS RowID,\r\n",
					"    'Y'                             AS IsActive,\r\n",
					"    T5.IsActive                     AS HistoricIsActive\r\n",
					"\r\n",
					"FROM mipins_hr_measures h\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"SAP HR\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_curated_db.mipins_hr_measures T5 ON h.pers_no = T5.EmployeeID AND T5.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    CASE\r\n",
					"        WHEN h.pers_no = T5.EmployeeID AND md5(\r\n",
					"            concat(\r\n",
					"                IFNULL(h.pers_no,'.'),\r\n",
					"                IFNULL(CAST(h.Report_MonthEnd_Date as VARCHAR(20)),'.'),\r\n",
					"                IFNULL(h.leave_entitlement_hrs,'.'),\r\n",
					"                IFNULL(h.leave_taken_hrs,'.'),\r\n",
					"                IFNULL(h.leave_remaining_hours,'.'),\r\n",
					"                IFNULL(h.leave_remaining_prorata_hours,'.')\r\n",
					"            )) <> T5.RowID    -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T5.EmployeeID IS NULL \r\n",
					"        THEN 'Y'\r\n",
					"    ELSE 'N'\r\n",
					"    END  = 'Y'\r\n",
					";"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **mipins_hr_measures_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View mipins_hr_measures_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW mipins_hr_measures_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    MeasureID, -- surrogate \r\n",
					"    EmployeeID\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    CoCd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    PA\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    PSubArea\t,\r\n",
					"    PersonnelSubArea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    WorkC\t,\r\n",
					"    WorkContract\t,\r\n",
					"    CT\t,\r\n",
					"    ContractType\t,\r\n",
					"    PSGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    FTE\t,\r\n",
					"    WeekHours\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TRAStartDate\t,\r\n",
					"    TRAEndDate\t,\r\n",
					"    TRAStatus\t,\r\n",
					"    TRAGrade\t,\r\n",
					"    PrevPersNo\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    EEGrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NINumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    EO\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    NID\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    PArea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    FTE2\t,\r\n",
					"    ReportMonthEndDate\t,\r\n",
					"    LeaveEntitlementHours\t,\r\n",
					"    LeaveTakenHours\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From mipins_hr_measures_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    MeasureID, -- surrogate \r\n",
					"    EmployeeID\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    CoCd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    PA\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    PSubArea\t,\r\n",
					"    PersonnelSubArea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    WorkC\t,\r\n",
					"    WorkContract\t,\r\n",
					"    CT\t,\r\n",
					"    ContractType\t,\r\n",
					"    PSGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    FTE\t,\r\n",
					"    WeekHours\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TRAStartDate\t,\r\n",
					"    TRAEndDate\t,\r\n",
					"    TRAStatus\t,\r\n",
					"    TRAGrade\t,\r\n",
					"    PrevPersNo\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    EEGrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NINumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    EO\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    NID\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    PArea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    FTE2\t,\r\n",
					"    ReportMonthEndDate\t,\r\n",
					"    LeaveEntitlementHours\t,\r\n",
					"    LeaveTakenHours\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_curated_db.mipins_hr_measures\r\n",
					"WHERE EmployeeID IN (SELECT EmployeeID FROM mipins_hr_measures_new WHERE MeasureID IS NULL) AND IsActive = 'Y';"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM mipins_hr_measures_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW mipins_hr_measures_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    MeasureID, \n",
					"    EmployeeID\t,\n",
					"    FirstName\t,\n",
					"    LastName\t,\n",
					"    EmployeeNo\t,\n",
					"    CoCd\t,\n",
					"    CompanyCode\t,\n",
					"    PA\t,\n",
					"    PersonnelArea\t,\n",
					"    PSubArea\t,\n",
					"    PersonnelSubArea\t,\n",
					"    OrgUnit\t,\n",
					"    OrganizationalUnit\t,\n",
					"    OrganizationalKey1\t,\n",
					"    OrganizationalKey2\t,\n",
					"    WorkC\t,\n",
					"    WorkContract\t,\n",
					"    CT\t,\n",
					"    ContractType\t,\n",
					"    PSGroup\t,\n",
					"    PayBandDescription\t,\n",
					"    FTE\t,\n",
					"    WeekHours\t,\n",
					"    IndicatorPartTimeEmployee\t,\n",
					"    S\t,\n",
					"    EmploymentStatus\t,\n",
					"    GenderKey\t,\n",
					"    TRAStartDate\t,\n",
					"    TRAEndDate\t,\n",
					"    TRAStatus\t,\n",
					"    TRAGrade\t,\n",
					"    PrevPersNo\t,\n",
					"    Actr\t,\n",
					"    ReasonForAction\t,\n",
					"    Position\t,\n",
					"    Position1\t,\n",
					"    CostCtr\t,\n",
					"    CostCentre\t,\n",
					"    CivilServiceStart\t,\n",
					"    DateToCurrentJob\t,\n",
					"    SeniorityDate\t,\n",
					"    DateToSubstGrade\t,\n",
					"    PersNo1\t,\n",
					"    NameOfManagerOm\t,\n",
					"    ManagerPosition\t,\n",
					"    ManagerPositionText\t,\n",
					"    CounterSignManager\t,\n",
					"    Loc\t,\n",
					"    Location\t,\n",
					"    OrgStartDate\t,\n",
					"    FixTermEndDate\t,\n",
					"    LoanStartDate\t,\n",
					"    LoanEndDate\t,\n",
					"    EEGrp\t,\n",
					"    EmployeeGroup\t,\n",
					"    AnnualSalary\t,\n",
					"    Curr\t,\n",
					"    NINumber\t,\n",
					"    BirthDate\t,\n",
					"    AgeOfEmployee\t,\n",
					"    EO\t,\n",
					"    EthnicOrigin\t,\n",
					"    NID\t,\n",
					"    Rel\t,\n",
					"    ReligiousDenominationKey\t,\n",
					"    Sxo\t,\n",
					"    WageType\t,\n",
					"    EmployeeSubgroup\t,\n",
					"    LoaAbsType\t,\n",
					"    LoaAbsenceTypeText\t,\n",
					"    SchemeReference\t,\n",
					"    PensionSchemeName\t,\n",
					"    DisabilityCode\t,\n",
					"    DisabilityText\t,\n",
					"    DisabilityCodeDescription\t,\n",
					"    PArea\t,\n",
					"    PayrollArea\t,\n",
					"    AssignmentNumber\t,\n",
					"    FTE2\t,\n",
					"    ReportMonthEndDate\t,\n",
					"    LeaveEntitlementHours\t,\n",
					"    LeaveTakenHours\t,\n",
					"    LeaveRemainingHours\t,\n",
					"    LeaveRemainingProrataHours\t,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM mipins_hr_measures_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View mipins_hr_measures_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. EmployeeID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_curated_db.mipins_hr_measures is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_curated_db.mipins_hr_measures AS Target\r\n",
					"USING mipins_hr_measures_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.MeasureID = Target.MeasureID AND Target.IsActive = 'Y'\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- -- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (MeasureID, -- surrogate \r\n",
					"        EmployeeID\t,\r\n",
					"        FirstName\t,\r\n",
					"        LastName\t,\r\n",
					"        EmployeeNo\t,\r\n",
					"        CoCd\t,\r\n",
					"        CompanyCode\t,\r\n",
					"        PA\t,\r\n",
					"        PersonnelArea\t,\r\n",
					"        PSubArea\t,\r\n",
					"        PersonnelSubArea\t,\r\n",
					"        OrgUnit\t,\r\n",
					"        OrganizationalUnit\t,\r\n",
					"        OrganizationalKey1\t,\r\n",
					"        OrganizationalKey2\t,\r\n",
					"        WorkC\t,\r\n",
					"        WorkContract\t,\r\n",
					"        CT\t,\r\n",
					"        ContractType\t,\r\n",
					"        PSGroup\t,\r\n",
					"        PayBandDescription\t,\r\n",
					"        FTE\t,\r\n",
					"        WeekHours\t,\r\n",
					"        IndicatorPartTimeEmployee\t,\r\n",
					"        S\t,\r\n",
					"        EmploymentStatus\t,\r\n",
					"        GenderKey\t,\r\n",
					"        TRAStartDate\t,\r\n",
					"        TRAEndDate\t,\r\n",
					"        TRAStatus\t,\r\n",
					"        TRAGrade\t,\r\n",
					"        PrevPersNo\t,\r\n",
					"        Actr\t,\r\n",
					"        ReasonForAction\t,\r\n",
					"        Position\t,\r\n",
					"        Position1\t,\r\n",
					"        CostCtr\t,\r\n",
					"        CostCentre\t,\r\n",
					"        CivilServiceStart\t,\r\n",
					"        DateToCurrentJob\t,\r\n",
					"        SeniorityDate\t,\r\n",
					"        DateToSubstGrade\t,\r\n",
					"        PersNo1\t,\r\n",
					"        NameOfManagerOm\t,\r\n",
					"        ManagerPosition\t,\r\n",
					"        ManagerPositionText\t,\r\n",
					"        CounterSignManager\t,\r\n",
					"        Loc\t,\r\n",
					"        Location\t,\r\n",
					"        OrgStartDate\t,\r\n",
					"        FixTermEndDate\t,\r\n",
					"        LoanStartDate\t,\r\n",
					"        LoanEndDate\t,\r\n",
					"        EEGrp\t,\r\n",
					"        EmployeeGroup\t,\r\n",
					"        AnnualSalary\t,\r\n",
					"        Curr\t,\r\n",
					"        NINumber\t,\r\n",
					"        BirthDate\t,\r\n",
					"        AgeOfEmployee\t,\r\n",
					"        EO\t,\r\n",
					"        EthnicOrigin\t,\r\n",
					"        NID\t,\r\n",
					"        Rel\t,\r\n",
					"        ReligiousDenominationKey\t,\r\n",
					"        Sxo\t,\r\n",
					"        WageType\t,\r\n",
					"        EmployeeSubgroup\t,\r\n",
					"        LoaAbsType\t,\r\n",
					"        LoaAbsenceTypeText\t,\r\n",
					"        SchemeReference\t,\r\n",
					"        PensionSchemeName\t,\r\n",
					"        DisabilityCode\t,\r\n",
					"        DisabilityText\t,\r\n",
					"        DisabilityCodeDescription\t,\r\n",
					"        PArea\t,\r\n",
					"        PayrollArea\t,\r\n",
					"        AssignmentNumber\t,\r\n",
					"        FTE2\t,\r\n",
					"        ReportMonthEndDate\t,\r\n",
					"        LeaveEntitlementHours\t,\r\n",
					"        LeaveTakenHours\t,\r\n",
					"        LeaveRemainingHours\t,\r\n",
					"        LeaveRemainingProrataHours\t,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)  \r\n",
					"        VALUES (Source.MeasureID, -- surrogate \r\n",
					"        Source.EmployeeID\t,\r\n",
					"        Source.FirstName\t,\r\n",
					"        Source.LastName\t,\r\n",
					"        Source.EmployeeNo\t,\r\n",
					"        Source.CoCd\t,\r\n",
					"        Source.CompanyCode\t,\r\n",
					"        Source.PA\t,\r\n",
					"        Source.PersonnelArea\t,\r\n",
					"        Source.PSubArea\t,\r\n",
					"        Source.PersonnelSubArea\t,\r\n",
					"        Source.OrgUnit\t,\r\n",
					"        Source.OrganizationalUnit\t,\r\n",
					"        Source.OrganizationalKey1\t,\r\n",
					"        Source.OrganizationalKey2\t,\r\n",
					"        Source.WorkC\t,\r\n",
					"        Source.WorkContract\t,\r\n",
					"        Source.CT\t,\r\n",
					"        Source.ContractType\t,\r\n",
					"        Source.PSGroup\t,\r\n",
					"        Source.PayBandDescription\t,\r\n",
					"        Source.FTE\t,\r\n",
					"        Source.WeekHours\t,\r\n",
					"        Source.IndicatorPartTimeEmployee\t,\r\n",
					"        Source.S\t,\r\n",
					"        Source.EmploymentStatus\t,\r\n",
					"        Source.GenderKey\t,\r\n",
					"        Source.TRAStartDate\t,\r\n",
					"        Source.TRAEndDate\t,\r\n",
					"        Source.TRAStatus\t,\r\n",
					"        Source.TRAGrade\t,\r\n",
					"        Source.PrevPersNo\t,\r\n",
					"        Source.Actr\t,\r\n",
					"        Source.ReasonForAction\t,\r\n",
					"        Source.Position\t,\r\n",
					"        Source.Position1\t,\r\n",
					"        Source.CostCtr\t,\r\n",
					"        Source.CostCentre\t,\r\n",
					"        Source.CivilServiceStart\t,\r\n",
					"        Source.DateToCurrentJob\t,\r\n",
					"        Source.SeniorityDate\t,\r\n",
					"        Source.DateToSubstGrade\t,\r\n",
					"        Source.PersNo1\t,\r\n",
					"        Source.NameOfManagerOm\t,\r\n",
					"        Source.ManagerPosition\t,\r\n",
					"        Source.ManagerPositionText\t,\r\n",
					"        Source.CounterSignManager\t,\r\n",
					"        Source.Loc\t,\r\n",
					"        Source.Location\t,\r\n",
					"        Source.OrgStartDate\t,\r\n",
					"        Source.FixTermEndDate\t,\r\n",
					"        Source.LoanStartDate\t,\r\n",
					"        Source.LoanEndDate\t,\r\n",
					"        Source.EEGrp\t,\r\n",
					"        Source.EmployeeGroup\t,\r\n",
					"        Source.AnnualSalary\t,\r\n",
					"        Source.Curr\t,\r\n",
					"        Source.NINumber\t,\r\n",
					"        Source.BirthDate\t,\r\n",
					"        Source.AgeOfEmployee\t,\r\n",
					"        Source.EO\t,\r\n",
					"        Source.EthnicOrigin\t,\r\n",
					"        Source.NID\t,\r\n",
					"        Source.Rel\t,\r\n",
					"        Source.ReligiousDenominationKey\t,\r\n",
					"        Source.Sxo\t,\r\n",
					"        Source.WageType\t,\r\n",
					"        Source.EmployeeSubgroup\t,\r\n",
					"        Source.LoaAbsType\t,\r\n",
					"        Source.LoaAbsenceTypeText\t,\r\n",
					"        Source.SchemeReference\t,\r\n",
					"        Source.PensionSchemeName\t,\r\n",
					"        Source.DisabilityCode\t,\r\n",
					"        Source.DisabilityText\t,\r\n",
					"        Source.DisabilityCodeDescription\t,\r\n",
					"        Source.PArea\t,\r\n",
					"        Source.PayrollArea\t,\r\n",
					"        Source.AssignmentNumber\t,\r\n",
					"        Source.FTE2\t,\r\n",
					"        Source.ReportMonthEndDate\t,\r\n",
					"        Source.LeaveEntitlementHours\t,\r\n",
					"        Source.LeaveTakenHours\t,\r\n",
					"        Source.LeaveRemainingHours\t,\r\n",
					"        Source.LeaveRemainingProrataHours\t,\r\n",
					"        Source.SourceSystemID,\r\n",
					"        Source.IngestionDate,\r\n",
					"        Source.ValidTo,\r\n",
					"        Source.RowID,\r\n",
					"        Source.IsActive);  "
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_curated_db.mipins_hr_measures is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new MeasureID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_curated_db.mipins_hr_measures\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY MeasureID NULLS LAST) AS MeasureID, -- surrogate key\r\n",
					"    EmployeeID\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    CoCd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    PA\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    PSubArea\t,\r\n",
					"    PersonnelSubArea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    WorkC\t,\r\n",
					"    WorkContract\t,\r\n",
					"    CT\t,\r\n",
					"    ContractType\t,\r\n",
					"    PSGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    FTE\t,\r\n",
					"    WeekHours\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TRAStartDate\t,\r\n",
					"    TRAEndDate\t,\r\n",
					"    TRAStatus\t,\r\n",
					"    TRAGrade\t,\r\n",
					"    PrevPersNo\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    EEGrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NINumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    EO\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    NID\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    PArea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    FTE2\t,\r\n",
					"    ReportMonthEndDate\t,\r\n",
					"    LeaveEntitlementHours\t,\r\n",
					"    LeaveTakenHours\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_curated_db.mipins_hr_measures;"
				],
				"execution_count": null
			}
		]
	}
}