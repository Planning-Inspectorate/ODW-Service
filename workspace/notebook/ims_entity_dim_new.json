{
	"name": "ims_entity_dim_new",
	"properties": {
		"folder": {
			"name": "odw-harmonised/IMS"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "58873dfe-9f4d-4ba7-9ab1-159cca2ab903"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 16,
				"memory": 112,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build ims_entity_dim table -- merge\r\n",
					"\r\n",
					"-- Notes - Addresses are only supplied for Inspectors - need to check inspector count against addresses data\r\n",
					"\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW ims_entity_dim_new \r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN T1.ims_bdc_entity_number IS NULL\r\n",
					"        THEN T3.IMSEntityID\r\n",
					"        ELSE NULL\r\n",
					"    END                                     AS IMSEntityID, -- surrogate key\r\n",
					"    'No Info' AS BDCIDLegacy,\r\n",
					"    'No Info' AS BDCIDCoded,\r\n",
					"    T1.name AS IMSEntityName,\r\n",
					"    T1.ims_bdc_entity_number AS IMSEntityNumber,\r\n",
					"    T1.bdc_entity_name_container_c AS IMSEntityNameContainer,\r\n",
					"    IFNULL(T1.bdc_entity_num_container_c, concat('BDC E - ',T1.ims_bdc_entity_number)) AS IMSEntityNumberContainer,\r\n",
					"    T1.business_area_c AS IMSEntityBusinessArea,\r\n",
					"    T1.ims_bdc_entity_ims_data_flow_1 AS IMSEntityIMSDataFlow1,\r\n",
					"    T1.ims_bdc_entity_ims_data_flow_2 AS IMSEntityIMSDataFlow2,\r\n",
					"    T1.ims_bdc_entity_ims_bdc_attribute_1 AS IMSEntityBDCAttribute,\r\n",
					"    T1.user_id_c AS IMSEntityUserID,\r\n",
					"    T1.information_owner_c AS IMSEntityInformationOwner,\r\n",
					"    T1.user_id1_c AS IMSEntityUser1ID,\r\n",
					"    T1.information_expert_c AS IMSEntityInformationExpert,\r\n",
					"    T1.type AS IMSEntityType,\r\n",
					"    T1.status AS IMSEntityStatus,\r\n",
					"    T1.priority AS IMSEntityPriority,\r\n",
					"    T1.resolution AS IMSEntityResolution,\r\n",
					"    T1.work_log AS IMSEntityWorkLog,\r\n",
					"    T1.business_criticality AS IMSEntityBusinessCriticality,\r\n",
					"    T1.date_modified AS IMSEntityDateModified,\r\n",
					"    T1.SecurityGroups AS IMSEntitySecurityGroups,\r\n",
					"    T1.assigned_user_id AS IMSEntityAssignedUserID,\r\n",
					"    T1.assigned_user_link AS IMSEntityUserLink,\r\n",
					"    T1.assigned_user_name AS IMSEntityUserName,\r\n",
					"    T1.created_by AS IMSEntityCreatedBy,\r\n",
					"    T1.created_by_link AS IMSEntityCreatedByLink,\r\n",
					"    T1.created_by_name AS IMSEntityByName,\r\n",
					"    T1.date_entered AS IMSEntityDateEntered,\r\n",
					"    T1.deleted AS IMSEntityDeleted,\r\n",
					"    T1.description AS IMSEntityDescription,\r\n",
					"    T1.help AS IMSEntityHelp,\r\n",
					"    T1.modified_by_name AS IMSEntityModifiedByName,\r\n",
					"    T1.modified_user_id AS IMSEntityModifiedByUserID,\r\n",
					"    T1.modified_user_link AS IMSEntityModifiedByUserLink,\r\n",
					"    T2.SourceSystemID                       AS SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)          AS IngestionDate,\r\n",
					"    NULL                                    AS ValidTo,\r\n",
					"    md5(concat( \r\n",
					"        '.',\r\n",
					"        '.',\r\n",
					"        IFNULL(T1.name,'.'), \r\n",
					"        IFNULL(T1.ims_bdc_entity_number,'.'), \r\n",
					"        IFNULL(T1.bdc_entity_name_container_c,'.'), \r\n",
					"        IFNULL(T1.bdc_entity_num_container_c,'.'), \r\n",
					"        IFNULL(T1.business_area_c,'.'), \r\n",
					"        IFNULL(T1.ims_bdc_entity_ims_data_flow_1,'.'), \r\n",
					"        IFNULL(T1.ims_bdc_entity_ims_data_flow_2,'.'), \r\n",
					"        IFNULL(T1.ims_bdc_entity_ims_bdc_attribute_1,'.'), \r\n",
					"        IFNULL(T1.user_id_c,'.'), \r\n",
					"        IFNULL(T1.information_owner_c,'.'), \r\n",
					"        IFNULL(T1.user_id1_c,'.'), \r\n",
					"        IFNULL(T1.information_expert_c,'.'), \r\n",
					"        IFNULL(T1.type,'.'), \r\n",
					"        IFNULL(T1.status,'.'), \r\n",
					"        IFNULL(T1.priority,'.'), \r\n",
					"        IFNULL(T1.resolution,'.'), \r\n",
					"        IFNULL(T1.work_log,'.'), \r\n",
					"        IFNULL(T1.business_criticality,'.'), \r\n",
					"        IFNULL(T1.date_modified,'.'), \r\n",
					"        IFNULL(T1.SecurityGroups,'.'), \r\n",
					"        IFNULL(T1.assigned_user_id,'.'), \r\n",
					"        IFNULL(T1.assigned_user_link,'.'), \r\n",
					"        IFNULL(T1.assigned_user_name,'.'), \r\n",
					"        IFNULL(T1.created_by,'.'), \r\n",
					"        IFNULL(T1.created_by_link,'.'), \r\n",
					"        IFNULL(T1.created_by_name,'.'), \r\n",
					"        IFNULL(T1.date_entered,'.'), \r\n",
					"        IFNULL(T1.deleted,'.'), \r\n",
					"        IFNULL(T1.description,'.'), \r\n",
					"        IFNULL(T1.help,'.'), \r\n",
					"        IFNULL(T1.modified_by_name,'.'), \r\n",
					"        IFNULL(T1.modified_user_id,'.'), \r\n",
					"        IFNULL(T1.modified_user_link,'.')))     AS RowID, \r\n",
					"    'Y'                                     AS IsActive, \r\n",
					"    T3.IsActive                             AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.ims_entity_new T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 \r\n",
					"    ON  \"IMS\" = T2.Description AND \r\n",
					"        T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.ims_entity_dim T3 \r\n",
					"    ON  T1.ims_bdc_entity_number = T3.IMSEntityNumber AND \r\n",
					"        T3.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE\r\n",
					"        -- flags new data        \r\n",
					"        ( CASE\r\n",
					"            WHEN    T1.ims_bdc_entity_number = T3.IMSEntityNumber AND \r\n",
					"                    md5(concat(\r\n",
					"                        '.',\r\n",
					"                        '.',\r\n",
					"                        IFNULL(T1.name,'.'), \r\n",
					"                        IFNULL(T1.ims_bdc_entity_number,'.'), \r\n",
					"                        IFNULL(T1.bdc_entity_name_container_c,'.'), \r\n",
					"                        IFNULL(T1.bdc_entity_num_container_c,'.'), \r\n",
					"                        IFNULL(T1.business_area_c,'.'), \r\n",
					"                        IFNULL(T1.ims_bdc_entity_ims_data_flow_1,'.'), \r\n",
					"                        IFNULL(T1.ims_bdc_entity_ims_data_flow_2,'.'), \r\n",
					"                        IFNULL(T1.ims_bdc_entity_ims_bdc_attribute_1,'.'), \r\n",
					"                        IFNULL(T1.user_id_c,'.'), \r\n",
					"                        IFNULL(T1.information_owner_c,'.'), \r\n",
					"                        IFNULL(T1.user_id1_c,'.'), \r\n",
					"                        IFNULL(T1.information_expert_c,'.'), \r\n",
					"                        IFNULL(T1.type,'.'), \r\n",
					"                        IFNULL(T1.status,'.'), \r\n",
					"                        IFNULL(T1.priority,'.'), \r\n",
					"                        IFNULL(T1.resolution,'.'), \r\n",
					"                        IFNULL(T1.work_log,'.'), \r\n",
					"                        IFNULL(T1.business_criticality,'.'), \r\n",
					"                        IFNULL(T1.date_modified,'.'), \r\n",
					"                        IFNULL(T1.SecurityGroups,'.'), \r\n",
					"                        IFNULL(T1.assigned_user_id,'.'), \r\n",
					"                        IFNULL(T1.assigned_user_link,'.'), \r\n",
					"                        IFNULL(T1.assigned_user_name,'.'), \r\n",
					"                        IFNULL(T1.created_by,'.'), \r\n",
					"                        IFNULL(T1.created_by_link,'.'), \r\n",
					"                        IFNULL(T1.created_by_name,'.'), \r\n",
					"                        IFNULL(T1.date_entered,'.'), \r\n",
					"                        IFNULL(T1.deleted,'.'), \r\n",
					"                        IFNULL(T1.description,'.'), \r\n",
					"                        IFNULL(T1.help,'.'), \r\n",
					"                        IFNULL(T1.modified_by_name,'.'), \r\n",
					"                        IFNULL(T1.modified_user_id,'.'), \r\n",
					"                        IFNULL(T1.modified_user_link,'.'))) <> T3.RowID     \r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T3.IMSEntityID IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' )\r\n",
					"    AND T1.ims_bdc_entity_number IS NOT NULL\r\n",
					"    AND T1.expected_from = (SELECT MAX(expected_from) FROM odw_standardised_db.ims_entity_new);\r\n",
					";\r\n",
					""
				],
				"execution_count": 26
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\r\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\r\n",
					"- View **ims_entity_dim_new** is unioned to the target data filter to only those rows where changes have been detected\r\n",
					"## View ims_entity_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY  VIEW ims_entity_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    IMSEntityID,\r\n",
					"    BDCIDLegacy,\r\n",
					"    BDCIDCoded,\r\n",
					"    IMSEntityName,\r\n",
					"    IMSEntityNumber,\r\n",
					"    IMSEntityNameContainer,\r\n",
					"    IMSEntityNumberContainer,\r\n",
					"    IMSEntityBusinessArea,\r\n",
					"    IMSEntityIMSDataFlow1,\r\n",
					"    IMSEntityIMSDataFlow2,\r\n",
					"    IMSEntityBDCAttribute,\r\n",
					"    IMSEntityUserID,\r\n",
					"    IMSEntityInformationOwner,\r\n",
					"    IMSEntityUser1ID,\r\n",
					"    IMSEntityInformationExpert,\r\n",
					"    IMSEntityType,\r\n",
					"    IMSEntityStatus,\r\n",
					"    IMSEntityPriority,\r\n",
					"    IMSEntityResolution,\r\n",
					"    IMSEntityWorkLog,\r\n",
					"    IMSEntityBusinessCriticality,\r\n",
					"    IMSEntityDateModified,\r\n",
					"    IMSEntitySecurityGroups,\r\n",
					"    IMSEntityAssignedUserID,\r\n",
					"    IMSEntityUserLink,\r\n",
					"    IMSEntityUserName,\r\n",
					"    IMSEntityCreatedBy,\r\n",
					"    IMSEntityCreatedByLink,\r\n",
					"    IMSEntityByName,\r\n",
					"    IMSEntityDateEntered,\r\n",
					"    IMSEntityDeleted,\r\n",
					"    IMSEntityDescription,\r\n",
					"    IMSEntityHelp,\r\n",
					"    IMSEntityModifiedByName,\r\n",
					"    IMSEntityModifiedByUserID,\r\n",
					"    IMSEntityModifiedByUserLink,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From ims_entity_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    IMSEntityID,\r\n",
					"    BDCIDLegacy,\r\n",
					"    BDCIDCoded,\r\n",
					"    IMSEntityName,\r\n",
					"    IMSEntityNumber,\r\n",
					"    IMSEntityNameContainer,\r\n",
					"    IMSEntityNumberContainer,\r\n",
					"    IMSEntityBusinessArea,\r\n",
					"    IMSEntityIMSDataFlow1,\r\n",
					"    IMSEntityIMSDataFlow2,\r\n",
					"    IMSEntityBDCAttribute,\r\n",
					"    IMSEntityUserID,\r\n",
					"    IMSEntityInformationOwner,\r\n",
					"    IMSEntityUser1ID,\r\n",
					"    IMSEntityInformationExpert,\r\n",
					"    IMSEntityType,\r\n",
					"    IMSEntityStatus,\r\n",
					"    IMSEntityPriority,\r\n",
					"    IMSEntityResolution,\r\n",
					"    IMSEntityWorkLog,\r\n",
					"    IMSEntityBusinessCriticality,\r\n",
					"    IMSEntityDateModified,\r\n",
					"    IMSEntitySecurityGroups,\r\n",
					"    IMSEntityAssignedUserID,\r\n",
					"    IMSEntityUserLink,\r\n",
					"    IMSEntityUserName,\r\n",
					"    IMSEntityCreatedBy,\r\n",
					"    IMSEntityCreatedByLink,\r\n",
					"    IMSEntityByName,\r\n",
					"    IMSEntityDateEntered,\r\n",
					"    IMSEntityDeleted,\r\n",
					"    IMSEntityDescription,\r\n",
					"    IMSEntityHelp,\r\n",
					"    IMSEntityModifiedByName,\r\n",
					"    IMSEntityModifiedByUserID,\r\n",
					"    IMSEntityModifiedByUserLink,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.ims_entity_dim\r\n",
					"WHERE IMSEntityNumber IN (SELECT IMSEntityNumber FROM ims_entity_dim_new WHERE IMSEntityID IS NULL) AND IsActive = 'Y';\r\n",
					""
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM ims_entity_dim_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW ims_entity_dim_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    IMSEntityID,\n",
					"    BDCIDLegacy,\n",
					"    BDCIDCoded,\n",
					"    IMSEntityName,\n",
					"    IMSEntityNumber,\n",
					"    IMSEntityNameContainer,\n",
					"    IMSEntityNumberContainer,\n",
					"    IMSEntityBusinessArea,\n",
					"    IMSEntityIMSDataFlow1,\n",
					"    IMSEntityIMSDataFlow2,\n",
					"    IMSEntityBDCAttribute,\n",
					"    IMSEntityUserID,\n",
					"    IMSEntityInformationOwner,\n",
					"    IMSEntityUser1ID,\n",
					"    IMSEntityInformationExpert,\n",
					"    IMSEntityType,\n",
					"    IMSEntityStatus,\n",
					"    IMSEntityPriority,\n",
					"    IMSEntityResolution,\n",
					"    IMSEntityWorkLog,\n",
					"    IMSEntityBusinessCriticality,\n",
					"    IMSEntityDateModified,\n",
					"    IMSEntitySecurityGroups,\n",
					"    IMSEntityAssignedUserID,\n",
					"    IMSEntityUserLink,\n",
					"    IMSEntityUserName,\n",
					"    IMSEntityCreatedBy,\n",
					"    IMSEntityCreatedByLink,\n",
					"    IMSEntityByName,\n",
					"    IMSEntityDateEntered,\n",
					"    IMSEntityDeleted,\n",
					"    IMSEntityDescription,\n",
					"    IMSEntityHelp,\n",
					"    IMSEntityModifiedByName,\n",
					"    IMSEntityModifiedByUserID,\n",
					"    IMSEntityModifiedByUserLink,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM ims_entity_dim_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive\n",
					""
				],
				"execution_count": 28
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View ims_entity_dim_changed_rows is used in a merge (Upsert) statement into the target table\r\n",
					"- **WHEN MATCHED** ON the Business Key (i.e. Pers_No from SAP HR), EndDate is set to today -1 day and the IsActive flag is set to 'N'\r\n",
					"- **WHEN NOT MATCHED** ON the business key, insert rows\r\n",
					"## Table odw_harmonised.ims_entity_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.ims_entity_dim AS Target\r\n",
					"USING ims_entity_dim_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.IMSEntityID = Target.IMSEntityID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (IMSEntityID,\r\n",
					"        BDCIDLegacy,\r\n",
					"        BDCIDCoded,\r\n",
					"        IMSEntityName,\r\n",
					"        IMSEntityNumber,\r\n",
					"        IMSEntityNameContainer,\r\n",
					"        IMSEntityNumberContainer,\r\n",
					"        IMSEntityBusinessArea,\r\n",
					"        IMSEntityIMSDataFlow1,\r\n",
					"        IMSEntityIMSDataFlow2,\r\n",
					"        IMSEntityBDCAttribute,\r\n",
					"        IMSEntityUserID,\r\n",
					"        IMSEntityInformationOwner,\r\n",
					"        IMSEntityUser1ID,\r\n",
					"        IMSEntityInformationExpert,\r\n",
					"        IMSEntityType,\r\n",
					"        IMSEntityStatus,\r\n",
					"        IMSEntityPriority,\r\n",
					"        IMSEntityResolution,\r\n",
					"        IMSEntityWorkLog,\r\n",
					"        IMSEntityBusinessCriticality,\r\n",
					"        IMSEntityDateModified,\r\n",
					"        IMSEntitySecurityGroups,\r\n",
					"        IMSEntityAssignedUserID,\r\n",
					"        IMSEntityUserLink,\r\n",
					"        IMSEntityUserName,\r\n",
					"        IMSEntityCreatedBy,\r\n",
					"        IMSEntityCreatedByLink,\r\n",
					"        IMSEntityByName,\r\n",
					"        IMSEntityDateEntered,\r\n",
					"        IMSEntityDeleted,\r\n",
					"        IMSEntityDescription,\r\n",
					"        IMSEntityHelp,\r\n",
					"        IMSEntityModifiedByName,\r\n",
					"        IMSEntityModifiedByUserID,\r\n",
					"        IMSEntityModifiedByUserLink,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)  \r\n",
					"        VALUES (Source.IMSEntityID,\r\n",
					"        Source.BDCIDLegacy,\r\n",
					"        Source.BDCIDCoded,\r\n",
					"        Source.IMSEntityName,\r\n",
					"        Source.IMSEntityNumber,\r\n",
					"        Source.IMSEntityNameContainer,\r\n",
					"        Source.IMSEntityNumberContainer,\r\n",
					"        Source.IMSEntityBusinessArea,\r\n",
					"        Source.IMSEntityIMSDataFlow1,\r\n",
					"        Source.IMSEntityIMSDataFlow2,\r\n",
					"        Source.IMSEntityBDCAttribute,\r\n",
					"        Source.IMSEntityUserID,\r\n",
					"        Source.IMSEntityInformationOwner,\r\n",
					"        Source.IMSEntityUser1ID,\r\n",
					"        Source.IMSEntityInformationExpert,\r\n",
					"        Source.IMSEntityType,\r\n",
					"        Source.IMSEntityStatus,\r\n",
					"        Source.IMSEntityPriority,\r\n",
					"        Source.IMSEntityResolution,\r\n",
					"        Source.IMSEntityWorkLog,\r\n",
					"        Source.IMSEntityBusinessCriticality,\r\n",
					"        Source.IMSEntityDateModified,\r\n",
					"        Source.IMSEntitySecurityGroups,\r\n",
					"        Source.IMSEntityAssignedUserID,\r\n",
					"        Source.IMSEntityUserLink,\r\n",
					"        Source.IMSEntityUserName,\r\n",
					"        Source.IMSEntityCreatedBy,\r\n",
					"        Source.IMSEntityCreatedByLink,\r\n",
					"        Source.IMSEntityByName,\r\n",
					"        Source.IMSEntityDateEntered,\r\n",
					"        Source.IMSEntityDeleted,\r\n",
					"        Source.IMSEntityDescription,\r\n",
					"        Source.IMSEntityHelp,\r\n",
					"        Source.IMSEntityModifiedByName,\r\n",
					"        Source.IMSEntityModifiedByUserID,\r\n",
					"        Source.IMSEntityModifiedByUserLink,\r\n",
					"        Source.SourceSystemID, \r\n",
					"        Source.IngestionDate, \r\n",
					"        Source.ValidTo, \r\n",
					"        Source.RowID, \r\n",
					"        Source.IsActive) ; \r\n",
					""
				],
				"execution_count": 29
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\r\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\r\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\r\n",
					"## Table odw_harmonised.ims_entity_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new SecureInfoID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.ims_entity_dim \r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY IMSEntityID NULLS LAST) AS IMSEntityID,\r\n",
					"    BDCIDLegacy,\r\n",
					"    BDCIDCoded,\r\n",
					"    IMSEntityName,\r\n",
					"    IMSEntityNumber,\r\n",
					"    IMSEntityNameContainer,\r\n",
					"    IMSEntityNumberContainer,\r\n",
					"    IMSEntityBusinessArea,\r\n",
					"    IMSEntityIMSDataFlow1,\r\n",
					"    IMSEntityIMSDataFlow2,\r\n",
					"    IMSEntityBDCAttribute,\r\n",
					"    IMSEntityUserID,\r\n",
					"    IMSEntityInformationOwner,\r\n",
					"    IMSEntityUser1ID,\r\n",
					"    IMSEntityInformationExpert,\r\n",
					"    IMSEntityType,\r\n",
					"    IMSEntityStatus,\r\n",
					"    IMSEntityPriority,\r\n",
					"    IMSEntityResolution,\r\n",
					"    IMSEntityWorkLog,\r\n",
					"    IMSEntityBusinessCriticality,\r\n",
					"    IMSEntityDateModified,\r\n",
					"    IMSEntitySecurityGroups,\r\n",
					"    IMSEntityAssignedUserID,\r\n",
					"    IMSEntityUserLink,\r\n",
					"    IMSEntityUserName,\r\n",
					"    IMSEntityCreatedBy,\r\n",
					"    IMSEntityCreatedByLink,\r\n",
					"    IMSEntityByName,\r\n",
					"    IMSEntityDateEntered,\r\n",
					"    IMSEntityDeleted,\r\n",
					"    IMSEntityDescription,\r\n",
					"    IMSEntityHelp,\r\n",
					"    IMSEntityModifiedByName,\r\n",
					"    IMSEntityModifiedByUserID,\r\n",
					"    IMSEntityModifiedByUserLink,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.ims_entity_dim ;"
				],
				"execution_count": 30
			}
		]
	}
}