{
	"name": "sap-hr-master-pipeline",
	"properties": {
		"folder": {
			"name": "odw-curated/curatedviews"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e43cc01a-c3c9-4a18-98bb-3ce06cb92d2d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"editable": false,
					"run_control": {
						"frozen": true
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"import sys\r\n",
					"\r\n",
					"timeout_in_seconds = 60 * 30\r\n",
					"\r\n",
					"# List of notebooks to run\r\n",
					"notebooks = [\r\n",
					"    'saphr/py_load_sap_hr',\r\n",
					"    'saphr/py_hist_sap_hr',\r\n",
					"    # Add more notebooks as needed\r\n",
					"]\r\n",
					"\r\n",
					"# Run all notebooks with error handling\r\n",
					"for notebook in notebooks:\r\n",
					"    try:\r\n",
					"        print(f\"Starting execution of notebook: {notebook}\")\r\n",
					"        mssparkutils.notebook.run(notebook, timeout_in_seconds)\r\n",
					"        print(f\"Successfully completed notebook: {notebook}\")\r\n",
					"    except Exception as e:\r\n",
					"        print(f\"Error executing notebook {notebook}: {str(e)}\")\r\n",
					"        # Uncomment the next line if you want to stop on first error\r\n",
					"        # sys.exit(1)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"timeout_in_seconds = 60 * 30\r\n",
					"\r\n",
					"# Use the exact path as shown in the file structure\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_live_dim_date', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_load_sap_hr', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_hist_sap_hr', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_sap_hr_leavers', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_absence_data_all', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_fact_absence_all', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/saphr/py_fact_absence_sickness', timeout_in_seconds)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"display(mssparkutils.fs.ls('/'))  # List root directory"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"timeout_in_seconds = 60 * 30\r\n",
					"\r\n",
					"mssparkutils.notebook.run('Workspaces/pins-synw-odw-dev-uks/odw-harmonised/saphr/py_load_sap_hr', timeout_in_seconds)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"# Try this exact path (case-sensitive)\r\n",
					"mssparkutils.notebook.run('odw-harmonized/saphr/py_load_sap_hr', 600)\r\n",
					"\r\n",
					"# Or the full ABFSS path if needed\r\n",
					"full_path = \"abfss://synapse@pinsstodwdevuks9h80mb.dfs.core.windows.net/odw-harmonized/saphr/py_load_sap_hr\"\r\n",
					"mssparkutils.notebook.run(full_path, 600)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"timeout_in_seconds = 60 * 30\r\n",
					"\r\n",
					"# Builds protected characteristic DIMs\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_diversity_dim', timeout_in_seconds)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"editable": false,
					"run_control": {
						"frozen": true
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"timeout_in_seconds = 60 * 30\r\n",
					"\r\n",
					"# Builds protected characteristic DIMs\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_diversity_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_disability_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_religion_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_sxo_dim', timeout_in_seconds)\r\n",
					"# Builds protected characteristic FACT\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_secure_info_fact', timeout_in_seconds)\r\n",
					"\r\n",
					"# Builds hr DIMS\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_personnel_area_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_personnel_sub_area_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_contract_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_payband_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_position_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_pins_location_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_organisation_unit_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_costcenter_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_employeegroup_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_payroll_area_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_work_schedule_dim', timeout_in_seconds)\r\n",
					"\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_employee_fact', timeout_in_seconds)\r\n",
					"\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_employee_dim', timeout_in_seconds)\r\n",
					"\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_employee_leavers_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_specialism_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_absence_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_leave_entitlement_dim', timeout_in_seconds)\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_employee_hr_hierarchy_dim', timeout_in_seconds)\r\n",
					"\r\n",
					"# Build full FACT table\r\n",
					"mssparkutils.notebook.run('/odw-harmonised/SAP-HR/hr_record_fact', timeout_in_seconds)"
				],
				"execution_count": 4
			}
		]
	}
}