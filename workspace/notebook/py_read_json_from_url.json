{
	"name": "py_read_json_from_url",
	"properties": {
		"folder": {
			"name": "utils"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "24c4998a-bd29-482b-88e3-144aad99c792"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"url=''"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"import requests\n",
					"\n",
					"try:\n",
					"    response = requests.get(url)\n",
					"    if response.status_code == 200:\n",
					"        data = response.json()\n",
					"        mssparkutils.notebook.exit(test_results_dict)    \n",
					"    else:\n",
					"        print(\"Failed to fetch data from URL. Status code:\", response.status_code)\n",
					"except requests.exceptions.RequestException as e:\n",
					"    print(\"Error fetching data:\", e)\n",
					""
				],
				"execution_count": null
			}
		]
	}
}