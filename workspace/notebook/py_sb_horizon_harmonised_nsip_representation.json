{
	"name": "py_sb_horizon_harmonised_nsip_representation",
	"properties": {
		"description": "Sample notebook showing how to join a flat table with a spark table with arrays.",
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "ccebc1ed-3399-4064-8a30-820414634bc4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.types import IntegerType, ArrayType, StructType, StructField\n",
					"from pyspark.sql import Row\n",
					"from pyspark.sql.functions import *"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"service_bus_table = \"odw_harmonised_db.sb_nsip_representation\"\n",
					"horizon_table = \"odw_standardised_db.horizon_nsip_relevant_representation\"\n",
					"spark_table_final = \"odw_harmonised_db.nsip_representation\""
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Get data out of the service bus with additional fields needed for Horizon data\n",
					"service_bus_data = spark.sql(f\"\"\"\n",
					"                    SELECT DISTINCT\n",
					"                        NSIPRepresentaionID\n",
					"                        ,representationId\n",
					"                        ,referenceId\n",
					"                        ,examinationLibraryRef\n",
					"                        ,caseRef\n",
					"                        ,caseId\n",
					"                        ,status\n",
					"                        ,originalRepresentation\n",
					"                        ,redacted\n",
					"                        ,redactedRepresentation\n",
					"                        ,redactedBy\n",
					"                        ,redactedNotes\n",
					"                        ,representationFrom\n",
					"                        ,representedId\n",
					"                        ,representativeId\n",
					"                        ,registerFor\n",
					"                        ,representationType\n",
					"                        ,dateReceived\n",
					"                        ,attachmentIds\n",
					"\n",
					"                        --Start Horizon only fields\n",
					"\n",
					"                        ,CAST(NULL AS String) AS casenodeid\n",
					"                        ,CAST(NULL AS String) AS organisationname\n",
					"                        ,CAST(NULL AS String) AS jobtitle\n",
					"                        ,CAST(NULL AS String) AS fullname\n",
					"                        ,CAST(NULL AS String) AS phonenumber\n",
					"                        ,CAST(NULL AS String) AS emailaddress\n",
					"                        ,CAST(NULL AS String) AS buildingnumber\n",
					"                        ,CAST(NULL AS String) AS street\n",
					"                        ,CAST(NULL AS String) AS town\n",
					"                        ,CAST(NULL AS String) AS county\n",
					"                        ,CAST(NULL AS String) AS country\n",
					"                        ,CAST(NULL AS String) AS postcode\n",
					"                        ,CAST(NULL AS String) AS attendprelimmeeting\n",
					"                        ,CAST(NULL AS String) AS agentFullName\n",
					"                        ,CAST(NULL AS String) AS agentOrganisationName\n",
					"                        ,CAST(NULL AS String) AS agentPhoneNumber\n",
					"                        ,CAST(NULL AS String) AS agentEmailaddress\n",
					"                        ,CAST(NULL AS String) AS agentBuildingNumber\n",
					"                        ,CAST(NULL AS String) AS agentStreet\n",
					"                        ,CAST(NULL AS String) AS agentTown\n",
					"                        ,CAST(NULL AS String) AS agentCounty\n",
					"                        ,CAST(NULL AS String) AS agentCountry\n",
					"                        ,CAST(NULL AS String) AS agentPostcode\n",
					"                        ,CAST(NULL AS String) AS representatcompacqhearing\n",
					"                        ,CAST(NULL AS String) AS representatissuehearing\n",
					"                        ,CAST(NULL AS String) AS representatopenfloorhearing\n",
					"                        ,CAST(NULL AS String) AS submitlaterreps\n",
					"                        ,CAST(NULL AS String) AS webreference\n",
					"                        ,CAST(NULL AS String) AS owneroroccupier\n",
					"                        ,CAST(NULL AS String) AS powertosell\n",
					"                        ,CAST(NULL AS String) AS entitledtoclaim\n",
					"                        ,CAST(NULL AS String) AS other\n",
					"                        ,CAST(NULL AS String) AS descriptionifother\n",
					"                        ,CAST(NULL AS String) AS preferredcontactmethod\n",
					"                        --End Horizon only fields\n",
					"\n",
					"                        ,Migrated\n",
					"                        ,ODTSourceSystem\n",
					"                        ,SourceSystemID\n",
					"                        ,IngestionDate\n",
					"                        ,ValidTo\n",
					"                        ,'' AS RowID\n",
					"                        ,IsActive\n",
					"                    FROM \n",
					"                        {service_bus_table}\n",
					"                    \"\"\")\n",
					"\n",
					""
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Get data out of Horizon and matching the SB schema (with additional fields and ensure data types match)\n",
					"horizon_data = spark.sql(f\"\"\"\n",
					"                SELECT \n",
					"                        CAST(NULL AS Long) AS NSIPRepresentaionID\n",
					"                        ,CAST(relevantrepid AS integer) AS representationId\n",
					"                        ,webreference AS referenceId\n",
					"                        ,CAST(NULL AS String) AS examinationLibraryRef\n",
					"                        ,casereference AS caseRef\n",
					"                        ,CAST(caseuniqueid AS integer) AS caseId\n",
					"                        ,RelevantRepStatus AS status\n",
					"                        ,representationoriginal AS originalRepresentation\n",
					"                        ,CAST((representationredacted IS NOT NULL) AS boolean) AS redacted\n",
					"                        ,representationredacted AS redactedRepresentation\n",
					"                        ,redactedBy\n",
					"                        ,notes AS redactedNotes\n",
					"                        ,RelRepOnBehalfOf AS representationFrom\n",
					"                        ,CAST(ContactId AS String) AS representedId\n",
					"                        ,CAST(agentcontactid AS String) AS representativeId\n",
					"                        ,RelRepOnBehalfOf AS registerFor\n",
					"                        ,RelRepOrganisation AS representationType\n",
					"                        ,dateReceived\n",
					"                        ,attachmentId AS attachmentIds\n",
					"\n",
					"                        --Start Horizon only fields\n",
					"                        ,casenodeid\n",
					"                        ,organisationname\n",
					"                        ,jobtitle\n",
					"                        ,fullname\n",
					"                        ,phonenumber\n",
					"                        ,emailaddress\n",
					"                        ,buildingnumber\n",
					"                        ,street\n",
					"                        ,town\n",
					"                        ,county\n",
					"                        ,country\n",
					"                        ,postcode\n",
					"                        ,attendprelimmeeting\n",
					"                        ,agent_fullname AS AgentFullName\n",
					"                        ,agent_organisationname AS AgentOrganisationName\n",
					"                        ,agent_phonenumber AS agentPhoneNumber\n",
					"                        ,agent_emailaddress AS agentEmailAddress\n",
					"                        ,agent_buildingnumber AS agentBuildingNumber\n",
					"                        ,agent_street AS agentStreet\n",
					"                        ,agent_town AS agentTown\n",
					"                        ,Agent_County AS agentCounty\n",
					"                        ,Agent_Country AS agentCountry\n",
					"                        ,agent_postcode AS agentPostcode\n",
					"                        ,representatcompacqhearing\n",
					"                        ,representatissuehearing\n",
					"                        ,representatopenfloorhearing\n",
					"                        ,submitlaterreps\n",
					"                        ,webreference\n",
					"                        ,owneroroccupier\n",
					"                        ,powertosell\n",
					"                        ,entitledtoclaim\n",
					"                        ,other\n",
					"                        ,descriptionifother\n",
					"                        ,preferredcontactmethod\n",
					"                        --End Horizon only fields\n",
					"\n",
					"                        ,0 AS Migrated\n",
					"                        ,'Horizon' AS ODTSourceSystem\n",
					"                        ,source.SourceSystemID\n",
					"                        ,MIN(ingested_datetime) AS IngestionDate\n",
					"                        ,ValidTo\n",
					"                        ,'' AS RowID\n",
					"                        ,IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.main_sourcesystem_fact AS source\n",
					"    INNER JOIN {horizon_table} AS Horizon  \n",
					"        ON source.Description = \"Casework\"\n",
					"        AND source.IsActive = 'Y'\n",
					"    LEFT OUTER JOIN\n",
					"        ( SELECT\n",
					"            caseRef\n",
					"            ,MIN(IngestionDate) AS First_Seen\n",
					"          FROM\n",
					"             {service_bus_table} \n",
					"          GROUP BY\n",
					"            caseRef ) AS service_bus\n",
					"        ON Horizon.caseReference = service_bus.caseRef\n",
					"        AND Horizon.ingested_datetime >= service_bus.First_seen\n",
					"WHERE\n",
					"    service_bus.caseRef IS NULL\n",
					"GROUP BY\n",
					"    CAST(relevantrepid AS integer)\n",
					"    ,webreference\n",
					"    ,casereference\n",
					"    ,CAST(caseuniqueid AS integer)\n",
					"    ,RelevantRepStatus\n",
					"    ,representationoriginal\n",
					"    ,CAST((representationredacted IS NOT NULL) AS boolean)\n",
					"    ,representationredacted \n",
					"    ,redactedBy\n",
					"    ,notes\n",
					"    ,RelRepOnBehalfOf\n",
					"    ,CAST(ContactId AS String)\n",
					"    ,CAST(agentcontactid AS String)\n",
					"    ,RelRepOnBehalfOf\n",
					"    ,RelRepOrganisation\n",
					"    ,dateReceived\n",
					"    ,attachmentId\n",
					"    --Start Horizon only fields\n",
					"    ,casenodeid\n",
					"    ,organisationname\n",
					"    ,jobtitle\n",
					"    ,fullname\n",
					"    ,phonenumber\n",
					"    ,emailaddress\n",
					"    ,buildingnumber\n",
					"    ,street\n",
					"    ,town\n",
					"    ,county\n",
					"    ,country\n",
					"    ,postcode\n",
					"    ,attendprelimmeeting\n",
					"    ,agent_fullname\n",
					"    ,agent_organisationname\n",
					"    ,agent_phonenumber\n",
					"    ,agent_emailaddress\n",
					"    ,agent_buildingnumber\n",
					"    ,agent_street\n",
					"    ,agent_town\n",
					"    ,Agent_County\n",
					"    ,Agent_Country\n",
					"    ,agent_postcode\n",
					"    ,representatcompacqhearing\n",
					"    ,representatissuehearing\n",
					"    ,representatopenfloorhearing\n",
					"    ,submitlaterreps\n",
					"    ,webreference\n",
					"    ,owneroroccupier\n",
					"    ,powertosell\n",
					"    ,entitledtoclaim\n",
					"    ,other\n",
					"    ,descriptionifother\n",
					"    ,preferredcontactmethod\n",
					"    --End Horizon only fields\n",
					"    ,source.SourceSystemID\n",
					"    ,ValidTo\n",
					"    ,IsActive\n",
					"\n",
					"                \"\"\")\n",
					""
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#Establish aggregated view of attachmentId\n",
					"horizon_region = horizon_data.groupBy(\"representationId\", \"IngestionDate\").agg(collect_list(\"attachmentIds\").alias(\"attachmentIds\"))\n",
					"horizon_data = horizon_data.drop(\"attachmentIds\")\n",
					"horizon_data = horizon_data.join(horizon_region, on=[\"representationId\", \"IngestionDate\"], how=\"inner\")\n",
					"\n",
					"#sort columns into same order as service bus\n",
					"horizon_data = horizon_data.select(service_bus_data.columns)"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results = service_bus_data.union(horizon_data)"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"results.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")"
				],
				"execution_count": 36
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Now need to sort internal ids, IsActive flags, and valid_to dates"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_nsip_relevant_representation_calculations_base\n",
					"AS\n",
					"SELECT  \n",
					"    row_number() OVER(PARTITION BY representationId ORDER BY IngestionDate DESC) AS ReverseOrderProcessed\n",
					"    ,row_number() OVER(ORDER BY IngestionDate ASC, representationId ASC) AS NSIPRepresentaionID\n",
					"    ,representationId\n",
					"    ,IngestionDate\n",
					"    ,ValidTo\n",
					"    ,'0' AS Migrated\n",
					"    ,CASE row_number() OVER(PARTITION BY representationId ORDER BY IngestionDate DESC)\n",
					"        WHEN 1 THEN\n",
					"            'Y'\n",
					"        ELSE\n",
					"            'N'\n",
					"    END AS IsActive       \n",
					"FROM\n",
					"    odw_harmonised_db.nsip_representation"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_calcs = spark.sql(\"\"\"\n",
					"                        SELECT\n",
					"                            CurrentRow.NSIPRepresentaionID \n",
					"                            ,CurrentRow.representationId\n",
					"                            ,CurrentRow.IngestionDate\n",
					"                            ,COALESCE(NULLIF(CurrentRow.ValidTo,''), NextRow.IngestionDate) AS ValidTo\n",
					"                            ,CASE\n",
					"                                WHEN raw.representationId IS NOT NULL THEN \n",
					"                                    \"1\"\n",
					"                                ELSE \n",
					"                                    \"0\"\n",
					"                            END AS Migrated\n",
					"                            ,CurrentRow.IsActive\n",
					"                        FROM\n",
					"                            vw_nsip_relevant_representation_calculations_base AS CurrentRow\n",
					"                            LEFT OUTER JOIN vw_nsip_relevant_representation_calculations_base AS NextRow\n",
					"                                ON CurrentRow.representationId = NextRow.representationId\n",
					"                                AND CurrentRow.ReverseOrderProcessed - 1 = NextRow.ReverseOrderProcessed\n",
					"                            LEFT OUTER JOIN (SELECT DISTINCT representationId FROM odw_harmonised_db.sb_nsip_representation) AS Raw\n",
					"                                ON CurrentRow.representationId = Raw.representationId \n",
					"                                ORDER BY currentRow.ReverseOrderProcessed\"\"\")"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df_calcs =df_calcs.withColumnRenamed(\"representationId\", \"temp_representationId\").withColumnRenamed(\"IngestionDate\", \"temp_IngestionDate\")\n",
					"\n",
					"\n",
					"results = spark.sql(f\"\"\"\n",
					"                    SELECT DISTINCT\n",
					"                        Target.NSIPRepresentaionID\n",
					"                        ,representationId\n",
					"                        ,referenceId\n",
					"                        ,examinationLibraryRef\n",
					"                        ,caseRef\n",
					"                        ,caseId\n",
					"                        ,status\n",
					"                        ,originalRepresentation\n",
					"                        ,redacted\n",
					"                        ,redactedRepresentation\n",
					"                        ,redactedBy\n",
					"                        ,redactedNotes\n",
					"                        ,representationFrom\n",
					"                        ,representedId\n",
					"                        ,representativeId\n",
					"                        ,registerFor\n",
					"                        ,representationType\n",
					"                        ,dateReceived\n",
					"                        ,attachmentIds\n",
					"\n",
					"                        --Start Horizon only fields\n",
					"                        ,casenodeid\n",
					"                        ,organisationname\n",
					"                        ,jobtitle\n",
					"                        ,fullname\n",
					"                        ,phonenumber\n",
					"                        ,emailaddress\n",
					"                        ,buildingnumber\n",
					"                        ,street\n",
					"                        ,town\n",
					"                        ,county\n",
					"                        ,country\n",
					"                        ,postcode\n",
					"                        ,attendprelimmeeting\n",
					"                        ,agentFullName\n",
					"                        ,agentOrganisationName\n",
					"                        ,agentPhonenumber\n",
					"                        ,agentEmailaddress\n",
					"                        ,agentBuildingNumber\n",
					"                        ,agentStreet\n",
					"                        ,agentTown\n",
					"                        ,agentCounty\n",
					"                        ,agentCountry\n",
					"                        ,agentPostcode\n",
					"                        ,representatcompacqhearing\n",
					"                        ,representatissuehearing\n",
					"                        ,representatopenfloorhearing\n",
					"                        ,submitlaterreps\n",
					"                        ,webreference\n",
					"                        ,owneroroccupier\n",
					"                        ,powertosell\n",
					"                        ,entitledtoclaim\n",
					"                        ,other\n",
					"                        ,descriptionifother\n",
					"                        ,preferredcontactmethod\n",
					"                        --End Horizon only fields\n",
					"\n",
					"                        ,0 AS Migrated\n",
					"                        ,ODTSourceSystem\n",
					"                        ,SourceSystemID\n",
					"                        ,IngestionDate\n",
					"                        ,ValidTo\n",
					"                        ,MD5(\n",
					"                            CONCAT(\n",
					"                                    IFNULL(CAST(Target.NSIPRepresentaionID AS String), '.')\n",
					"                                    ,IFNULL(CAST(representationId AS String), '.')\n",
					"                                    ,IFNULL(CAST(referenceId AS String), '.')\n",
					"                                    ,IFNULL(CAST(examinationLibraryRef AS String), '.')\n",
					"                                    ,IFNULL(CAST(caseRef AS String), '.')\n",
					"                                    ,IFNULL(CAST(caseId AS String), '.')\n",
					"                                    ,IFNULL(CAST(status AS String), '.')\n",
					"                                    ,IFNULL(CAST(originalRepresentation AS String), '.')\n",
					"                                    ,IFNULL(CAST(redacted AS String), '.')\n",
					"                                    ,IFNULL(CAST(redactedRepresentation AS String), '.')\n",
					"                                    ,IFNULL(CAST(redactedBy AS String), '.')\n",
					"                                    ,IFNULL(CAST(redactedNotes AS String), '.')\n",
					"                                    ,IFNULL(CAST(representationFrom AS String), '.')\n",
					"                                    ,IFNULL(CAST(representedId AS String), '.')\n",
					"                                    ,IFNULL(CAST(representativeId AS String), '.')\n",
					"                                    ,IFNULL(CAST(registerFor AS String), '.')\n",
					"                                    ,IFNULL(CAST(representationType AS String), '.')\n",
					"                                    ,IFNULL(CAST(dateReceived AS String), '.')\n",
					"                                    ,IFNULL(CAST(attachmentIds AS String), '.')\n",
					"                                    \n",
					"                                    --Start Horizon only fields\n",
					"                                    ,IFNULL(CAST(casenodeid AS String), '.')\n",
					"                                    ,IFNULL(CAST(organisationname AS String), '.')\n",
					"                                    ,IFNULL(CAST(jobtitle AS String), '.')\n",
					"                                    ,IFNULL(CAST(fullname AS String), '.')\n",
					"                                    ,IFNULL(CAST(phonenumber AS String), '.')\n",
					"                                    ,IFNULL(CAST(emailaddress AS String), '.')\n",
					"                                    ,IFNULL(CAST(buildingnumber AS String), '.')\n",
					"                                    ,IFNULL(CAST(street AS String), '.')\n",
					"                                    ,IFNULL(CAST(town AS String), '.')\n",
					"                                    ,IFNULL(CAST(county AS String), '.')\n",
					"                                    ,IFNULL(CAST(country AS String), '.')\n",
					"                                    ,IFNULL(CAST(postcode AS String), '.')\n",
					"                                    ,IFNULL(CAST(attendprelimmeeting AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentFullName AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentOrganisationName AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentPhonenumber AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentEmailaddress AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentBuildingNumber AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentStreet AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentTown AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentCounty AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentCountry AS String), '.')\n",
					"                                    ,IFNULL(CAST(agentPostcode AS String), '.')\n",
					"                                    ,IFNULL(CAST(representatcompacqhearing AS String), '.')\n",
					"                                    ,IFNULL(CAST(representatissuehearing AS String), '.')\n",
					"                                    ,IFNULL(CAST(representatopenfloorhearing AS String), '.')\n",
					"                                    ,IFNULL(CAST(submitlaterreps AS String), '.')\n",
					"                                    ,IFNULL(CAST(webreference AS String), '.')\n",
					"                                    ,IFNULL(CAST(owneroroccupier AS String), '.')\n",
					"                                    ,IFNULL(CAST(powertosell AS String), '.')\n",
					"                                    ,IFNULL(CAST(entitledtoclaim AS String), '.')\n",
					"                                    ,IFNULL(CAST(other AS String), '.')\n",
					"                                    ,IFNULL(CAST(descriptionifother AS String), '.')\n",
					"                                    ,IFNULL(CAST(preferredcontactmethod AS String), '.')\n",
					"                                    --End Horizon only fields\n",
					"                            )\n",
					"                        ) AS RowID\n",
					"                        ,IsActive\n",
					"                    FROM \n",
					"                        {spark_table_final} AS Target\"\"\")\n",
					""
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"columns = results.columns\n",
					"results = results.drop(\"NSIPRepresentaionID\", \"ValidTo\", \"Migrated\", \"IsActive\")"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"final_df = results.join(df_calcs, (df_calcs[\"temp_representationId\"] == results[\"representationId\"]) & (df_calcs[\"temp_IngestionDate\"] == results[\"IngestionDate\"])).select(columns)\n",
					"final_df = final_df.drop_duplicates()\n",
					"\n",
					"final_df.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")"
				],
				"execution_count": 41
			}
		]
	}
}