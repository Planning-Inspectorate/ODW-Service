{
	"name": "document_meta_data",
	"properties": {
		"folder": {
			"name": "odw-harmonised/DocumentTree"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d2643855-263a-4612-81c5-8fce71a08dfb"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View document_meta_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build document_meta_data table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"-- CREATE OR REPLACE TEMPORARY VIEW document_meta_data_new\r\n",
					"\r\n",
					"--      AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN T1.DataID IS NULL\r\n",
					"        THEN T3.DocumentCaseReferenceID\r\n",
					"        ELSE NULL\r\n",
					"    END                             AS DTreeID,\r\n",
					"    T1.DataId\tAS\tDataId\t,\r\n",
					"    T1.CaseNodeId\tAS\tCaseNodeId\t,\r\n",
					"    T1.caseReference\tAS\tCaseReference\t,\r\n",
					"    T1.documentReference\tAS\tDocumentReference\t,\r\n",
					"    T1.Version\tAS\tVersion\t,\r\n",
					"    T1.Name\tAS\tName\t,\r\n",
					"    T1.DataSize\tAS\tDataSize\t,\r\n",
					"    T1.virusCheckStatus\tAS\tVirusCheckStatus\t,\r\n",
					"    T1.CreateDate\tAS\tCreateDate\t,\r\n",
					"    T1.ModifyDate\tAS\tModifyDate\t,\r\n",
					"    T1.caseworkType\tAS\tCaseworkType\t,\r\n",
					"    T1.publishedStatus\tAS\tPublishedStatus\t,\r\n",
					"    T1.datePublished\tAS\tDatePublished\t,\r\n",
					"    T1.documentType\tAS\tDocumentType\t,\r\n",
					"    T1.sourceSystem\tAS\tSourceSystem\t,\r\n",
					"    T1.ValStr\tAS\tValStr\t,\r\n",
					"    T1.representative\tAS\tRepresentative\t,\r\n",
					"    T1.documentDescription\tAS\tDocumentDescription\t,\r\n",
					"    T1.documentCaseStage\tAS\tDocumentCaseStage\t,\r\n",
					"    T1.filter1\tAS\tFilter1\t,\r\n",
					"    T1.filter2\tAS\tFilter2\t,\r\n",
					"    T1.ParentID\tAS\tParentID\t,\r\n",
					"\r\n",
					"    T2.SourceSystemID               AS SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)  AS IngestionDate,\r\n",
					"    NULL                            AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.DataId\t,'.'),\r\n",
					"            IFNULL(T1.CaseNodeId\t,'.'),\r\n",
					"            IFNULL(T1.caseReference\t,'.'),\r\n",
					"            IFNULL(T1.documentReference\t,'.'),\r\n",
					"            IFNULL(T1.Version\t,'.'),\r\n",
					"            IFNULL(T1.Name\t,'.'),\r\n",
					"            IFNULL(T1.DataSize\t,'.'),\r\n",
					"            IFNULL(T1.virusCheckStatus\t,'.'),\r\n",
					"            IFNULL(T1.CreateDate\t,'.'),\r\n",
					"            IFNULL(T1.ModifyDate\t,'.'),\r\n",
					"            IFNULL(T1.caseworkType\t,'.'),\r\n",
					"            IFNULL(T1.publishedStatus\t,'.'),\r\n",
					"            IFNULL(T1.datePublished\t,'.'),\r\n",
					"            IFNULL(T1.documentType\t,'.'),\r\n",
					"            IFNULL(T1.sourceSystem\t,'.'),\r\n",
					"            IFNULL(T1.ValStr\t,'.'),\r\n",
					"            IFNULL(T1.representative\t,'.'),\r\n",
					"            IFNULL(T1.documentDescription\t,'.'),\r\n",
					"            IFNULL(T1.documentCaseStage\t,'.'),\r\n",
					"            IFNULL(T1.filter1\t,'.'),\r\n",
					"            IFNULL(T1.filter2\t,'.'),\r\n",
					"            IFNULL(T1.ParentID\t,'.')\r\n",
					"        ))                          AS RowID, -- this hash should contain all the defining fields\r\n",
					"    'Y'                             AS IsActive,\r\n",
					"    T3.IsActive                     AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.document_meta_data T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 \r\n",
					"    ON \"DocumentTree\" = T2.Description AND \r\n",
					"        T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.document_meta_data T3 \r\n",
					"    ON T1.DataID = T3.DataID AND \r\n",
					"        T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    (CASE\r\n",
					"        WHEN T1.caseReference = T3.CaseReference AND md5(\r\n",
					"            concat(\r\n",
					"                IFNULL(T1.DataId\t,'.'),\r\n",
					"                IFNULL(T1.CaseNodeId\t,'.'),\r\n",
					"                IFNULL(T1.caseReference\t,'.'),\r\n",
					"                IFNULL(T1.documentReference\t,'.'),\r\n",
					"                IFNULL(T1.Version\t,'.'),\r\n",
					"                IFNULL(T1.Name\t,'.'),\r\n",
					"                IFNULL(T1.DataSize\t,'.'),\r\n",
					"                IFNULL(T1.virusCheckStatus\t,'.'),\r\n",
					"                IFNULL(T1.CreateDate\t,'.'),\r\n",
					"                IFNULL(T1.ModifyDate\t,'.'),\r\n",
					"                IFNULL(T1.caseworkType\t,'.'),\r\n",
					"                IFNULL(T1.publishedStatus\t,'.'),\r\n",
					"                IFNULL(T1.datePublished\t,'.'),\r\n",
					"                IFNULL(T1.documentType\t,'.'),\r\n",
					"                IFNULL(T1.sourceSystem\t,'.'),\r\n",
					"                IFNULL(T1.ValStr\t,'.'),\r\n",
					"                IFNULL(T1.representative\t,'.'),\r\n",
					"                IFNULL(T1.documentDescription\t,'.'),\r\n",
					"                IFNULL(T1.documentCaseStage\t,'.'),\r\n",
					"                IFNULL(T1.filter1\t,'.'),\r\n",
					"                IFNULL(T1.filter2\t,'.'),\r\n",
					"                IFNULL(T1.ParentID\t,'.')\r\n",
					"                \r\n",
					"            )) <> T3.RowID  -- same record, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.DataID IS NULL -- new record\r\n",
					"        THEN 'Y'\r\n",
					"    ELSE 'N'\r\n",
					"    END  = 'Y' )\r\n",
					"    AND T1.DataID IS NOT NULL\r\n",
					"    AND T1.expected_from = (SELECT MAX(expected_from) FROM odw_standardised_db.document_case_reference)\r\n",
					";"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View document_meta_data_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW document_meta_data_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    DTreeID,\r\n",
					"    OwnerID,\r\n",
					"    ParentID,\r\n",
					"    DataID,\r\n",
					"    Name,\r\n",
					"    OriginOwnerID,\r\n",
					"    OriginDataID,\r\n",
					"    UserID,\r\n",
					"    GroupID,\r\n",
					"    UPermissions,\r\n",
					"    GPermissions,\r\n",
					"    WPermissions,\r\n",
					"    SPermissions,\r\n",
					"    ACLCount,\r\n",
					"    PermID,\r\n",
					"    DataType,\r\n",
					"    CreatedBy,\r\n",
					"    CreateDate,\r\n",
					"    ModifiedBy,\r\n",
					"    ModifyDate,\r\n",
					"    MaxVers,\r\n",
					"    Reserved,\r\n",
					"    ReservedBy,\r\n",
					"    ReservedDate,\r\n",
					"    VersionNum,\r\n",
					"    DComment,\r\n",
					"    DCategory,\r\n",
					"    SubType,\r\n",
					"    ExAtt1,\r\n",
					"    ExAtt2,\r\n",
					"    Ordering,\r\n",
					"    Major,\r\n",
					"    Minor,\r\n",
					"    ReleaseRef,\r\n",
					"    ChildCount,\r\n",
					"    AssignedTo,\r\n",
					"    DateAssigned,\r\n",
					"    DateEffective,\r\n",
					"    DateExpiration,\r\n",
					"    DateDue,\r\n",
					"    DateStarted,\r\n",
					"    DateCompleted,\r\n",
					"    Status,\r\n",
					"    Priority,\r\n",
					"    GIF,\r\n",
					"    ExtendedData,\r\n",
					"    Catalog,\r\n",
					"    CacheExpiration,\r\n",
					"    Deleted,\r\n",
					"    GUID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"\r\n",
					"From document_meta_data_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    DTreeID,\r\n",
					"    OwnerID,\r\n",
					"    ParentID,\r\n",
					"    DataID,\r\n",
					"    Name,\r\n",
					"    OriginOwnerID,\r\n",
					"    OriginDataID,\r\n",
					"    UserID,\r\n",
					"    GroupID,\r\n",
					"    UPermissions,\r\n",
					"    GPermissions,\r\n",
					"    WPermissions,\r\n",
					"    SPermissions,\r\n",
					"    ACLCount,\r\n",
					"    PermID,\r\n",
					"    DataType,\r\n",
					"    CreatedBy,\r\n",
					"    CreateDate,\r\n",
					"    ModifiedBy,\r\n",
					"    ModifyDate,\r\n",
					"    MaxVers,\r\n",
					"    Reserved,\r\n",
					"    ReservedBy,\r\n",
					"    ReservedDate,\r\n",
					"    VersionNum,\r\n",
					"    DComment,\r\n",
					"    DCategory,\r\n",
					"    SubType,\r\n",
					"    ExAtt1,\r\n",
					"    ExAtt2,\r\n",
					"    Ordering,\r\n",
					"    Major,\r\n",
					"    Minor,\r\n",
					"    ReleaseRef,\r\n",
					"    ChildCount,\r\n",
					"    AssignedTo,\r\n",
					"    DateAssigned,\r\n",
					"    DateEffective,\r\n",
					"    DateExpiration,\r\n",
					"    DateDue,\r\n",
					"    DateStarted,\r\n",
					"    DateCompleted,\r\n",
					"    Status,\r\n",
					"    Priority,\r\n",
					"    GIF,\r\n",
					"    ExtendedData,\r\n",
					"    Catalog,\r\n",
					"    CacheExpiration,\r\n",
					"    Deleted,\r\n",
					"    GUID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.document_meta_data\r\n",
					"WHERE DataID IN (SELECT DataID FROM document_meta_data_new WHERE DTreeID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM document_meta_data_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW document_meta_data_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    DTreeID,\n",
					"    OwnerID,\n",
					"    ParentID,\n",
					"    DataID,\n",
					"    Name,\n",
					"    OriginOwnerID,\n",
					"    OriginDataID,\n",
					"    UserID,\n",
					"    GroupID,\n",
					"    UPermissions,\n",
					"    GPermissions,\n",
					"    WPermissions,\n",
					"    SPermissions,\n",
					"    ACLCount,\n",
					"    PermID,\n",
					"    DataType,\n",
					"    CreatedBy,\n",
					"    CreateDate,\n",
					"    ModifiedBy,\n",
					"    ModifyDate,\n",
					"    MaxVers,\n",
					"    Reserved,\n",
					"    ReservedBy,\n",
					"    ReservedDate,\n",
					"    VersionNum,\n",
					"    DComment,\n",
					"    DCategory,\n",
					"    SubType,\n",
					"    ExAtt1,\n",
					"    ExAtt2,\n",
					"    Ordering,\n",
					"    Major,\n",
					"    Minor,\n",
					"    ReleaseRef,\n",
					"    ChildCount,\n",
					"    AssignedTo,\n",
					"    DateAssigned,\n",
					"    DateEffective,\n",
					"    DateExpiration,\n",
					"    DateDue,\n",
					"    DateStarted,\n",
					"    DateCompleted,\n",
					"    Status,\n",
					"    Priority,\n",
					"    GIF,\n",
					"    ExtendedData,\n",
					"    Catalog,\n",
					"    CacheExpiration,\n",
					"    Deleted,\n",
					"    GUID,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM document_meta_data_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View document_meta_data_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.document_meta_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.document_meta_data AS Target\r\n",
					"USING document_meta_data_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.NSIPProjectInfoInternalID = Target.NSIPProjectInfoInternalID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (\r\n",
					"        DTreeID,\r\n",
					"        OwnerID,\r\n",
					"        ParentID,\r\n",
					"        DataID,\r\n",
					"        Name,\r\n",
					"        OriginOwnerID,\r\n",
					"        OriginDataID,\r\n",
					"        UserID,\r\n",
					"        GroupID,\r\n",
					"        UPermissions,\r\n",
					"        GPermissions,\r\n",
					"        WPermissions,\r\n",
					"        SPermissions,\r\n",
					"        ACLCount,\r\n",
					"        PermID,\r\n",
					"        DataType,\r\n",
					"        CreatedBy,\r\n",
					"        CreateDate,\r\n",
					"        ModifiedBy,\r\n",
					"        ModifyDate,\r\n",
					"        MaxVers,\r\n",
					"        Reserved,\r\n",
					"        ReservedBy,\r\n",
					"        ReservedDate,\r\n",
					"        VersionNum,\r\n",
					"        DComment,\r\n",
					"        DCategory,\r\n",
					"        SubType,\r\n",
					"        ExAtt1,\r\n",
					"        ExAtt2,\r\n",
					"        Ordering,\r\n",
					"        Major,\r\n",
					"        Minor,\r\n",
					"        ReleaseRef,\r\n",
					"        ChildCount,\r\n",
					"        AssignedTo,\r\n",
					"        DateAssigned,\r\n",
					"        DateEffective,\r\n",
					"        DateExpiration,\r\n",
					"        DateDue,\r\n",
					"        DateStarted,\r\n",
					"        DateCompleted,\r\n",
					"        Status,\r\n",
					"        Priority,\r\n",
					"        GIF,\r\n",
					"        ExtendedData,\r\n",
					"        Catalog,\r\n",
					"        CacheExpiration,\r\n",
					"        Deleted,\r\n",
					"        GUID,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)\r\n",
					"    VALUES (\r\n",
					"        Source.DTreeID,\r\n",
					"        Source.OwnerID,\r\n",
					"        Source.ParentID,\r\n",
					"        Source.DataID,\r\n",
					"        Source.Name,\r\n",
					"        Source.OriginOwnerID,\r\n",
					"        Source.OriginDataID,\r\n",
					"        Source.UserID,\r\n",
					"        Source.GroupID,\r\n",
					"        Source.UPermissions,\r\n",
					"        Source.GPermissions,\r\n",
					"        Source.WPermissions,\r\n",
					"        Source.SPermissions,\r\n",
					"        Source.ACLCount,\r\n",
					"        Source.PermID,\r\n",
					"        Source.DataType,\r\n",
					"        Source.CreatedBy,\r\n",
					"        Source.CreateDate,\r\n",
					"        Source.ModifiedBy,\r\n",
					"        Source.ModifyDate,\r\n",
					"        Source.MaxVers,\r\n",
					"        Source.Reserved,\r\n",
					"        Source.ReservedBy,\r\n",
					"        Source.ReservedDate,\r\n",
					"        Source.VersionNum,\r\n",
					"        Source.DComment,\r\n",
					"        Source.DCategory,\r\n",
					"        Source.SubType,\r\n",
					"        Source.ExAtt1,\r\n",
					"        Source.ExAtt2,\r\n",
					"        Source.Ordering,\r\n",
					"        Source.Major,\r\n",
					"        Source.Minor,\r\n",
					"        Source.ReleaseRef,\r\n",
					"        Source.ChildCount,\r\n",
					"        Source.AssignedTo,\r\n",
					"        Source.DateAssigned,\r\n",
					"        Source.DateEffective,\r\n",
					"        Source.DateExpiration,\r\n",
					"        Source.DateDue,\r\n",
					"        Source.DateStarted,\r\n",
					"        Source.DateCompleted,\r\n",
					"        Source.Status,\r\n",
					"        Source.Priority,\r\n",
					"        Source.GIF,\r\n",
					"        Source.ExtendedData,\r\n",
					"        Source.Catalog,\r\n",
					"        Source.CacheExpiration,\r\n",
					"        Source.Deleted,\r\n",
					"        Source.GUID,\r\n",
					"        Source.SourceSystemID,\r\n",
					"        Source.IngestionDate,\r\n",
					"        Source.ValidTo,\r\n",
					"        Source.RowID,\r\n",
					"        Source.IsActive)\r\n",
					"     ;   "
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.document_meta_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new document_meta_data\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.document_meta_data\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY DocumentCaseReferenceID NULLS LAST) AS DTreeID,\r\n",
					"    OwnerID,\r\n",
					"    ParentID,\r\n",
					"    DataID,\r\n",
					"    Name,\r\n",
					"    OriginOwnerID,\r\n",
					"    OriginDataID,\r\n",
					"    UserID,\r\n",
					"    GroupID,\r\n",
					"    UPermissions,\r\n",
					"    GPermissions,\r\n",
					"    WPermissions,\r\n",
					"    SPermissions,\r\n",
					"    ACLCount,\r\n",
					"    PermID,\r\n",
					"    DataType,\r\n",
					"    CreatedBy,\r\n",
					"    CreateDate,\r\n",
					"    ModifiedBy,\r\n",
					"    ModifyDate,\r\n",
					"    MaxVers,\r\n",
					"    Reserved,\r\n",
					"    ReservedBy,\r\n",
					"    ReservedDate,\r\n",
					"    VersionNum,\r\n",
					"    DComment,\r\n",
					"    DCategory,\r\n",
					"    SubType,\r\n",
					"    ExAtt1,\r\n",
					"    ExAtt2,\r\n",
					"    Ordering,\r\n",
					"    Major,\r\n",
					"    Minor,\r\n",
					"    ReleaseRef,\r\n",
					"    ChildCount,\r\n",
					"    AssignedTo,\r\n",
					"    DateAssigned,\r\n",
					"    DateEffective,\r\n",
					"    DateExpiration,\r\n",
					"    DateDue,\r\n",
					"    DateStarted,\r\n",
					"    DateCompleted,\r\n",
					"    Status,\r\n",
					"    Priority,\r\n",
					"    GIF,\r\n",
					"    ExtendedData,\r\n",
					"    Catalog,\r\n",
					"    CacheExpiration,\r\n",
					"    Deleted,\r\n",
					"    GUID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.document_meta_data;\r\n",
					""
				],
				"execution_count": 5
			}
		]
	}
}