{
	"name": "hr_contract_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/SAP-HR"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3ff428b8-42f4-4080-9e1e-92229f44f648"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/a82fd28d-5989-4e06-a0bb-1a5d859f9e0c/resourceGroups/pins-rg-data-odw-prod-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-prod-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (sap hr) against the target (odw_harmonised_db.contract_dim)\n",
					"- **New Data:** where a workc in the source does not exist as an ContractCode in the target. NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on workc in source and ContractCode in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"\n",
					"## View contract_dim_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW contract_grouped\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"SELECT  WorkC as ContractCode,\r\n",
					"        First(Work_Contract) as Description, \r\n",
					"        CASE \r\n",
					"            WHEN CT IS NULL\r\n",
					"            THEN 'N/A'\r\n",
					"            ELSE CT\r\n",
					"        END as ContractTypeCode,\r\n",
					"        First(Contract_Type) as ContractType,\r\n",
					"        last(expected_from) AS expected_from\r\n",
					"    \r\n",
					"       \r\n",
					"FROM odw_standardised_db.vw_saphr\r\n",
					"WHERE WorkC IS NOT NULL\r\n",
					"GROUP BY WorkC, CT;"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW contract_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN T1.ContractCode IS NULL\r\n",
					"        THEN T7.ContractID\r\n",
					"        ELSE NULL\r\n",
					"    END as ContractID, \r\n",
					"    T1.ContractCode,\r\n",
					"    T1.Description,\r\n",
					"    T1.ContractTypeCode,\r\n",
					"    T1.ContractType,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from) AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.ContractCode,'.'),\r\n",
					"            IFNULL(T1.Description,'.'),\r\n",
					"            IFNULL(T1.ContractTypeCode,'.'),\r\n",
					"            IFNULL(T1.ContractType,'.'))) AS RowID,\r\n",
					"    'Y' AS IsActive,\r\n",
					"    T7.IsActive AS HistoricIsActive\r\n",
					"\r\n",
					"FROM contract_grouped T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"SAP HR\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.hr_contract_dim T7 ON T1.ContractCode = T7.ContractCode AND\r\n",
					"                                                T1.ContractTypeCode = T7.ContractTypeCode AND \r\n",
					"                                                T7.IsActive = 'Y'     \r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    CASE\r\n",
					"        WHEN T1.ContractCode = T7.ContractCode AND\r\n",
					"            T1.ContractTypeCode = T7.ContractTypeCode\r\n",
					"            AND md5(concat(IFNULL(T1.ContractCode,'.'), IFNULL(T1.Description,'.'), IFNULL(T1.ContractTypeCode,'.'), IFNULL(T1.ContractType,'.'))) <> T7.RowID   -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T7.ContractCode IS NULL -- new contract code\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END  = 'Y'\r\n",
					";"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **contract_dim_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View contract_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW contract_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"Select \r\n",
					"    ContractID,\r\n",
					"    ContractCode,\r\n",
					"    Description,\r\n",
					"    ContractTypeCode,\r\n",
					"    ContractType,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From contract_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"SELECT\r\n",
					"    T1.ContractID,\r\n",
					"    T1.ContractCode,\r\n",
					"    T1.Description,\r\n",
					"    T1.ContractTypeCode,\r\n",
					"    T1.ContractType,\r\n",
					"    T1.SourceSystemID,\r\n",
					"    T1.IngestionDate,\r\n",
					"    T1.ValidTo,\r\n",
					"    T1.RowID,\r\n",
					"    T1.IsActive\r\n",
					"FROM odw_harmonised_db.hr_contract_dim T1\r\n",
					"INNER JOIN contract_dim_new T2 ON T1.ContractCode = T2.ContractCode AND T1.ContractTypeCode = T2.ContractTypeCode \r\n",
					"AND T2.ContractID IS NULL AND T2.IsActive = 'Y'\r\n",
					"; \r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM contract_dim_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW contract_dim_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    T1.ContractID,\n",
					"    T1.ContractCode,\n",
					"    T1.Description,\n",
					"    T1.ContractTypeCode,\n",
					"    T1.ContractType,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM contract_dim_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View contract_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the Business Key (i.e. workc from SAPHR), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the business key, insert rows\n",
					"## Table odw_harmonised.contract_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.hr_contract_dim AS Target\r\n",
					"USING contract_dim_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.ContractID = Target.ContractID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"        \r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (ContractID,\r\n",
					"        ContractCode,\r\n",
					"        Description,\r\n",
					"        ContractTypeCode,\r\n",
					"        ContractType,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)  \r\n",
					"        VALUES (Source.ContractID,\r\n",
					"        Source.ContractCode,\r\n",
					"        Source.Description,\r\n",
					"        Source.ContractTypeCode,\r\n",
					"        Source.ContractType,\r\n",
					"        Source.SourceSystemID,\r\n",
					"        Source.IngestionDate,\r\n",
					"        Source.ValidTo,\r\n",
					"        Source.RowID,\r\n",
					"        Source.IsActive)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised.contract_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Insert new ContractID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.hr_contract_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY ContractID NULLS LAST) AS ContractID,\r\n",
					"    ContractCode,\r\n",
					"    Description,\r\n",
					"    ContractTypeCode,\r\n",
					"    ContractType,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.hr_contract_dim;\r\n",
					""
				],
				"execution_count": 6
			}
		]
	}
}