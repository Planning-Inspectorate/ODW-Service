{
	"name": "py_harmonised_and_hr_measures_monthly",
	"properties": {
		"folder": {
			"name": "archive"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3f0e1f15-e64f-46e1-9a3d-297054ef72bc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/a82fd28d-5989-4e06-a0bb-1a5d859f9e0c/resourceGroups/pins-rg-data-odw-prod-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-prod-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-prod-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"start_month=7\n",
					"start_year=2023\n",
					"end_month=7\n",
					"end_year=2023\n",
					"process_hr_measures=False"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"from notebookutils import mssparkutils\n",
					"from datetime import datetime, date\n",
					"import pandas as pd\n",
					"\n",
					"spark = SparkSession.builder.getOrCreate()\n",
					"start_date = datetime(year=start_year, month=start_month, day=1)\n",
					"end_date = datetime(year=end_year, month=end_month, day=1)\n",
					"\n",
					"dates = pd.date_range(start_date, end_date, freq='MS').strftime(\"%Y-%m-%d\").tolist()\n",
					"\n",
					"timeout_in_seconds = 60 * 60\n",
					"\n",
					"for date in dates:\n",
					"    print(f\"Processing: {date}\")\n",
					"    mssparkutils.notebook.run('/odw-harmonised/SAP-HR/sap-hr-views', timeout_in_seconds, arguments={\"expected_from\": date})\n",
					"    mssparkutils.notebook.run('/odw-harmonised/SAP-HR/sap-hr-master', timeout_in_seconds)\n",
					"\n",
					"    # subtract 1 day from the date to get the report_month_end_date \n",
					"    if process_hr_measures:\n",
					"        report_month_end_date = (pd.to_datetime(date) -  pd.to_timedelta(1, unit='d')).strftime(\"%Y-%m-%d\")\n",
					"        mssparkutils.notebook.run('/odw-curated/mipins_hr_measures', timeout_in_seconds, arguments={\"expected_from\": report_month_end_date})"
				],
				"execution_count": 5
			}
		]
	}
}