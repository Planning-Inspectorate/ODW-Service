{
	"name": "mipins_hr_protected_data",
	"properties": {
		"description": "Creation of a view of organisation unit for PBI Reports",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "24ba3634-ae6c-45a0-b109-47aa7b7d7bd6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_mipins_hr_protected_data\r\n",
					"\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT DISTINCT \r\n",
					"\r\n",
					"    T1.EmployeeID as PersNo,\r\n",
					"    T2.LastName,\r\n",
					"    T2.FirstName,\r\n",
					"    T1.CoCd,\r\n",
					"    T1.CompanyCode,\r\n",
					"    T4.LocationID as Loc,\r\n",
					"    T4.LocationCode as Location,\r\n",
					"    T10.PSGroupCode as PSGroup,    \r\n",
					"    T10.Description as PayBandDescription,\r\n",
					"    T6.OrganisationUnit as OrgUnit,\r\n",
					"    T6.Description as OrganisationalUnit,\r\n",
					"    T7.PersonnelAreaCode as PA,\r\n",
					"    T7.Description as PersonnelArea,\r\n",
					"    T8.PersonnelSubAreaCode as PSubArea,\r\n",
					"    T8.Description as PersonnelSubArea,\r\n",
					"    T3.ContractCode as WorkC,\r\n",
					"    T3.Description as WorkContract,\r\n",
					"    T0.EmploymentStartDate as OrgStartDate,\r\n",
					"    T0.EmploymentEndDate as Leaving,\r\n",
					"    T0.Act, \r\n",
					"    T0.ActionType,\r\n",
					"    T0.ActR,\r\n",
					"    T2.ReasonForAction,\r\n",
					"    T0.S,\r\n",
					"    T2.EmploymentStatus,\r\n",
					"    T11.EmployeeNumber,\r\n",
					"    T9.PositionCode as Position,\r\n",
					"    T9.Description as Position1,\r\n",
					"    T2.AnnualSalary,\r\n",
					"    T2.Currency,\r\n",
					"    T0.UserID,\r\n",
					"    T2.EmailAddress,\r\n",
					"    TM3.EmployeeID as PersNo1,\r\n",
					"    CONCAT(TM3.FirstName, ' ', TM3.LastName) AS NameOfManager,\r\n",
					"    TM2.PositionCode AS ManagerPosition,\r\n",
					"    TM3.EmailAddress AS LMEmail,\r\n",
					"\r\n",
					"    'Y' as IsActive\r\n",
					"\r\n",
					"FROM odw_harmonised_db.hr_protected_data_dim T0\r\n",
					"LEFT JOIN odw_harmonised_db.hr_record_fact T1 ON T0.EmployeeID = T1.EmployeeID and T1.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_dim T2 ON T1.EmployeeID = T2.EmployeeID and T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_contract_dim T3 ON T1.ContractID = T3.ContractID and T3.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_pins_location_dim T4 ON T1.LocationID = T4.LocationID and T4.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_hr_hierarchy_dim T5 ON T1.EmployeeID = T5.EmployeeID and T5.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_organisation_unit_dim T6 ON T1.OrganisationalUnitID = T6.OrganisationUnitID and T6.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_area_dim T7 ON T1.PersonnelAreaID = T7.PersonnelAreaID and T7.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_sub_area_dim T8 ON T1.PersonnelSubAreaID = T8.PersonnelSubAreaID and T8.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_position_dim T9 ON T1.PositionID = T9.PositionID and T9.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_payband_dim T10 ON T1.PaybandID = T10.PaybandID and T10.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_fact T11 ON T1.EmployeeID = T11.EmployeeID and T11.IsActive = 'Y'\r\n",
					"\r\n",
					"-- linemanager tables\r\n",
					"LEFT JOIN odw_harmonised_db.hr_record_fact TM1 ON T5.ManagerEmployeeID = TM1.EmployeeID and TM1.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_position_dim TM2 ON TM1.PositionID = TM2.PositionID and TM2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_dim TM3 ON TM1.EmployeeID = TM3.EmployeeID and TM3.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE T0.IsActive = 'Y'\r\n",
					""
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT [PC Date]\n",
					"      ,[PC Month]\n",
					"      ,[month_int]\n",
					"      ,[PC Month Latest]\n",
					"      ,[MonthYearLatest_SortKey]\n",
					"      ,[PC Year]\n",
					"      ,[PC FY]\n",
					"      ,[PC FY Latest]\n",
					"      ,[FY-Latest_SortKey]\n",
					"      ,[Ref Number]\n",
					"      --Columns replaced by columns below\n",
					"      --,[Disabled]\n",
					"      --,[Ethnicity]\n",
					"      --,[Religion]\n",
					"      --,[Sexual Orientation]\n",
					"      ,[PC Headcount]\n",
					"      ,[Data Completeness]\n",
					"      ,[Disability group]\n",
					"      ,[Ethnicity group]\n",
					"      ,[Religion group]\n",
					"      ,[Sexual Orientation group]\n",
					"      ,'PINS' as source\n",
					"      ,'N/A' as responsibility_level\n",
					"      ,NULL as Sex\n",
					"      ,NULL as [Age Band]\n",
					"  FROM [PBI].[vw_HR_ProtectedData];\n",
					"\n",
					"source view:\n",
					"\n",
					"\n",
					"WITH Dates\n",
					"AS\n",
					"(\n",
					"SELECT DISTINCT\n",
					" REPLACE(RIGHT(replace(file_name,'.xlsx',''),7),'_','-')+'-01' AS Dt\n",
					"FROM SAP_HR.Protected_Data\n",
					")\n",
					",MinMaxDates AS\n",
					"(\n",
					"SELECT MIN(Dt) AS StartDate\n",
					"\t  ,MAX(Dt) AS EndDate\n",
					"FROM Dates\n",
					")\n",
					",dimDate\n",
					"AS\n",
					"(\n",
					"\tSELECT [date] \n",
					"\t\t  ,month_name\n",
					"\t\t  ,month_int\n",
					"\t\t  ,[Month-Year Latest] AS [Month Latest]\n",
					"\t\t  ,CASE WHEN [Month-Year] = [Month-Year Latest] THEN SortKey*-1\n",
					"\t\t   ELSE -999999\n",
					"\t\t   END AS [MonthYearLatest_SortKey]\n",
					"\t\t  ,year_int AS [Year]\n",
					"\t\t  ,financial_year AS [FY]\n",
					"\t\t  ,CASE WHEN FY_Calc = 'Current' THEN 'Latest'\n",
					"\t\t   ELSE 'FY-' + CAST(RIGHT(financial_year,2) AS varchar)\n",
					"\t\t   END AS [FY Latest]\n",
					"\t\t  ,CASE WHEN FY_Calc = 'Current' THEN 2099\n",
					"\t\t   ELSE financial_year\n",
					"\t\t   END AS [FY-latest_SortKey]\n",
					"\tFROM\n",
					"\t(\n",
					"\t\tselect\n",
					"\t\t[date]\n",
					"\t\t,month_name\n",
					"\t\t,month_int\n",
					"\t\t,year_int\n",
					"\t\t,case when month([date])>3 and year([date]) = year([date]) then year([date]) \n",
					"\t\t\twhen month([date])<=3 and year([date]) = year([date])+1 then year([date])\n",
					"\t\t\twhen month([date])>3 and year([date]) = year([date])-1 then year([date])-1 \n",
					"\t\t\twhen month([date])<=3 and year([date]) = year([date]) then year([date])-1\n",
					"\t\tend as financial_year\n",
					"\t\t,case when CAST(GETDATE() as date) >= DATEFROMPARTS(YEAR(GETDATE()),04,01) THEN\n",
					"\t\t\t\t\t\tcase when month([date])>3 and year([date]) = year(getdate()) then 'Current'\n",
					"\t\t\t\t\t\t\t\twhen month([date])<=3 and year([date]) = year(getdate())+1 then 'Current'\n",
					"\t\t\t\t\t\t\t\twhen month([date])>3 and year([date]) = year(getdate())-1 then 'Previous'\n",
					"\t\t\t\t\t\t\t\twhen month([date])<=3 and year([date]) = year(getdate()) then 'Previous'\n",
					"\t\t\t\t\t\t\telse null\n",
					"\t\t\t\t\t\tend\n",
					"\t\t\t\t  when CAST(GETDATE() as date) >= DATEFROMPARTS(YEAR(GETDATE())-1,04,01) THEN\n",
					"\t\t\t\t\t\t case when month([date])>3 and year([date]) = year(getdate())-1 then 'Current'\n",
					"\t\t\t\t\t\t\t\twhen month([date])<=3 and year([date]) = year(getdate()) then 'Current'\n",
					"\t\t\t\t\t\t\t\twhen month([date])>3 and year([date]) = year(getdate())-2 then 'Previous'\n",
					"\t\t\t\t\t\t\t\twhen month([date])<=3 and year([date]) = year(getdate())-1 then 'Previous'\n",
					"\t\t\t\t\t\t\telse null\n",
					"\t\t\t\t\t\tend \n",
					"\t\t\tend as FY_Calc\n",
					"\t\t,FORMAT([date],'yyyyMM') AS SortKey\n",
					"\t\t,CONCAT(month_name,' - ',RIGHT(year_int,2)) AS [Month-Year]\n",
					"\t\t,CASE WHEN first_of_month = DATEADD(M,-1,DATEADD(D,1,EOMONTH((select EndDate FROM MinMaxDates),0))) THEN 'Latest'\n",
					"\t\t\tELSE CONCAT(month_name,' - ',RIGHT(year_int,2)) \n",
					"\t\tEND AS [Month-Year Latest]\n",
					"\tfrom live.dim_date\n",
					"\twhere date IN (select dt FROM Dates)\n",
					"\t--between (select StartDate from MinMaxDates) and (select EndDate from MinMaxDates)\n",
					"\t)a\n",
					")\n",
					",Final\n",
					"AS\n",
					"(\n",
					"\tSELECT \n",
					"\t\t   CAST(b.date AS date) AS [PC Date]\n",
					"\t\t  ,b.month_name AS [PC Month]\n",
					"\t\t  ,b.month_int\n",
					"\t\t  ,b.[Month Latest] AS [PC Month Latest]\n",
					"\t\t  ,b.MonthYearLatest_SortKey\n",
					"\t\t  ,b.Year AS [PC Year]\n",
					"\t\t  ,b.FY AS [PC FY]\n",
					"\t\t  ,b.[FY Latest] AS [PC FY Latest]\n",
					"\t\t  ,b.[FY-Latest_SortKey] \n",
					"\t\t  ,a.[Ref Number]\n",
					"\t\t  ,[Disability Text]\n",
					"\t\t  ,CASE WHEN [Disability Text] IS NULL THEN 'No Record'\n",
					"\t\t\t\tWHEN [Disability Text] = 'DISABLED' THEN 'Yes'\n",
					"\t\t\t\tWHEN [Disability Text] = 'NOT DISABLED' THEN 'No'\n",
					"\t\t\t\tWHEN [Disability Text] IN ('PREFER NOT TO SAY','Not disclosed','Do not wish to disclose') THEN 'Unknown'\n",
					"\t\t\tEND AS [Disabled]\n",
					"\t\t, case [Disability Text]\n",
					"\t\twhen 'PREFER NOT TO SAY' then 'Undeclared'\n",
					"\t\twhen 'DISABLED' then 'Disabled'\n",
					"\t\twhen 'NOT DISABLED' then 'Not Disabled'\n",
					"\t\telse 'Not reported'\n",
					"\t  end as [Disability group]\n",
					"\t\t  ,[Ethnic origin]\n",
					"\t\t  ,CASE WHEN [Ethnic origin] IS NULL THEN 'No Record'\n",
					"\t\t\t\tWHEN [Ethnic origin] LIKE 'White%' THEN 'White'\n",
					"\t\t\t\tWHEN [Ethnic origin] IN ('PREFER NOT TO SAY','Not disclosed','Do not wish to disclose','Unknown') THEN 'Unknown'\n",
					"\t\t   ELSE 'BME'\n",
					"\t\t   END AS [Ethnicity],\n",
					"\t\t   case [Ethnic origin]\n",
					"\t\twhen 'Asian - Bangladeshi' then 'Asian'\n",
					"\t\twhen 'Asian - Indian' then 'Asian'\n",
					"\t\twhen 'Asian - Other' then 'Asian'\n",
					"\t\twhen 'Asian - Pakistani' then 'Asian'\n",
					"\t\twhen 'Black - African' then 'Black'\n",
					"\t\twhen 'Black - Caribbean' then 'Black'\n",
					"\t\twhen 'Chinese' then 'Chinese'\n",
					"\t\twhen 'Do not wish to disclose' then 'Not declared'\n",
					"\t\twhen 'Mixed - Other' then 'Mixed'\n",
					"\t\twhen 'Mixed - White & Asian' then 'Mixed'\n",
					"\t\twhen 'Mixed - White & Black African' then 'Mixed'\n",
					"\t\twhen 'Mixed - White & Black Caribbean' then 'Mixed'\n",
					"\t\twhen 'Other' then 'Other ethnicity'\n",
					"\t\twhen 'Unknown' then 'Not reported'\n",
					"\t\twhen 'White - Any Background' then 'White'\n",
					"\t\twhen 'White - British' then 'White'\n",
					"\t\twhen 'White - Irish' then 'White'\n",
					"\t\twhen 'White - Other' then 'White'\n",
					"\t\twhen 'White - Any Other Background' then 'White'\n",
					"\t\telse 'Not reported'\n",
					"\tend as [Ethnicity group]\n",
					"\t\t ,[Religious Denomination Key]\n",
					"\t\t ,CASE WHEN [Religious Denomination Key] IS NULL THEN 'No Record'\n",
					"\t\t\t   WHEN [Religious Denomination Key] IN ('None','Agnostic / Atheist') OR LEFT([Religious Denomination Key],3) IN ('ath','agn') THEN 'Agnostic / Atheist'\n",
					"\t\t\t   WHEN [Religious Denomination Key] = 'Christian' THEN 'Christian'\n",
					"\t\t\t   WHEN [Religious Denomination Key] IN ('PREFER NOT TO SAY','Not disclosed','Do not wish to disclose','Unknown') THEN 'Unknown'\n",
					"\t\t   ELSE 'Other Religion'\n",
					"\t\t   END AS [Religion]\n",
					"\t\t, case [Religious Denomination Key]\n",
					"\t\twhen 'Agnostic' then 'No religion'\n",
					"\t\twhen 'Atheist' then 'No religion'\n",
					"\t\twhen 'Buddhist' then 'Buddhist'\n",
					"\t\twhen 'Christian' then 'Christian'\n",
					"\t\twhen 'Do not wish to disclose' then 'Not declared'\n",
					"\t\twhen 'Hindu' then 'Hindu'\n",
					"\t\twhen 'Jewish' then 'Jewish'\n",
					"\t\twhen 'Muslim' then 'Muslim'\n",
					"\t\twhen 'None' then 'No religion'\n",
					"\t\twhen 'Other (please specify)' then 'Any other religion'\n",
					"\t\twhen 'Sikh' then 'Sikh'\n",
					"\t\telse 'Not reported'\n",
					"\t  end as [Religion group]\n",
					"\t\t ,SxO\n",
					"\t\t ,CASE WHEN SxO IS NULL THEN 'No Record'\n",
					"\t\t\t   WHEN SxO ='Heterosexual' THEN 'Heterosexual'\n",
					"\t\t\t   WHEN LEFT(SxO,3) IN ('Gay','Les','Bis') THEN 'LGBT'\n",
					"\t\t\t   WHEN SxO IN ('PREFER NOT TO SAY','Not disclosed','Do not wish to disclose','Unknown','Other') THEN 'Unknown'\n",
					"\t\t   ELSE 'Other'\n",
					"\t\t   END AS [Sexual Orientation]\n",
					"\t\t ,case [SxO]\n",
					"\t\twhen 'Bisexual' then 'Bisexual'\n",
					"\t\twhen 'Gay Man' then 'Lesbian / Gay'\n",
					"\t\twhen 'Heterosexual' then 'Hetero / Straight'\n",
					"\t\twhen 'Lesbian' then 'Lesbian / Gay'\n",
					"\t\twhen 'Not disclosed' then 'Undeclared'\n",
					"\t\twhen 'Other' then 'Other'\n",
					"\t\telse 'Not reported'\n",
					"\t  end as [Sexual Orientation group]\n",
					"\tFROM sap_hr.protected_data a\n",
					"\tLEFT OUTER JOIN dimDate b\n",
					"\tON REPLACE(RIGHT(replace(a.file_name,'.xlsx',''),7),'_','-')+'-01'  = b.date\n",
					")\n",
					"SELECT *\n",
					"      ,1 AS [PC Headcount]\n",
					"\t  ,CASE WHEN [Disabled] IN ('No Record','Unknown') THEN 'No Record or Data not supplied for one or more categories.'\n",
					"\t  \t    WHEN Ethnicity IN ('No Record','Unknown') THEN 'No Record or Data not supplied for one or more categories.'\n",
					"\t\t\tWHEN Religion IN ('No Record','Unknown') THEN 'No Record or Data not supplied for one or more categories.'\n",
					"\t\t\tWHEN [Sexual Orientation] IN ('No Record','Unknown') THEN 'No Record or Data not supplied for one or more categories.'\n",
					"\t   ELSE 'Records Complete'\n",
					"\t   END AS [Data Completeness] \n",
					"FROM Final\n",
					"GO"
				],
				"execution_count": null
			}
		]
	}
}