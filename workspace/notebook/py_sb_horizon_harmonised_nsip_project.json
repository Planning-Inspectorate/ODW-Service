{
	"name": "py_sb_horizon_harmonised_nsip_project",
	"properties": {
		"description": "Sample notebook showing how to join a flat table with a spark table with arrays.",
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1079c5af-1bfb-434c-a728-a0148bb769fb"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### The purpose of this pyspark notebook is to read service bus data from owb_standarsied_db Delta table and proccess to single owb_harmonised_db Delta table based on existing MiPINS business logic.\n",
					"\n",
					"**Description**  \n",
					"The purpose of this pyspark notebook is to read service bus data from owb_standarsied_db Delta table and appends into single owb_harmonised_db Delta tables based on the existing MiPINS business logic.\n",
					"\n",
					"**Spark Cluster Configuration** -> Apache Spark Version- 3.4, Python Version \t\t- 3.10, Delta Lake Version \t- 2.4\n",
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### Import required libraries"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from odw.core.util.logging_util import LoggingUtil\n",
					"from pyspark.sql.types import IntegerType, ArrayType, StructType, StructField\n",
					"from pyspark.sql import Row\n",
					"from pyspark.sql.functions import *\n",
					"from datetime import datetime, date\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Define required delta tables and variables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"service_bus_table = \"odw_harmonised_db.sb_nsip_project\"\n",
					"horizon_table = \"odw_standardised_db.horizon_nsip_data\"\n",
					"spark_table_final = \"odw_harmonised_db.nsip_project\"\n",
					"\n",
					"start_exec_time = str(datetime.now())\n",
					"insert_count = 0\n",
					"update_count = 0\n",
					"delete_count = 0"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Initialise Logging decorator"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Initialise Application Insight Logging functions"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"%run utils/py_utils_common_logging_output"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Get source data from Service Bus"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"try:\n",
					"    # Get data out of the service bus with additional fields needed for Horizon data\n",
					"    service_bus_data = spark.sql(f\"\"\"\n",
					"                        SELECT \n",
					"                            NSIPProjectInfoInternalID\n",
					"                            ,caseId\n",
					"                            ,caseReference\n",
					"                            ,projectName\n",
					"                            ,projectNameWelsh\n",
					"                            ,projectDescription\n",
					"                            ,projectDescriptionWelsh\n",
					"                            ,CAST(NULL AS string) AS summary\n",
					"                            ,CAST(NULL AS Timestamp) AS caseCreatedDate\n",
					"                            ,decision\n",
					"                            ,publishStatus\n",
					"                            ,sector\n",
					"                            ,projectType\n",
					"                            ,sourceSystem\n",
					"                            ,stage\n",
					"                            ,projectLocation\n",
					"                            ,projectLocationWelsh\n",
					"                            ,projectEmailAddress\n",
					"                            ,regions\n",
					"                            ,CAST(transboundary AS Boolean) AS transboundary\n",
					"                            ,CAST(easting AS Integer) AS easting\n",
					"                            ,CAST(northing AS Integer) AS northing\n",
					"                            ,welshLanguage\n",
					"                            ,mapZoomLevel\n",
					"                            ,secretaryOfState\n",
					"                            ,datePINSFirstNotifiedOfProject\n",
					"                            ,dateProjectAppearsOnWebsite\n",
					"                            ,anticipatedSubmissionDateNonSpecific\n",
					"                            ,anticipatedDateOfSubmission\n",
					"                            ,screeningOpinionSought\n",
					"                            ,screeningOpinionIssued\n",
					"                            ,scopingOpinionSought\n",
					"                            ,scopingOpinionIssued\n",
					"                            ,section46Notification\n",
					"                            ,dateOfDCOSubmission\n",
					"                            ,deadlineForAcceptanceDecision\n",
					"                            ,dateOfDCOAcceptance\n",
					"                            ,dateOfNonAcceptance\n",
					"                            ,dateOfRepresentationPeriodOpen\n",
					"                            ,dateOfRelevantRepresentationClose\n",
					"                            ,extensionToDateRelevantRepresentationsClose\n",
					"                            ,dateRRepAppearOnWebsite\n",
					"                            ,dateIAPIDue\n",
					"                            ,rule6LetterPublishDate\n",
					"                            ,preliminaryMeetingStartDate\n",
					"                            ,notificationDateForPMAndEventsDirectlyFollowingPM\n",
					"                            ,notificationDateForEventsDeveloper\n",
					"                            ,dateSection58NoticeReceived\n",
					"                            ,confirmedStartOfExamination\n",
					"                            ,rule8LetterPublishDate\n",
					"                            ,deadlineForCloseOfExamination\n",
					"                            ,dateTimeExaminationEnds\n",
					"                            ,stage4ExtensionToExamCloseDate\n",
					"                            ,deadlineForSubmissionOfRecommendation\n",
					"                            ,dateOfRecommendations\n",
					"                            ,stage5ExtensionToRecommendationDeadline\n",
					"                            ,deadlineForDecision\n",
					"                            ,confirmedDateOfDecision\n",
					"                            ,stage5ExtensionToDecisionDeadline\n",
					"                            ,jRPeriodEndDate\n",
					"                            ,dateProjectWithdrawn\n",
					"                            ,operationsLeadId\n",
					"                            ,operationsManagerId\n",
					"                            ,caseManagerId\n",
					"                            ,nsipOfficerIds\n",
					"                            ,nsipAdministrationOfficerIds\n",
					"                            ,leadInspectorId\n",
					"                            ,inspectorIds\n",
					"                            ,environmentalServicesOfficerId\n",
					"                            ,legalOfficerId\n",
					"                            ,applicantId\n",
					"                            ,CAST(migrationStatus AS Boolean) AS migrationStatus\n",
					"                            ,dateOfReOpenRelevantRepresentationStart\n",
					"                            ,dateOfReOpenRelevantRepresentationClose\n",
					"                            ,IsActive\n",
					"                            --Start Horizon only fields\n",
					"                            ,CAST(NULL AS String) AS examTimetablePublishStatus\n",
					"                            ,CAST(NULL AS String) AS twitteraccountname\n",
					"                            ,CAST(NULL AS String) AS exasize\n",
					"                            ,CAST(NULL AS String) AS tene\n",
					"                            ,CAST(NULL AS String) AS promotername\n",
					"                            ,CAST(NULL AS String) AS applicantfirstname\n",
					"                            ,CAST(NULL AS String) AS applicantlastname\n",
					"                            ,CAST(NULL AS String) AS addressLine1\n",
					"                            ,CAST(NULL AS String) AS addressLine2\n",
					"                            ,CAST(NULL AS String) AS addressTown\n",
					"                            ,CAST(NULL AS String) AS addressCounty\n",
					"                            ,CAST(NULL AS String) AS Postcode\n",
					"                            ,CAST(NULL AS String) AS applicantemailaddress\n",
					"                            ,CAST(NULL AS String) AS applicantwebaddress\n",
					"                            ,CAST(NULL AS String) AS applicantphonenumber\n",
					"                            ,CAST(NULL AS String) AS applicantdescriptionofproject\n",
					"                            ,CAST(NULL AS int)  as HorizonCaseNumber\n",
					"                            --End Horizon only fields\n",
					"                            ,TRUE AS migrated\n",
					"                            ,ODTSourceSystem\n",
					"                            ,SourceSystemID\n",
					"                            ,IngestionDate\n",
					"                            ,ValidTo\n",
					"                            ,'' AS RowID\n",
					"                            ,isMaterialChange\n",
					"                        FROM \n",
					"                            {service_bus_table}\n",
					"                        \"\"\")\n",
					"except Exception as e:\n",
					"        logError(f\"Error in source Service Bus SQL query :\\n{e}\")\n",
					"        error_message = app_insight_logger.format_error_message(e, max_length=800)\n",
					"\n",
					"        end_exec_time = str(datetime.now())\n",
					"        app_insight_logger.add_table_result(\n",
					"            delta_table_name = spark_table_final,\n",
					"            insert_count = insert_count, \n",
					"            update_count = update_count, \n",
					"            delete_count = delete_count, \n",
					"            table_result = \"failed\",\n",
					"            start_exec_time = start_exec_time, \n",
					"            end_exec_time = end_exec_time,\n",
					"            total_exec_time = \"\",\n",
					"            error_message = error_message\n",
					"        )\n",
					"        \n",
					"        # Exit with the JSON result\n",
					"        mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Get source data from Horizon"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Get data out of Horizon and matching the SB schema (with additional fields and ensure data types match)\n",
					"try:\n",
					"    horizon_data = spark.sql(f\"\"\"\n",
					"                    SELECT\n",
					"                            CAST(NULL AS Long) AS NSIPProjectInfoInternalID\n",
					"                            ,CAST(Horizon.caseNodeId AS Int) AS caseid \n",
					"                            ,Horizon.casereference\n",
					"                            ,Horizon.projectname\n",
					"                            ,Horizon.projectNameWelsh AS projectNameWelsh\n",
					"                            ,Horizon.projectDescription AS projectDescription\n",
					"                            ,Horizon.projectDescriptionWelsh AS projectDescriptionWelsh\n",
					"                            ,Horizon.summary\n",
					"                            ,Horizon.caseCreatedDate\n",
					"                            ,CAST(NULL AS String) AS decision\n",
					"                            ,CASE WHEN LOWER(projectstatus) = 'not published' THEN 'unpublished' ELSE LOWER(projectstatus) END AS publishStatus\n",
					"                            ,sector\n",
					"                            ,projecttype AS projectType\n",
					"                            ,'Horizon' AS sourceSystem\n",
					"                            ,stage\n",
					"                            ,projectLocation\n",
					"                            ,Horizon.projectLocationWelsh AS projectLocationWelsh\n",
					"                            ,projectEmailAddress\n",
					"                            ,LOWER(Region) AS Region\n",
					"                            ,CAST(transboundary AS Boolean) AS transboundary\n",
					"                            ,CAST(easting AS Integer) AS easting\n",
					"                            ,CAST(northing AS Integer) AS northing\n",
					"                            ,CAST(welshLanguage AS Boolean) AS welshLanguage\n",
					"                            ,LOWER(mapZoomLevel) AS mapZoomLevel\n",
					"                            ,sos AS secretaryOfState\n",
					"                            ,datePINSFirstNotifiedOfProject\n",
					"                            ,dateProjectAppearsOnWebsite\n",
					"                            ,anticipatedSubmissionDateNonSpecific\n",
					"                            ,anticipatedDateOfSubmission\n",
					"                            ,screeningOpinionSought\n",
					"                            ,screeningOpinionIssued\n",
					"                            ,scopingOpinionSought\n",
					"                            ,scopingOpinionIssued\n",
					"                            ,section46Notification\n",
					"                            ,dateOfDCOSubmission\n",
					"                            ,deadlineForAcceptanceDecision\n",
					"                            ,dateOfDCOAcceptance\n",
					"                            ,CAST(NULL AS Date) AS dateOfNonAcceptance\n",
					"                            ,dateOfRepresentationPeriodOpen\n",
					"                            ,dateOfRelevantRepresentationClose\n",
					"                            ,extensionToDateRelevantRepresentationsClose\n",
					"                            ,dateRRepAppearOnWebsite\n",
					"                            ,CAST(NULL AS Date) AS dateIAPIDue\n",
					"                            ,CAST(NULL AS Date) AS rule6LetterPublishDate\n",
					"                            ,preliminaryMeetingStartDate\n",
					"                            ,CAST(NULL AS Date) AS notificationDateForPMAndEventsDirectlyFollowingPM\n",
					"                            ,CAST(NULL AS Date) AS notificationDateForEventsDeveloper\n",
					"                            ,dateSection58NoticeReceived\n",
					"                            ,confirmedStartOfExamination\n",
					"                            ,CAST(NULL AS Date) AS rule8LetterPublishDate\n",
					"                            ,deadlineForCloseOfExamination\n",
					"                            ,dateTimeExaminationEnds\n",
					"                            ,stage4ExtensionToExamCloseDate\n",
					"                            ,deadlineForSubmissionOfRecommendation\n",
					"                            ,dateOfRecommendations\n",
					"                            ,stage5ExtensionToRecommendationDeadline\n",
					"                            ,deadlineForDecision\n",
					"                            ,confirmedDateOfDecision\n",
					"                            ,stage5ExtensionToDecisionDeadline\n",
					"                            ,jRPeriodEndDate\n",
					"                            ,dateProjectWithdrawn\n",
					"                            ,CAST(NULL AS String) AS operationsLeadId\n",
					"                            ,CAST(NULL AS String) AS operationsManagerId\n",
					"                            ,CAST(NULL AS String) AS caseManagerId\n",
					"                            ,CAST(NULL AS String) AS nsipOfficerIds\n",
					"                            ,CAST(NULL AS String) AS nsipAdministrationOfficerIds\n",
					"                            ,CAST(NULL AS String) AS leadInspectorId\n",
					"                            ,CAST(NULL AS String) AS inspectorIds\n",
					"                            ,CAST(NULL AS String) AS environmentalServicesOfficerId\n",
					"                            ,CAST(NULL AS String) AS legalOfficerId\n",
					"                            ,CAST(NULL AS String) AS applicantId\n",
					"                            ,CAST(FALSE AS Boolean) AS migrationStatus\n",
					"                            ,CAST(NULL AS Date) AS dateOfReOpenRelevantRepresentationStart\n",
					"                            ,CAST(NULL AS Date) AS dateOfReOpenRelevantRepresentationClose\n",
					"                            --Start Horizon only fields\n",
					"                            ,examTimetablePublishStatus\n",
					"                            ,twitteraccountname\n",
					"                            ,exasize\n",
					"                            ,tene\n",
					"                            ,promotername\n",
					"                            ,applicantfirstname\n",
					"                            ,applicantlastname\n",
					"                            ,addressLine1\n",
					"                            ,addressLine2\n",
					"                            ,addressTown\n",
					"                            ,addressCounty\n",
					"                            ,Postcode\n",
					"                            ,applicantemailaddress\n",
					"                            ,applicantwebaddress\n",
					"                            ,applicantphonenumber\n",
					"                            ,applicantdescriptionofproject\n",
					"                            ,HorizonCaseNumber\n",
					"                            --End Horizon only fields\n",
					"                            ,FALSE AS migrated\n",
					"                            ,'Horizon' AS ODTSourceSystem\n",
					"                            ,NULL AS SourceSystemID\n",
					"                            ,MIN(ingested_datetime) AS IngestionDate\n",
					"                            ,NULL AS ValidTo\n",
					"                            ,'' AS RowID\n",
					"                            ,CAST(NULL AS BOOLEAN) As isMaterialChange\n",
					"                            ,'Y' AS IsActive\n",
					"    FROM\n",
					"        {horizon_table} AS Horizon\n",
					"        LEFT OUTER JOIN \n",
					"                (   SELECT\n",
					"                        caseId\n",
					"                        ,MIN(IngestionDate) AS ingested\n",
					"                    FROM\n",
					"                        {service_bus_table} AS Service_Bus\n",
					"                    GROUP BY\n",
					"                        caseId\n",
					"                ) AS First_seen\n",
					"            ON Horizon.HorizonCaseNumber = First_seen.caseId\n",
					"            AND Horizon.ingested_datetime >= First_seen.ingested\n",
					"    WHERE\n",
					"        caseId IS NULL -- Need to drop cases that have been migrated, but keep the history from Horizon\n",
					"    GROUP BY\n",
					"        CAST(Horizon.caseNodeId AS Int)\n",
					"        ,Horizon.casereference\n",
					"        ,Horizon.projectname\n",
					"        ,Horizon.projectNameWelsh\n",
					"        ,Horizon.projectDescription\n",
					"        ,Horizon.projectDescriptionWelsh\n",
					"        ,Horizon.summary\n",
					"        ,Horizon.caseCreatedDate\n",
					"        ,CASE WHEN LOWER(projectstatus) = 'not published' THEN 'unpublished' ELSE LOWER(projectstatus) END\n",
					"        ,sector\n",
					"        ,projecttype\n",
					"        ,stage\n",
					"        ,projectLocation\n",
					"        ,Horizon.projectLocationWelsh\n",
					"        ,projectEmailAddress\n",
					"        ,LOWER(Region)\n",
					"        ,CAST(transboundary AS Boolean) \n",
					"        ,CAST(easting AS Integer)\n",
					"        ,CAST(northing AS Integer)\n",
					"        ,CAST(welshLanguage AS Boolean)\n",
					"        ,LOWER(mapZoomLevel)\n",
					"        ,sos\n",
					"        ,datePINSFirstNotifiedOfProject\n",
					"        ,dateProjectAppearsOnWebsite\n",
					"        ,anticipatedSubmissionDateNonSpecific\n",
					"        ,anticipatedDateOfSubmission\n",
					"        ,screeningOpinionSought\n",
					"        ,screeningOpinionIssued\n",
					"        ,scopingOpinionSought\n",
					"        ,scopingOpinionIssued\n",
					"        ,section46Notification\n",
					"        ,dateOfDCOSubmission\n",
					"        ,deadlineForAcceptanceDecision\n",
					"        ,dateOfDCOAcceptance\n",
					"        ,dateOfRepresentationPeriodOpen\n",
					"        ,dateOfRelevantRepresentationClose\n",
					"        ,extensionToDateRelevantRepresentationsClose\n",
					"        ,dateRRepAppearOnWebsite\n",
					"        ,preliminaryMeetingStartDate\n",
					"        ,dateSection58NoticeReceived\n",
					"        ,confirmedStartOfExamination\n",
					"        ,deadlineForCloseOfExamination\n",
					"        ,dateTimeExaminationEnds\n",
					"        ,stage4ExtensionToExamCloseDate\n",
					"        ,deadlineForSubmissionOfRecommendation\n",
					"        ,dateOfRecommendations\n",
					"        ,stage5ExtensionToRecommendationDeadline\n",
					"        ,deadlineForDecision\n",
					"        ,confirmedDateOfDecision\n",
					"        ,stage5ExtensionToDecisionDeadline\n",
					"        ,jRPeriodEndDate\n",
					"        ,dateProjectWithdrawn\n",
					"        ,cast(isMaterialChange AS BOOLEAN)\n",
					"        --Start Horizon only fields\n",
					"        ,examTimetablePublishStatus\n",
					"        ,twitteraccountname\n",
					"        ,exasize\n",
					"        ,tene\n",
					"        ,promotername\n",
					"        ,applicantfirstname\n",
					"        ,applicantlastname\n",
					"        ,addressLine1\n",
					"        ,addressLine2\n",
					"        ,addressTown\n",
					"        ,addressCounty\n",
					"        ,Postcode\n",
					"        ,applicantemailaddress\n",
					"        ,applicantwebaddress\n",
					"        ,applicantphonenumber\n",
					"        ,applicantdescriptionofproject\n",
					"        ,HorizonCaseNumber\n",
					"                    \"\"\")\n",
					"except Exception as e:\n",
					"        logError(f\"Error in source Horizon SQL query:\\n{e}\")\n",
					"        error_message = app_insight_logger.format_error_message(e, max_length=800)\n",
					"\n",
					"        end_exec_time = str(datetime.now())\n",
					"        app_insight_logger.add_table_result(\n",
					"            delta_table_name = spark_table_final,\n",
					"            insert_count = insert_count, \n",
					"            update_count = update_count, \n",
					"            delete_count = delete_count, \n",
					"            table_result = \"failed\",\n",
					"            start_exec_time = start_exec_time, \n",
					"            end_exec_time = end_exec_time,\n",
					"            total_exec_time = \"\",\n",
					"            error_message = error_message\n",
					"        )\n",
					"        \n",
					"        # Exit with the JSON result\n",
					"        mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())        "
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### Process Horizon data set"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"try:\n",
					"    #Establish aggregated view of regions\n",
					"    horizon_region = horizon_data.groupBy(\"caseid\",\"IngestionDate\").agg(collect_list(\"region\").alias(\"regions\"))\n",
					"    horizon_data = horizon_data.join(horizon_region, on=[\"caseid\",\"IngestionDate\"], how=\"inner\").drop(\"region\")\n",
					"\n",
					"\n",
					"    #Build nsipOfficerIds \n",
					"    horizon_officer = horizon_data.groupBy(\"caseid\",\"IngestionDate\").agg(collect_list(\"nsipOfficerIds\").alias(\"nsipOfficerIds\"))\n",
					"\n",
					"    horizon_data = horizon_data.drop(\"nsipOfficerIds\")\n",
					"    horizon_data = horizon_data.join(horizon_officer, on=[\"caseid\",\"IngestionDate\"], how=\"inner\")\n",
					"\n",
					"    #Build nsipAdministrationOfficerIds \n",
					"    horizon_Administrationofficer = horizon_data.groupBy(\"caseid\",\"IngestionDate\").agg(collect_list(\"nsipAdministrationOfficerIds\").alias(\"nsipAdministrationOfficerIds\"))\n",
					"\n",
					"    horizon_data = horizon_data.drop(\"nsipAdministrationOfficerIds\")\n",
					"    horizon_data = horizon_data.join(horizon_Administrationofficer, on=[\"caseid\",\"IngestionDate\"], how=\"inner\")\n",
					"    #Build inspectorIds\n",
					"    horizon_inspectorIds = horizon_data.groupBy(\"caseid\",\"IngestionDate\").agg(collect_list(\"inspectorIds\").alias(\"inspectorIds\"))\n",
					"\n",
					"    horizon_data = horizon_data.drop(\"inspectorIds\")\n",
					"    horizon_data = horizon_data.join(horizon_inspectorIds, on=[\"caseid\",\"IngestionDate\"], how=\"inner\")\n",
					"\n",
					"    #sort columns into same order as service bus\n",
					"    horizon_data = horizon_data.select(service_bus_data.columns)\n",
					"\n",
					"except Exception as e:\n",
					"        logError(f\"Error in processing Horizon data set:\\n{e}\")\n",
					"        error_message = app_insight_logger.format_error_message(e, max_length=800)\n",
					"\n",
					"        end_exec_time = str(datetime.now())\n",
					"        app_insight_logger.add_table_result(\n",
					"            delta_table_name = spark_table_final,\n",
					"            insert_count = insert_count, \n",
					"            update_count = update_count, \n",
					"            delete_count = delete_count, \n",
					"            table_result = \"failed\",\n",
					"            start_exec_time = start_exec_time, \n",
					"            end_exec_time = end_exec_time,\n",
					"            total_exec_time = \"\",\n",
					"            error_message = error_message\n",
					"        )\n",
					"        \n",
					"        # Exit with the JSON result\n",
					"        mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results = service_bus_data.union(horizon_data)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Prepare data for intermediate nsip_project processing"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"try:    \n",
					"    results.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")\n",
					"except Exception as e:\n",
					"        logError(f\"Error in ingesting delta table {spark_table_final}:\\n{e}\")\n",
					"        error_message = app_insight_logger.format_error_message(e, max_length=800)\n",
					"\n",
					"        end_exec_time = str(datetime.now())\n",
					"        app_insight_logger.add_table_result(\n",
					"            delta_table_name = spark_table_final,\n",
					"            insert_count = insert_count, \n",
					"            update_count = update_count, \n",
					"            delete_count = delete_count, \n",
					"            table_result = \"failed\",\n",
					"            start_exec_time = start_exec_time, \n",
					"            end_exec_time = end_exec_time,\n",
					"            total_exec_time = \"\",\n",
					"            error_message = error_message\n",
					"        )\n",
					"        \n",
					"        # Exit with the JSON result\n",
					"        mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Now need to sort internal ids, IsActive flags, and valid_to dates"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_nsip_project_calculations_base\n",
					"AS\n",
					"SELECT  \n",
					"    row_number() OVER(PARTITION BY caseid ORDER BY IngestionDate DESC) AS ReverseOrderProcessed\n",
					"    ,row_number() OVER(ORDER BY IngestionDate ASC, caseid ASC) AS NSIPProjectInfoInternalID\n",
					"    ,caseid\n",
					"    ,IngestionDate\n",
					"    ,ValidTo\n",
					"    ,'0' AS migrated\n",
					"    ,CASE row_number() OVER(PARTITION BY caseid ORDER BY IngestionDate DESC)\n",
					"        WHEN 1 THEN\n",
					"            'Y'\n",
					"        ELSE\n",
					"            'N'\n",
					"    END AS IsActive                \n",
					"FROM\n",
					"    odw_harmonised_db.nsip_project"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Final step for nsip project data transformation"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"try:\n",
					"\n",
					"    df_calcs = spark.sql(\"\"\"\n",
					"                            SELECT\n",
					"                                CurrentRow.NSIPProjectInfoInternalID\n",
					"                                ,CurrentRow.caseid \n",
					"                                ,CurrentRow.IngestionDate\n",
					"                                ,COALESCE(CurrentRow.ValidTo, NextRow.IngestionDate) AS ValidTo\n",
					"                                ,CASE\n",
					"                                    WHEN raw.caseid IS NOT NULL THEN \n",
					"                                        \"1\"\n",
					"                                    ELSE \n",
					"                                        \"0\"\n",
					"                                END AS migrated\n",
					"                                ,CurrentRow.IsActive\n",
					"                            FROM\n",
					"                                vw_nsip_project_calculations_base AS CurrentRow\n",
					"                                LEFT OUTER JOIN vw_nsip_project_calculations_base AS NextRow\n",
					"                                    ON CurrentRow.caseid = NextRow.caseid\n",
					"                                    AND CurrentRow.ReverseOrderProcessed - 1 = NextRow.ReverseOrderProcessed\n",
					"                                LEFT OUTER JOIN (SELECT DISTINCT caseid FROM odw_harmonised_db.sb_nsip_project) AS Raw\n",
					"                                    ON CurrentRow.caseid = Raw.caseid \"\"\")\n",
					"\n",
					"    df_calcs =df_calcs.withColumnRenamed(\"caseid\", \"temp_caseid\").withColumnRenamed(\"IngestionDate\", \"temp_IngestionDate\")\n",
					"\n",
					"\n",
					"    #To Do: Need to complete this statement. At the moment will return duplicate fields called RowID\n",
					"    results = spark.sql(f\"\"\"\n",
					"        SELECT \n",
					"            NSIPProjectInfoInternalID\n",
					"            ,CAST(caseid AS Integer) AS caseId\n",
					"            ,casereference\n",
					"            ,projectname\n",
					"            ,projectNameWelsh\n",
					"            ,projectDescription\n",
					"            ,summary\n",
					"            ,projectDescriptionWelsh\n",
					"            ,caseCreatedDate\n",
					"            ,decision\n",
					"            ,publishStatus\n",
					"            ,sector\n",
					"            ,projectType\n",
					"            ,sourceSystem\n",
					"            ,stage\n",
					"            ,projectLocation\n",
					"            ,projectLocationWelsh\n",
					"            ,projectEmailAddress\n",
					"            ,Regions\n",
					"            ,CAST(transboundary AS Boolean) AS transboundary\n",
					"            ,CAST(easting AS Integer) AS easting\n",
					"            ,CAST(northing AS Integer) AS northing\n",
					"            ,CAST(welshLanguage AS Boolean) AS welshLanguage\n",
					"            ,mapZoomLevel\n",
					"            ,secretaryOfState\n",
					"            ,datePINSFirstNotifiedOfProject\n",
					"            ,dateProjectAppearsOnWebsite\n",
					"            ,anticipatedSubmissionDateNonSpecific\n",
					"            ,anticipatedDateOfSubmission\n",
					"            ,screeningOpinionSought\n",
					"            ,screeningOpinionIssued\n",
					"            ,scopingOpinionSought\n",
					"            ,scopingOpinionIssued\n",
					"            ,section46Notification\n",
					"            ,dateOfDCOSubmission\n",
					"            ,deadlineForAcceptanceDecision\n",
					"            ,dateOfDCOAcceptance\n",
					"            ,dateOfNonAcceptance\n",
					"            ,dateOfRepresentationPeriodOpen\n",
					"            ,dateOfRelevantRepresentationClose\n",
					"            ,extensionToDateRelevantRepresentationsClose\n",
					"            ,dateRRepAppearOnWebsite\n",
					"            ,dateIAPIDue\n",
					"            ,rule6LetterPublishDate\n",
					"            ,preliminaryMeetingStartDate\n",
					"            ,notificationDateForPMAndEventsDirectlyFollowingPM\n",
					"            ,notificationDateForEventsDeveloper\n",
					"            ,dateSection58NoticeReceived\n",
					"            ,confirmedStartOfExamination\n",
					"            ,CAST(NULL AS Date) AS rule8LetterPublishDate\n",
					"            ,deadlineForCloseOfExamination\n",
					"            ,dateTimeExaminationEnds\n",
					"            ,stage4ExtensionToExamCloseDate\n",
					"            ,deadlineForSubmissionOfRecommendation\n",
					"            ,dateOfRecommendations\n",
					"            ,stage5ExtensionToRecommendationDeadline\n",
					"            ,deadlineForDecision\n",
					"            ,confirmedDateOfDecision\n",
					"            ,stage5ExtensionToDecisionDeadline\n",
					"            ,jRPeriodEndDate\n",
					"            ,dateProjectWithdrawn\n",
					"            ,operationsLeadId\n",
					"            ,operationsManagerId\n",
					"            ,caseManagerId\n",
					"            ,nsipOfficerIds\n",
					"            ,nsipAdministrationOfficerIds\n",
					"            ,leadInspectorId\n",
					"            ,inspectorIds\n",
					"            ,environmentalServicesOfficerId\n",
					"            ,legalOfficerId\n",
					"            ,applicantId\n",
					"            ,migrationStatus\n",
					"            ,dateOfReOpenRelevantRepresentationStart\n",
					"            ,dateOfReOpenRelevantRepresentationClose\n",
					"            --Start Horizon only fields\n",
					"            ,examTimetablePublishStatus\n",
					"            ,twitteraccountname\n",
					"            ,exasize\n",
					"            ,tene\n",
					"            ,promotername\n",
					"            ,applicantfirstname\n",
					"            ,applicantlastname\n",
					"            ,addressLine1\n",
					"            ,addressLine2\n",
					"            ,addressTown\n",
					"            ,addressCounty\n",
					"            ,Postcode\n",
					"            ,applicantemailaddress\n",
					"            ,applicantwebaddress\n",
					"            ,applicantphonenumber\n",
					"            ,applicantdescriptionofproject\n",
					"            ,HorizonCaseNumber\n",
					"            --End Horizon only fields\n",
					"            ,migrated\n",
					"            ,ODTSourceSystem\n",
					"            ,SourceSystemID\n",
					"            ,IngestionDate\n",
					"            ,ValidTo\n",
					"            ,MD5(\n",
					"                COALESCE(\n",
					"                        IFNULL(CAST(caseId AS String), '.')\n",
					"                        ,IFNULL(CAST(caseReference AS String), '.')\n",
					"                        ,IFNULL(CAST(projectName AS String), '.')\n",
					"                        ,IFNULL(CAST(projectNameWelsh AS String), '.')\n",
					"                        ,IFNULL(CAST(projectDescription AS String), '.')\n",
					"                        ,IFNULL(CAST(summary AS String), '.')\n",
					"                        ,IFNULL(CAST(projectDescriptionWelsh AS String), '.')\n",
					"                        ,IFNULL(CAST(caseCreatedDate AS String), '.')\n",
					"                        ,IFNULL(CAST(decision AS String), '.')\n",
					"                        ,IFNULL(CAST(publishStatus AS String), '.')\n",
					"                        ,IFNULL(CAST(sector AS String), '.')\n",
					"                        ,IFNULL(CAST(projectType AS String), '.')\n",
					"                        ,IFNULL(CAST(sourceSystem AS String), '.')\n",
					"                        ,IFNULL(CAST(stage AS String), '.')\n",
					"                        ,IFNULL(CAST(projectLocation AS String), '.')\n",
					"                        ,IFNULL(CAST(projectLocationWelsh AS String), '.')\n",
					"                        ,IFNULL(CAST(projectEmailAddress AS String), '.')\n",
					"                        ,IFNULL(CAST(regions AS String), '.')\n",
					"                        ,IFNULL(CAST(transboundary AS String), '.')\n",
					"                        ,IFNULL(CAST(easting AS String), '.')\n",
					"                        ,IFNULL(CAST(northing AS String), '.')\n",
					"                        ,IFNULL(CAST(welshLanguage AS String), '.')\n",
					"                        ,IFNULL(CAST(mapZoomLevel AS String), '.')\n",
					"                        ,IFNULL(CAST(secretaryOfState AS String), '.')\n",
					"                        ,IFNULL(CAST(datePINSFirstNotifiedOfProject AS String), '.')\n",
					"                        ,IFNULL(CAST(dateProjectAppearsOnWebsite AS String), '.')\n",
					"                        ,IFNULL(CAST(anticipatedSubmissionDateNonSpecific AS String), '.')\n",
					"                        ,IFNULL(CAST(anticipatedDateOfSubmission AS String), '.')\n",
					"                        ,IFNULL(CAST(screeningOpinionSought AS String), '.')\n",
					"                        ,IFNULL(CAST(screeningOpinionIssued AS String), '.')\n",
					"                        ,IFNULL(CAST(scopingOpinionSought AS String), '.')\n",
					"                        ,IFNULL(CAST(scopingOpinionIssued AS String), '.')\n",
					"                        ,IFNULL(CAST(section46Notification AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfDCOSubmission AS String), '.')\n",
					"                        ,IFNULL(CAST(deadlineForAcceptanceDecision AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfDCOAcceptance AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfNonAcceptance AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfRepresentationPeriodOpen AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfRelevantRepresentationClose AS String), '.')\n",
					"                        ,IFNULL(CAST(extensionToDateRelevantRepresentationsClose AS String), '.')\n",
					"                        ,IFNULL(CAST(dateRRepAppearOnWebsite AS String), '.')\n",
					"                        ,IFNULL(CAST(dateIAPIDue AS String), '.')\n",
					"                        ,IFNULL(CAST(rule6LetterPublishDate AS String), '.')\n",
					"                        ,IFNULL(CAST(preliminaryMeetingStartDate AS String), '.')\n",
					"                        ,IFNULL(CAST(notificationDateForPMAndEventsDirectlyFollowingPM AS String), '.')\n",
					"                        ,IFNULL(CAST(notificationDateForEventsDeveloper AS String), '.')\n",
					"                        ,IFNULL(CAST(dateSection58NoticeReceived AS String), '.')\n",
					"                        ,IFNULL(CAST(confirmedStartOfExamination AS String), '.')\n",
					"                        ,IFNULL(CAST(rule8LetterPublishDate AS String), '.')\n",
					"                        ,IFNULL(CAST(deadlineForCloseOfExamination AS String), '.')\n",
					"                        ,IFNULL(CAST(dateTimeExaminationEnds AS String), '.')\n",
					"                        ,IFNULL(CAST(stage4ExtensionToExamCloseDate AS String), '.')\n",
					"                        ,IFNULL(CAST(deadlineForSubmissionOfRecommendation AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfRecommendations AS String), '.')\n",
					"                        ,IFNULL(CAST(stage5ExtensionToRecommendationDeadline AS String), '.')\n",
					"                        ,IFNULL(CAST(deadlineForDecision AS String), '.')\n",
					"                        ,IFNULL(CAST(confirmedDateOfDecision AS String), '.')\n",
					"                        ,IFNULL(CAST(stage5ExtensionToDecisionDeadline AS String), '.')\n",
					"                        ,IFNULL(CAST(jRPeriodEndDate AS String), '.')\n",
					"                        ,IFNULL(CAST(dateProjectWithdrawn AS String), '.')\n",
					"                        ,IFNULL(CAST(operationsLeadId AS String), '.')\n",
					"                        ,IFNULL(CAST(operationsManagerId AS String), '.')\n",
					"                        ,IFNULL(CAST(caseManagerId AS String), '.')\n",
					"                        ,IFNULL(CAST(nsipOfficerIds AS String), '.')\n",
					"                        ,IFNULL(CAST(nsipAdministrationOfficerIds AS String), '.')\n",
					"                        ,IFNULL(CAST(leadInspectorId AS String), '.')\n",
					"                        ,IFNULL(CAST(inspectorIds AS String), '.')\n",
					"                        ,IFNULL(CAST(environmentalServicesOfficerId AS String), '.')\n",
					"                        ,IFNULL(CAST(legalOfficerId AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantId AS String), '.')\n",
					"                        ,IFNULL(CAST(migrationStatus AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfReOpenRelevantRepresentationStart AS String), '.')\n",
					"                        ,IFNULL(CAST(dateOfReOpenRelevantRepresentationClose AS String), '.')\n",
					"                        ,IFNULL(CAST(migrated AS String), '.')\n",
					"                        ,IFNULL(CAST(ODTSourceSystem AS String), '.')\n",
					"                        ,IFNULL(CAST(SourceSystemID AS String), '.')\n",
					"                        ,IFNULL(CAST(IngestionDate AS String), '.')\n",
					"                        ,IFNULL(CAST(ValidTo AS String), '.')\n",
					"                        ,IFNULL(CAST(IsActive AS String), '.')\n",
					"                        --Start Horizon only fields\n",
					"                        ,IFNULL(CAST(examTimetablePublishStatus AS String), '.')\n",
					"                        ,IFNULL(CAST(twitteraccountname AS String), '.')\n",
					"                        ,IFNULL(CAST(exasize AS String), '.')\n",
					"                        ,IFNULL(CAST(tene AS String), '.')\n",
					"                        ,IFNULL(CAST(promotername AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantfirstname AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantlastname AS String), '.')\n",
					"                        ,IFNULL(CAST(addressLine1 AS String), '.')\n",
					"                        ,IFNULL(CAST(addressLine2 AS String), '.')\n",
					"                        ,IFNULL(CAST(addressTown AS String), '.')\n",
					"                        ,IFNULL(CAST(addressCounty AS String), '.')\n",
					"                        ,IFNULL(CAST(Postcode AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantemailaddress AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantwebaddress AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantphonenumber AS String), '.')\n",
					"                        ,IFNULL(CAST(applicantdescriptionofproject AS String), '.')\n",
					"                        ,IFNULL(CAST(HorizonCaseNumber AS int), '.')\n",
					"                        ,IFNULL(CAST(isMaterialChange AS String), '.')\n",
					"                )\n",
					"            ) AS RowID\n",
					"            ,isMaterialChange\n",
					"            ,IsActive\n",
					"        FROM \n",
					"            {spark_table_final}\"\"\")\n",
					"\n",
					"    columns = results.columns\n",
					"\n",
					"    results = results.drop(\"NSIPProjectInfoInternalID\", \"ValidTo\", \"migrated\", \"IsActive\")\n",
					"\n",
					"    final_df = results.join(df_calcs, (df_calcs[\"temp_caseid\"] == results[\"caseid\"]) & (df_calcs[\"temp_IngestionDate\"] == results[\"IngestionDate\"])).select(columns)\n",
					"    final_df = final_df.drop_duplicates()\n",
					"    insert_count = final_df.count()\n",
					"    final_df.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")\n",
					"    \n",
					"    end_exec_time = str(datetime.now())\n",
					"    app_insight_logger.add_table_result(                    \n",
					"        delta_table_name = spark_table_final,\n",
					"        insert_count = insert_count, \n",
					"        update_count = update_count, \n",
					"        delete_count = delete_count, \n",
					"        table_result = \"success\",\n",
					"        start_exec_time = start_exec_time, \n",
					"        end_exec_time = end_exec_time,\n",
					"        total_exec_time = \"\",\n",
					"        error_message = \"\"\n",
					"    )\n",
					"\n",
					"\n",
					"except Exception as e:\n",
					"        logError(f\"Error in ingesting delta table in the final step {spark_table_final}:\\n{e}\")\n",
					"        error_message = app_insight_logger.format_error_message(e, max_length=800)\n",
					"        \n",
					"        end_exec_time = str(datetime.now())\n",
					"        app_insight_logger.add_table_result(\n",
					"            delta_table_name = spark_table_final,\n",
					"            insert_count = insert_count, \n",
					"            update_count = update_count, \n",
					"            delete_count = delete_count, \n",
					"            table_result = \"failed\",\n",
					"            start_exec_time = start_exec_time, \n",
					"            end_exec_time = end_exec_time,\n",
					"            total_exec_time = \"\",\n",
					"            error_message = error_message\n",
					"        )\n",
					"        \n",
					"        # Exit with the JSON result\n",
					"        mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Produce Json formatted output"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Exit with the JSON result\n",
					"mssparkutils.notebook.exit(app_insight_logger.generate_processing_results())"
				],
				"execution_count": null
			}
		]
	}
}