{
	"name": "spark_load_sap_hr_monthly",
	"properties": {
		"folder": {
			"name": "odw-harmonised/saphr"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "057e7711-5b04-492b-a3c3-47fec33de346"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### The purpose of this notebook is to read data from Stadardised layer and build a table.\n",
					"\n",
					"**Author** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   **Created Date** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; **Description**  \n",
					"Prathap Adicherla &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;01-April-2025 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Load sap_hr data covered in this;"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Set time parser policy\n",
					"spark.sql(\"SET spark.sql.legacy.timeParserPolicy = LEGACY\")\n",
					"\n",
					"# Delete existing data\n",
					"spark.sql(\"DELETE FROM odw_harmonised_db.load_sap_hr_monthly\")\n",
					"\n",
					"# Insert data from source table\n",
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_sap_hr_monthly (\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    FTE,\n",
					"    Wkhrs,\n",
					"    IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CivilServiceStart,\n",
					"    DatetoCurrentJob,\n",
					"    SeniorityDate,\n",
					"    DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    OrgStartDate,\n",
					"    FixTermEndDate,\n",
					"    LoanStartDate,\n",
					"    LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    FTE2,\n",
					"    Report_MonthEnd_Date,\n",
					"    PDAC_ETL_Date,\n",
					"    SourceSystemID,\n",
					"    IngestionDate,\n",
					"    ValidTo,\n",
					"    RowID,\n",
					"    IsActive\n",
					")\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    CASE WHEN FTE = '' THEN NULL ELSE TRY_CAST(FTE AS FLOAT) END AS FTE,\n",
					"    CASE WHEN Wkhrs = '' THEN NULL ELSE TRY_CAST(Wkhrs AS FLOAT) END AS Wkhrs,\n",
					"    CASE WHEN IndicatorPartTimeEmployee = '' THEN NULL ELSE TRY_CAST(IndicatorPartTimeEmployee AS BOOLEAN) END AS IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate AS TRAStartDate,\n",
					"    TRAEndDate AS TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    cast(to_timestamp(CivilServiceStart, \"dd/MM/yyyy\") as date) as CivilServiceStart,\n",
					"    cast(to_timestamp(DatetoCurrentJob, 'dd/MM/yyyy') as date) AS DatetoCurrentJob,\n",
					"    cast(to_timestamp(SeniorityDate, 'dd/MM/yyyy') as date) AS SeniorityDate,\n",
					"    cast(to_timestamp(DatetoSubstGrade, 'dd/MM/yyyy') as date) as DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    cast(to_timestamp(OrgStartDate, 'dd/MM/yyyy') as date) as OrgStartDate,\n",
					"    FixTermEndDate AS FixTermEndDate,\n",
					"    LoanStartDate AS LoanStartDate,\n",
					"    LoanEndDate AS LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    CASE WHEN Annualsalary = '' THEN NULL ELSE TRY_CAST(Annualsalary AS DOUBLE) END AS Annualsalary,\n",
					"    Curr,\n",
					"    null as NInumber,\n",
					"    to_date(Birthdate, 'dd/MM/yyyy') as Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    CASE WHEN FTE2 = '' THEN NULL ELSE TRY_CAST(FTE2 AS FLOAT) END AS FTE2,\n",
					"    cast(Report_MonthEnd_Date as date) as Report_MonthEnd_Date,\n",
					"    CURRENT_TIMESTAMP() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    CURRENT_DATE() AS IngestionDate,\n",
					"    CURRENT_TIMESTAMP() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					"\"\"\");\n",
					"\n",
					"# Update RowID with MD5 hash\n",
					"spark.sql(\"\"\"\n",
					"UPDATE odw_harmonised_db.load_sap_hr_monthly\n",
					"SET RowID = md5(concat_ws('|', \n",
					"    PersNo, Firstname, Lastname, EmployeeNo, CoCd, CompanyCode, PA, PersonnelArea, PSubarea, PersonnelSubarea, \n",
					"    Orgunit, OrganizationalUnit, Organizationalkey, OrganizationalKey1, WorkC, WorkContract, CT, ContractType, \n",
					"    PSgroup, PayBandDescription, FTE, Wkhrs, IndicatorPartTimeEmployee, S, EmploymentStatus, GenderKey, \n",
					"    TRAStartDate, TRAEndDate, TRAStatus, TRAGrade, PrevPersNo, ActR, ReasonforAction, Position, Position1, \n",
					"    CostCtr, CostCentre, CivilServiceStart, DatetoCurrentJob, SeniorityDate, DatetoSubstGrade, PersNo1, \n",
					"    NameofManagerOM, ManagerPosition, ManagerPositionText, CounterSignManager, Loc, Location, OrgStartDate, \n",
					"    FixTermEndDate, LoanStartDate, LoanEndDate, EEGrp, EmployeeGroup, Annualsalary, Curr, NInumber, Birthdate, \n",
					"    Ageofemployee, EO, Ethnicorigin, NID, Rel, ReligiousDenominationKey, SxO, WageType, EmployeeSubgroup, \n",
					"    LOAAbsType, LOAAbsenceTypeText, Schemereference, PensionSchemeName, DisabilityCode, DisabilityText, \n",
					"    DisabilityCodeDescription, PArea, PayrollArea, AssignmentNumber, FTE2\n",
					"))\n",
					"\"\"\")"
				],
				"execution_count": 1
			}
		]
	}
}