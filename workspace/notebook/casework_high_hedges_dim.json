{
	"name": "casework_high_hedges_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fc3585e1-600b-45e0-8714-f60e00761882"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_high_hedges_dim_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_high_hedges_dim_new table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_high_hedges_dim_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.full_ref IS NULL\r\n",
					"        THEN T3.HighHedgesID\r\n",
					"        ELSE NULL\r\n",
					"    END as HighHedgesID,\r\n",
					"    T1.ref AS Ref,\r\n",
					"    T1.full_ref AS FullRef,\r\n",
					"    T1.linked_with AS LinkedWith,\r\n",
					"    T1.horizon_ref AS HorizonRef,\r\n",
					"    T1.processing_state AS ProcessingState,\r\n",
					"    T1.rejected_withdrawn AS RejectedOrWithdrawn,\r\n",
					"    T1.date_withdrawn_rejected AS DateWithdrawnOrRejected,\r\n",
					"    T1.case_officer AS CaseOfficer,\r\n",
					"    T1.date_received AS DateReceived,\r\n",
					"    T10.LPAID AS LPAID,\r\n",
					"    T1.appellant AS Appellant,\r\n",
					"    T1.agent AS Agent,\r\n",
					"    T1.status AS Status,\r\n",
					"    T1.1st_line_of_address AS FirstLineOfAddress,\r\n",
					"    T1.site_post_code AS SitePostCode,\r\n",
					"    T1.other_party AS OtherParty,\r\n",
					"    T1.lpa_decision AS LPADecision,\r\n",
					"    T1.valid_date AS ValidDate,\r\n",
					"    T1.start_date AS StartDate,\r\n",
					"    T1.docs_copied AS DocsCopied,\r\n",
					"    T1.q_due AS QDue,\r\n",
					"    T1.qu_rec AS QuRec,\r\n",
					"    T1.notification_of_site_visit AS NotificationOfSiteVisit,\r\n",
					"    T1.date_of_sv AS DateOfSV,\r\n",
					"    T1.time_of_sv AS TimeOfSV,\r\n",
					"    T1.inspector AS Inspector,\r\n",
					"    T1.date_sent_to_inspector AS DateSentToInspector,\r\n",
					"    T1.date_returned_from_inspector AS DateReturnedFromInspector,\r\n",
					"    T1.reader AS Reader,\r\n",
					"    T1.pins_decision AS PINSDecision,\r\n",
					"    T1.date_of_decision AS DateOfDecision,\r\n",
					"    T1.comments AS Comments,\r\n",
					"    T1.pa_date AS PADate,\r\n",
					"    T1.pa_barcode AS PABarcode,\r\n",
					"    T1.target_80_within_24_weeks_from_receipt_to_decision_target_relates_to_cases_received_on_or_after_1_april_2011 AS Target,\r\n",
					"    T1.hande_time_in_weeks AS HandeTimeInWeeks,\r\n",
					"    T1.decision_month AS DecisionMonth,\r\n",
					"    T1.receipt_to_start AS ReceiptToStart,\r\n",
					"    T1.start_to_event AS StartToEvent,\r\n",
					"    T1.event_to_decision AS EventToDecision,\r\n",
					"    T1.receipt_to_decision AS ReceiptToDecision,\r\n",
					"    T1.open_or_closed AS OpenOrClosed,\r\n",
					"    T1.ready_for_event AS ReadyForEvent,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(IFNULL(T1.full_ref,'.'), IFNULL(T1.linked_with,'.'), IFNULL(T1.horizon_ref ,'.'), IFNULL(T1.processing_state,'.'), IFNULL(T1.rejected_withdrawn,'.'), \r\n",
					"    IFNULL(T1.date_withdrawn_rejected,'.'), IFNULL(T1.case_officer,'.'), IFNULL(T1.date_received,'.'), IFNULL(T10.LPAID,'.'), IFNULL(T1.appellant,'.'), IFNULL(T1.agent,'.'), \r\n",
					"    IFNULL(T1.status,'.'), IFNULL(T1.1st_line_of_address,'.'), IFNULL(T1.site_post_code,'.'), IFNULL(T1.other_party,'.'), IFNULL(T1.lpa_decision,'.'), IFNULL(T1.valid_date,'.'), \r\n",
					"    IFNULL(T1.start_date,'.'), IFNULL(T1.docs_copied,'.'), IFNULL(T1.q_due,'.'), IFNULL(T1.qu_rec,'.'), IFNULL(T1.notification_of_site_visit,'.'), IFNULL(T1.date_of_sv,'.'), \r\n",
					"    IFNULL(T1.time_of_sv,'.'), IFNULL(T1.inspector,'.'), IFNULL(T1.date_sent_to_inspector,'.'), IFNULL(T1.date_returned_from_inspector,'.'), IFNULL(T1.reader,'.'), IFNULL(T1.pins_decision,'.'), \r\n",
					"    IFNULL(T1.date_of_decision,'.'), IFNULL(T1.comments,'.'), IFNULL(T1.pa_date,'.'), IFNULL(T1.pa_barcode,'.'), IFNULL(T1.target_80_within_24_weeks_from_receipt_to_decision_target_relates_to_cases_received_on_or_after_1_april_2011,'.'), \r\n",
					"    IFNULL(T1.hande_time_in_weeks,'.'), IFNULL(T1.decision_month,'.'), IFNULL(T1.receipt_to_start,'.'), IFNULL(T1.start_to_event,'.'), IFNULL(T1.event_to_decision,'.'), \r\n",
					"    IFNULL(T1.receipt_to_decision,'.'), IFNULL(T1.open_or_closed,'.'), IFNULL(T1.ready_for_event,'.'))) as RowID, -- this hash should contain all the defining fields, so needs to be done\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.full_ref = T3.FullRef AND  md5(concat(IFNULL(T1.full_ref,'.'), IFNULL(T1.linked_with,'.'), IFNULL(T1.horizon_ref ,'.'), IFNULL(T1.processing_state,'.'), IFNULL(T1.rejected_withdrawn,'.'), \r\n",
					"    IFNULL(T1.date_withdrawn_rejected,'.'), IFNULL(T1.case_officer,'.'), IFNULL(T1.date_received,'.'), IFNULL(T10.LPAID,'.'), IFNULL(T1.appellant,'.'), IFNULL(T1.agent,'.'), \r\n",
					"    IFNULL(T1.status,'.'), IFNULL(T1.1st_line_of_address,'.'), IFNULL(T1.site_post_code,'.'), IFNULL(T1.other_party,'.'), IFNULL(T1.lpa_decision,'.'), IFNULL(T1.valid_date,'.'), \r\n",
					"    IFNULL(T1.start_date,'.'), IFNULL(T1.docs_copied,'.'), IFNULL(T1.q_due,'.'), IFNULL(T1.qu_rec,'.'), IFNULL(T1.notification_of_site_visit,'.'), IFNULL(T1.date_of_sv,'.'), \r\n",
					"    IFNULL(T1.time_of_sv,'.'), IFNULL(T1.inspector,'.'), IFNULL(T1.date_sent_to_inspector,'.'), IFNULL(T1.date_returned_from_inspector,'.'), IFNULL(T1.reader,'.'), IFNULL(T1.pins_decision,'.'), \r\n",
					"    IFNULL(T1.date_of_decision,'.'), IFNULL(T1.comments,'.'), IFNULL(T1.pa_date,'.'), IFNULL(T1.pa_barcode,'.'), IFNULL(T1.target_80_within_24_weeks_from_receipt_to_decision_target_relates_to_cases_received_on_or_after_1_april_2011,'.'), \r\n",
					"    IFNULL(T1.hande_time_in_weeks,'.'), IFNULL(T1.decision_month,'.'), IFNULL(T1.receipt_to_start,'.'), IFNULL(T1.start_to_event,'.'), IFNULL(T1.event_to_decision,'.'), \r\n",
					"    IFNULL(T1.receipt_to_decision,'.'), IFNULL(T1.open_or_closed,'.'), IFNULL(T1.ready_for_event,'.'))) <> T3.RowID   -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.FullRef IS NULL -- new AppealRef\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.full_ref IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData, \r\n",
					"    T3.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.vw_high_hedge T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_local_planning_authority_fact T10 ON t10.LPAName = t1.lpa AND T10.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_high_hedges_dim T3 ON T1.full_ref = T3.FullRef AND T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    (\r\n",
					"        -- flags new data        \r\n",
					"        (   CASE\r\n",
					"                WHEN T1.full_ref = T3.FullRef AND md5(concat(IFNULL(T1.full_ref,'.'), IFNULL(T1.linked_with,'.'), IFNULL(T1.horizon_ref ,'.'), IFNULL(T1.processing_state,'.'), IFNULL(T1.rejected_withdrawn,'.'), \r\n",
					"    IFNULL(T1.date_withdrawn_rejected,'.'), IFNULL(T1.case_officer,'.'), IFNULL(T1.date_received,'.'), IFNULL(T10.LPAID,'.'), IFNULL(T1.appellant,'.'), IFNULL(T1.agent,'.'), \r\n",
					"    IFNULL(T1.status,'.'), IFNULL(T1.1st_line_of_address,'.'), IFNULL(T1.site_post_code,'.'), IFNULL(T1.other_party,'.'), IFNULL(T1.lpa_decision,'.'), IFNULL(T1.valid_date,'.'), \r\n",
					"    IFNULL(T1.start_date,'.'), IFNULL(T1.docs_copied,'.'), IFNULL(T1.q_due,'.'), IFNULL(T1.qu_rec,'.'), IFNULL(T1.notification_of_site_visit,'.'), IFNULL(T1.date_of_sv,'.'), \r\n",
					"    IFNULL(T1.time_of_sv,'.'), IFNULL(T1.inspector,'.'), IFNULL(T1.date_sent_to_inspector,'.'), IFNULL(T1.date_returned_from_inspector,'.'), IFNULL(T1.reader,'.'), IFNULL(T1.pins_decision,'.'), \r\n",
					"    IFNULL(T1.date_of_decision,'.'), IFNULL(T1.comments,'.'), IFNULL(T1.pa_date,'.'), IFNULL(T1.pa_barcode,'.'), IFNULL(T1.target_80_within_24_weeks_from_receipt_to_decision_target_relates_to_cases_received_on_or_after_1_april_2011,'.'), \r\n",
					"    IFNULL(T1.hande_time_in_weeks,'.'), IFNULL(T1.decision_month,'.'), IFNULL(T1.receipt_to_start,'.'), IFNULL(T1.start_to_event,'.'), IFNULL(T1.event_to_decision,'.'), \r\n",
					"    IFNULL(T1.receipt_to_decision,'.'), IFNULL(T1.open_or_closed,'.'), IFNULL(T1.ready_for_event,'.'))) <> T3.RowID  -- same employee, changed data\r\n",
					"                THEN 'Y'\r\n",
					"                WHEN T3.FullRef IS NULL -- new full_ref\r\n",
					"                THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"            END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        (   CASE\r\n",
					"                WHEN T1.full_ref IS NULL\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END = 'Y' )\r\n",
					"    );\r\n",
					"\r\n",
					""
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Source_Number = spark.sql(\"SELECT COUNT(*) AS Source_Number FROM pins_casework_all_appeals_grouped\")\r\n",
					"# Current_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Current_Number FROM odw_harmonised_db.casework_high_hedges_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS New_Data_Number FROM casework_high_hedges_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Deleted_Data_Number FROM casework_high_hedges_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Source_Number_Pandas = Source_Number.toPandas()\r\n",
					"# Current_Number_Pandas =  Current_Number.toPandas()\r\n",
					"# New_Data_Number_Pandas = New_Data_Number.toPandas()\r\n",
					"# Deleted_Data_Number_Pandas = Deleted_Data_Number.toPandas()\r\n",
					"\r\n",
					"# # checking if new total number of registers matches the previously loaded, plus New ones, minus Deleted ones\r\n",
					"# print(\"SET 1:\")\r\n",
					"# Total_Number = Source_Number_Pandas['Source_Number'].tolist() \r\n",
					"# Current_Loaded_Number = Current_Number_Pandas['Current_Number'].tolist() \r\n",
					"# New_Data_Number = New_Data_Number_Pandas['New_Data_Number'].tolist() \r\n",
					"# Deleted_Data_Number = Deleted_Data_Number_Pandas['Deleted_Data_Number'].tolist() \r\n",
					"\r\n",
					"# if Total_Number[0] != (Current_Loaded_Number[0] + New_Data_Number[0] - Deleted_Data_Number[0]):\r\n",
					"#     raise RuntimeError(\"Loading Number do not match\")\r\n",
					"# else:\r\n",
					"#     print(\"Loading number matches with existing codes plus new, minus deleted!\")\r\n",
					"\r\n",
					"# if New_Data_Number[0] > 1000:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many new codes\")\r\n",
					"# else:\r\n",
					"#     print(\"New data under tolerance levels\")\r\n",
					"\r\n",
					"# if Deleted_Data_Number[0] > 500:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many deleted codes\")\r\n",
					"# else:\r\n",
					"#     print(\"Unused codes under tolerance levels\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Current_Records = spark.sql(\"SELECT DISTINCT RowID AS Current_Records FROM odw_harmonised_db.casework_high_hedges_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS New_Data_Records FROM casework_high_hedges_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS Deleted_Data_Records FROM casework_high_hedges_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Current_Records_Pandas =  Current_Records.toPandas()\r\n",
					"# New_Data_Records_Pandas = New_Data_Records.toPandas()\r\n",
					"# Deleted_Data_Records_Pandas = Deleted_Data_Records.toPandas()\r\n",
					"\r\n",
					"# # checking if a deleted records are correcly flagged, not existing in the new data, but existing inpreviously loaded\r\n",
					"# print(\"TEST 2:\")\r\n",
					"\r\n",
					"# Current_Records = Current_Records_Pandas['Current_Records'].tolist() \r\n",
					"# Deleted_Records = Deleted_Data_Records_Pandas['Deleted_Data_Records'].tolist()\r\n",
					"# New_Records = New_Data_Records_Pandas['New_Data_Records'].tolist()\r\n",
					"\r\n",
					"# print(Current_Records)\r\n",
					"# print(Deleted_Records)\r\n",
					"# print(New_Records)\r\n",
					"\r\n",
					"# for i in Deleted_Records:\r\n",
					"#     if i in Current_Records: \r\n",
					"#         print(i + \" to be deleted is in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Delete do not match\")\r\n",
					"\r\n",
					"# for j in New_Records:\r\n",
					"#     if j not in Current_Records: \r\n",
					"#         print(j + \" to be added is not in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Add do not match\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_high_hedges_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_high_hedges_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"Select \r\n",
					"    HighHedgesID,\r\n",
					"    Ref,\r\n",
					"    FullRef,\r\n",
					"    LinkedWith,\r\n",
					"    HorizonRef,\r\n",
					"    ProcessingState,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    DateWithdrawnOrRejected,\r\n",
					"    CaseOfficer,\r\n",
					"    DateReceived,\r\n",
					"    LPA,\r\n",
					"    Appellant,\r\n",
					"    Agent,\r\n",
					"    Status,\r\n",
					"    FirstLineOfAddress,\r\n",
					"    SitePostCode,\r\n",
					"    OtherParty,\r\n",
					"    LPADecision,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    DocsCopied,\r\n",
					"    QDue,\r\n",
					"    QuRec,\r\n",
					"    NotificationOfSiteVisit,\r\n",
					"    DateOfSV,\r\n",
					"    TimeOfSV,\r\n",
					"    Inspector,\r\n",
					"    DateSentToInspector,\r\n",
					"    DateReturnedFromInspector,\r\n",
					"    Reader,\r\n",
					"    PINSDecision,\r\n",
					"    DateOfDecision,\r\n",
					"    Comments,\r\n",
					"    PADate,\r\n",
					"    PABarcode,\r\n",
					"    Target,\r\n",
					"    HandeTimeInWeeks,\r\n",
					"    DecisionMonth,\r\n",
					"    ReceiptToStart,\r\n",
					"    StartToEvent,\r\n",
					"    EventToDecision,\r\n",
					"    ReceiptToDecision,\r\n",
					"    OpenOrClosed,\r\n",
					"    ReadyForEvent,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_high_hedges_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    HighHedgesID,\r\n",
					"    Ref,\r\n",
					"    FullRef,\r\n",
					"    LinkedWith,\r\n",
					"    HorizonRef,\r\n",
					"    ProcessingState,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    DateWithdrawnOrRejected,\r\n",
					"    CaseOfficer,\r\n",
					"    DateReceived,\r\n",
					"    LPA,\r\n",
					"    Appellant,\r\n",
					"    Agent,\r\n",
					"    Status,\r\n",
					"    FirstLineOfAddress,\r\n",
					"    SitePostCode,\r\n",
					"    OtherParty,\r\n",
					"    LPADecision,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    DocsCopied,\r\n",
					"    QDue,\r\n",
					"    QuRec,\r\n",
					"    NotificationOfSiteVisit,\r\n",
					"    DateOfSV,\r\n",
					"    TimeOfSV,\r\n",
					"    Inspector,\r\n",
					"    DateSentToInspector,\r\n",
					"    DateReturnedFromInspector,\r\n",
					"    Reader,\r\n",
					"    PINSDecision,\r\n",
					"    DateOfDecision,\r\n",
					"    Comments,\r\n",
					"    PADate,\r\n",
					"    PABarcode,\r\n",
					"    Target,\r\n",
					"    HandeTimeInWeeks,\r\n",
					"    DecisionMonth,\r\n",
					"    ReceiptToStart,\r\n",
					"    StartToEvent,\r\n",
					"    EventToDecision,\r\n",
					"    ReceiptToDecision,\r\n",
					"    OpenOrClosed,\r\n",
					"    ReadyForEvent,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_high_hedges_dim\r\n",
					"WHERE FullRef IN (SELECT FullRef FROM casework_high_hedges_dim_new WHERE HighHedgesID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_high_hedges_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_high_hedges_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_high_hedges_dim AS Target\r\n",
					"USING casework_high_hedges_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.HighHedgesID = Target.HighHedgesID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;  \r\n",
					""
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_high_hedges_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_high_hedges_dim\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.casework_high_hedges_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY FullRef NULLS LAST) AS HighHedgesID,\r\n",
					"    Ref,\r\n",
					"    FullRef,\r\n",
					"    LinkedWith,\r\n",
					"    HorizonRef,\r\n",
					"    ProcessingState,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    DateWithdrawnOrRejected,\r\n",
					"    CaseOfficer,\r\n",
					"    DateReceived,\r\n",
					"    LPA,\r\n",
					"    Appellant,\r\n",
					"    Agent,\r\n",
					"    Status,\r\n",
					"    FirstLineOfAddress,\r\n",
					"    SitePostCode,\r\n",
					"    OtherParty,\r\n",
					"    LPADecision,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    DocsCopied,\r\n",
					"    QDue,\r\n",
					"    QuRec,\r\n",
					"    NotificationOfSiteVisit,\r\n",
					"    DateOfSV,\r\n",
					"    TimeOfSV,\r\n",
					"    Inspector,\r\n",
					"    DateSentToInspector,\r\n",
					"    DateReturnedFromInspector,\r\n",
					"    Reader,\r\n",
					"    PINSDecision,\r\n",
					"    DateOfDecision,\r\n",
					"    Comments,\r\n",
					"    PADate,\r\n",
					"    PABarcode,\r\n",
					"    Target,\r\n",
					"    HandeTimeInWeeks,\r\n",
					"    DecisionMonth,\r\n",
					"    ReceiptToStart,\r\n",
					"    StartToEvent,\r\n",
					"    EventToDecision,\r\n",
					"    ReceiptToDecision,\r\n",
					"    OpenOrClosed,\r\n",
					"    ReadyForEvent,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.casework_high_hedges_dim;\r\n",
					""
				],
				"execution_count": 14
			}
		]
	}
}