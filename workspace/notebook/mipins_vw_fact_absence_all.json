{
	"name": "mipins_vw_fact_absence_all",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "79cdde66-c6dd-4dee-a486-c28575fa65e4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_mipins_fact_absence_all\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"\r\n",
					"    T1.AbsenceStartDate,\r\n",
					"    T1.AbsenceEndDate,\r\n",
					"    T1.Hours AS AbsenceHours,\r\n",
					"    T1.EmployeeID AS StaffNumber,\r\n",
					"    T6.WorkScheduleRule,\r\n",
					"    T1.AbsenceType,\r\n",
					"    T1.SicknessGroup,\r\n",
					"    CASE \r\n",
					"        WHEN AbsenceType = 'Sickness' THEN 'Sickness'\r\n",
					"        WHEN AbsenceType LIKE '%Annual%' THEN 'Annual'\r\n",
					"        ElSE '0'\r\n",
					"    END AS AbsenceGroup,\r\n",
					"    T1.Hours/T6.WorkDayHours AS Leave,\r\n",
					"\tcase date_part(\"DAYOFWEEK\",AbsenceStartDate)\r\n",
					"\t\twhen 2 then T6.WorkDayHours/7.4\r\n",
					"\t\twhen 3 then T6.WorkDayHours/7.4\r\n",
					"\t\twhen 4 then T6.WorkDayHours/7.4\r\n",
					"\t\twhen 5 then T6.WorkDayHours/7.4\r\n",
					"\t\twhen 6 then T6.WorkDayHours/7.4\r\n",
					"\t\telse null\r\n",
					"\tend as LeaveONS,\r\n",
					"    T6.WorkDayHours,\r\n",
					"    T5.Description PayBand,\r\n",
					"    T3.Description AS PersonnelArea,\r\n",
					"    T4.Description AS PersonnelSubArea,\r\n",
					"    T1.AbsenceID AS SicknessID,\r\n",
					"\tT1.Days as SicknessLength,\r\n",
					"    CASE \r\n",
					"        WHEN CAST(Days AS FLOAT) > 20.0 then 'long-term'\r\n",
					"\t\tELSE 'short-term'\r\n",
					"    END AS SicknessLengthType\r\n",
					"\r\n",
					"FROM odw_harmonised_db.hr_absence_dim T1\r\n",
					"LEFT JOIN odw_harmonised_db.hr_record_fact T2 ON T1.EmployeeID=T2.EmployeeID\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_area_dim T3 ON T3.PersonnelAreaID=T2.PersonnelAreaID\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_sub_area_dim T4 ON T4.PersonnelSubAreaID=T2.PersonnelSubAreaID\r\n",
					"LEFT JOIN odw_harmonised_db.hr_payband_dim T5 ON T5.PayBandID=T2.PayBandID\r\n",
					"LEFT JOIN odw_harmonised_db.hr_work_schedule_dim T6 ON T6.WorkScheduleID = T2.WorkScheduleID\r\n",
					"\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"drop table if exists default.mipins_fact_absence_all;\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"create or replace table mipins_fact_absence_all\r\n",
					"using delta\r\n",
					"location '/odw_curated_db/mipins_fact_absence_all'\r\n",
					"as\r\n",
					"SELECT * FROM odw_curated_db.vw_mipins_fact_absence_all"
				],
				"execution_count": 3
			}
		]
	}
}