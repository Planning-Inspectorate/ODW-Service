{
	"name": "mipins_hr_fact_sickness",
	"properties": {
		"description": "Creating HR_Personnel_Sub_Area view for PBI Reports",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "494a6b7a-bbf1-4a90-9243-040d123fe905"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE VIEW fact_sickness\r\n",
					"\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT \r\n",
					"-- CASE\r\n",
					"--             WHEN (AbsenceEndDate >= (SELECT  dateadd(yyyy,-2, cast(cast(YEAR(getdate())-\r\n",
					"--                                         (CASE \r\n",
					"--                                             WHEN month(getDate()) between 1 and 3 then 1\r\n",
					"--                                             ELSE 0\r\n",
					"--                                         end) as varchar)+'0401' as date)))) \r\n",
					"--                 and\r\n",
					"--                 (AbsenceEndDate < (SELECT  dateadd(yyyy,0, cast(cast(YEAR(getdate())-\r\n",
					"--                                         (CASE \r\n",
					"--                                             WHEN month(getDate()) between 1 and 3 then 1\r\n",
					"--                                             ELSE 0\r\n",
					"--                                         end) as varchar)+'0401' as date))))\r\n",
					"--                 then 'Previous FY'\r\n",
					"--             WHEN \r\n",
					"--                 (AbsenceEndDate < (SELECT  dateadd(yyyy,-1, cast(cast(YEAR(getdate())-\r\n",
					"--                                         (CASE \r\n",
					"--                                             WHEN month(getDate()) between 1 and 3 then 1\r\n",
					"--                                             ELSE 0\r\n",
					"--                                         end) as varchar)+'0401' as date))))\r\n",
					"--                 then 'Older FY'\r\n",
					"--                 WHEN \r\n",
					"--                 (AbsenceEndDate >= (SELECT  dateadd(yyyy,-1, cast(cast(YEAR(getdate())-\r\n",
					"--                                         (CASE \r\n",
					"--                                             WHEN month(getDate()) between 1 and 3 then 1\r\n",
					"--                                             ELSE 0\r\n",
					"--                                         end) as varchar)+'0401' as date))))\r\n",
					"--                     and\r\n",
					"--                 (AbsenceEndDate < (SELECT  dateadd(yyyy,+1, cast(cast(YEAR(getdate())-\r\n",
					"--                                         (CASE \r\n",
					"--                                             WHEN month(getDate()) between 1 and 3 then 1\r\n",
					"--                                             ELSE 0\r\n",
					"--                                         end) as varchar)+'0401' as date))))\r\n",
					"--                 then 'Current FY'\r\n",
					"--             ELSE 'Next FY'\r\n",
					"-- END AS FinancialYear,\r\n",
					"CASE\r\n",
					"      WHEN (AbsenceEndDate >= (cast(dateadd(yyyy,-2, getDate()) as date))) and (AbsenceEndDate < (cast(dateadd(yyyy,-1, getDate()) as date)))then 'Previous CY'\r\n",
					"      WHEN (AbsenceEndDate < (cast(dateadd(yyyy,-2, getDate()) as date))) then 'Older CY'\r\n",
					"      WHEN (AbsenceEndDate >= (cast(dateadd(yyyy,-1, getDate()) as date))) and (AbsenceEndDate < (cast(getDate() as date))) then 'Current CY' \r\n",
					"      ELSE 'Future CY'\r\n",
					"END AS CalendarYear\r\n",
					"FROM odw_harmonised_db.hr_absence_dim "
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE \r\n",
					"        WHEN (AbsenceEndDate >= (cast(dateadd(yyyy,-2, getDate()) as date))) and (AbsenceEndDate < (cast(dateadd(yyyy,-1, getDate()) as date)))then 'Previous CY'\r\n",
					"    END AS CalendarYear\r\n",
					"FROM odw_harmonised_db.hr_absence_dim "
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- CREATE OR REPLACE VIEW odw_curated_db.vw_mipins_hr_fact_sickness\r\n",
					"\r\n",
					"-- AS\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"\r\n",
					"abs.EmployeeID AS StaffNumber,\r\n",
					"date.FinancialYear AS MeasureYear,\r\n",
					"COUNT(*) as SicknessCount\r\n",
					"\r\n",
					"\r\n",
					"FROM odw_harmonised_db.hr_absence_dim abs\r\n",
					"FULL JOIN default.calendar_dim_plus date on date.CalendarDate = abs.AbsenceStartDate\r\n",
					"WHERE AbsenceType in  ('Sickness')\r\n",
					"-- WHERE FinancialYear in ('CalendarYear')\r\n",
					"GROUP BY EmployeeID\r\n",
					"      ,FinancialYear\r\n",
					"\r\n",
					"\r\n",
					"UNION\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"\r\n",
					"abs.EmployeeID,\r\n",
					"date.CalendarYear,\r\n",
					"COUNT(*) as SicknessCount\r\n",
					"\r\n",
					"\r\n",
					"FROM odw_harmonised_db.hr_absence_dim abs\r\n",
					"FULL JOIN default.calendar_dim_plus date on date.CalendarDate = abs.AbsenceStartDate\r\n",
					"-- WHERE FinancialYear in ('CalendarYear','CalendarYear')\r\n",
					"WHERE AbsenceType in  ('Sickness')\r\n",
					"GROUP BY EmployeeID\r\n",
					"      ,CalendarYear\r\n",
					"order by StaffNumber\r\n",
					""
				],
				"execution_count": 3
			}
		]
	}
}