{
	"name": "checkmark_casemarking_dim",
	"properties": {
		"folder": {
			"name": "archive/odw-harmonised/Checkmark"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d3f2246b-051a-4ffe-9e96-a6dd0d2384ed"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 32,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casemarking_grouped\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"SELECT id,\r\n",
					"case_reference,\r\n",
					"overall_mark,\r\n",
					"amendments_timeliness_mark,\r\n",
					"complexity,\r\n",
					"conditions_mark,\r\n",
					"conditions_detail,\r\n",
					"coverage_mark,\r\n",
					"coverage_detail,\r\n",
					"ground_a_mark,\r\n",
					"ground_a_iit_level,\r\n",
					"invalid_nullity,\r\n",
					"invalid_nullity_mark,\r\n",
					"legal_grounds_mark,\r\n",
					"legal_grounds_considered,\r\n",
					"non_legal_grounds_mark,\r\n",
					"non_legal_grounds_considered,\r\n",
					"other_grounds_affecting_complexity,\r\n",
					"outcome,\r\n",
					"overall_case_level_for_iit_progression,\r\n",
					"presentation_accuracy_mark,\r\n",
					"presentation_accuracy_detail,\r\n",
					"structure_reasoning_mark,\r\n",
					"structure_reasoning_detail,\r\n",
					"timeliness_mark,\r\n",
					"reading_complete_notification_needed,\r\n",
					"expected_from\r\n",
					"\r\n",
					"FROM odw_standardised_db.checkmark_case_marking\r\n",
					"Where id is not null\r\n",
					"GROUP BY id,\r\n",
					"case_reference,\r\n",
					"overall_mark,\r\n",
					"amendments_timeliness_mark,\r\n",
					"complexity,\r\n",
					"conditions_mark,\r\n",
					"conditions_detail,\r\n",
					"coverage_mark,\r\n",
					"coverage_detail,\r\n",
					"ground_a_mark,\r\n",
					"ground_a_iit_level,\r\n",
					"invalid_nullity,\r\n",
					"invalid_nullity_mark,\r\n",
					"legal_grounds_mark,\r\n",
					"legal_grounds_considered,\r\n",
					"non_legal_grounds_mark,\r\n",
					"non_legal_grounds_considered,\r\n",
					"other_grounds_affecting_complexity,\r\n",
					"outcome,\r\n",
					"overall_case_level_for_iit_progression,\r\n",
					"presentation_accuracy_mark,\r\n",
					"presentation_accuracy_detail,\r\n",
					"structure_reasoning_mark,\r\n",
					"structure_reasoning_detail,\r\n",
					"timeliness_mark,\r\n",
					"reading_complete_notification_needed,\r\n",
					"expected_from"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (checkmark) against the target (odw_harmonised_db.comment_fact)\n",
					"- **New Data:** where a CasemarkingID in the source does not exist as an id in the target. NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on CasemarkingID in source and id in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an id in the target exists but the same CasemarkingID doesn't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View comment_type_reference_dim_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build comment_type_reference_dim table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casemarking_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T1.id IS NULL\r\n",
					"        THEN T3.CasemarkingDimID\r\n",
					"        ELSE NULL\r\n",
					"    END                                         AS CasemarkingDimID, -- surrogate key\r\n",
					"    T1.id                                       AS CasemarkingID,\r\n",
					"    T1.case_reference                           AS CaseReference,\r\n",
					"    T1.overall_mark                             AS OverallMark,\r\n",
					"    T1.amendments_timeliness_mark               AS AmendmentsTimeliness,\r\n",
					"    T1.complexity                               AS Complexity,\r\n",
					"    T1.conditions_mark                          AS ConditionsMark,\r\n",
					"    T1.conditions_detail                        AS ConditionsDetail,\r\n",
					"    T1.coverage_mark                            AS CoverageMark,\r\n",
					"    T1.coverage_detail                          AS CoverageDetail,\r\n",
					"    T1.ground_a_mark                            AS GroundAMark,\r\n",
					"    T1.ground_a_iit_level                       AS GroundAIITLevel,\r\n",
					"    T1.invalid_nullity                          AS InvalidNullity,\r\n",
					"    T1.invalid_nullity_mark                     AS InvalidNullityMark,\r\n",
					"    T1.legal_grounds_mark                       AS LegalGroundsMark,\r\n",
					"    T1.legal_grounds_considered                 AS LegalGroundsConsidered,\r\n",
					"    T1.non_legal_grounds_mark                   AS NonLegalGroundsMark,\r\n",
					"    T1.non_legal_grounds_considered             AS NonLegalGroundsConsidered,\r\n",
					"    T1.other_grounds_affecting_complexity       AS OtherGroundsAffectingComplexity,\r\n",
					"    T1.outcome                                  AS Outcome,\r\n",
					"    T1.overall_case_level_for_iit_progression   AS OverallCaseLevelForIITProgression,\r\n",
					"    T1.presentation_accuracy_mark               AS PresentationAccuracyMark,\r\n",
					"    T1.presentation_accuracy_detail             AS PresentationAccuracyDetail,\r\n",
					"    T1.structure_reasoning_mark                 AS StructureReasoningMark,\r\n",
					"    T1.structure_reasoning_detail               AS StructureReasoningDetail,\r\n",
					"    T1.timeliness_mark                          AS TimelinessMark,\r\n",
					"    T1.reading_complete_notification_needed     AS ReadingCompleteNotificationNeeded,    \r\n",
					"    T2.SourceSystemID                           AS SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)              AS IngestionDate,\r\n",
					"    NULL                                        AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.id,'.'), \r\n",
					"            IFNULL(T1.case_reference,'.'), \r\n",
					"            IFNULL(T1.overall_mark,'.'), \r\n",
					"            IFNULL(T1.amendments_timeliness_mark,'.'), \r\n",
					"            IFNULL(T1.complexity,'.'), \r\n",
					"            IFNULL(T1.conditions_mark,'.'), \r\n",
					"            IFNULL(T1.conditions_detail,'.'), \r\n",
					"            IFNULL(T1.coverage_mark,'.'), \r\n",
					"            IFNULL(T1.coverage_detail,'.'), \r\n",
					"            IFNULL(T1.ground_a_mark,'.'), \r\n",
					"            IFNULL(T1.ground_a_iit_level,'.'), \r\n",
					"            IFNULL(T1.invalid_nullity,'.'), \r\n",
					"            IFNULL(T1.invalid_nullity_mark,'.'), \r\n",
					"            IFNULL(T1.legal_grounds_mark,'.'), \r\n",
					"            IFNULL(T1.legal_grounds_considered,'.'), \r\n",
					"            IFNULL(T1.non_legal_grounds_mark,'.'), \r\n",
					"            IFNULL(T1.non_legal_grounds_considered,'.'), \r\n",
					"            IFNULL(T1.other_grounds_affecting_complexity,'.'), \r\n",
					"            IFNULL(T1.outcome,'.'), \r\n",
					"            IFNULL(T1.overall_case_level_for_iit_progression,'.'), \r\n",
					"            IFNULL(T1.presentation_accuracy_mark,'.'), \r\n",
					"            IFNULL(T1.presentation_accuracy_detail,'.'), \r\n",
					"            IFNULL(T1.structure_reasoning_mark,'.'), \r\n",
					"            IFNULL(T1.structure_reasoning_detail,'.'), \r\n",
					"            IFNULL(T1.timeliness_mark,'.'), \r\n",
					"            IFNULL(T1.reading_complete_notification_needed,'.')\r\n",
					"            )\r\n",
					"        )                                       AS RowID,\r\n",
					"    'Y'                                         AS IsActive,\r\n",
					"    T3.IsActive                                 AS HistoricIsActive\r\n",
					"\r\n",
					"FROM casemarking_grouped T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 \r\n",
					"    ON \"Checkmark\" = T2.Description\r\n",
					"FULL JOIN odw_harmonised_db.checkmark_casemarking_dim T3 \r\n",
					"    ON T1.id = T3.CasemarkingID \r\n",
					"        AND T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    (CASE\r\n",
					"        WHEN T1.ID = T3.CasemarkingID \r\n",
					"            AND md5(\r\n",
					"                concat(\r\n",
					"                    IFNULL(T1.id,'.'), \r\n",
					"                    IFNULL(T1.case_reference,'.'), \r\n",
					"                    IFNULL(T1.overall_mark,'.'), \r\n",
					"                    IFNULL(T1.amendments_timeliness_mark,'.'), \r\n",
					"                    IFNULL(T1.complexity,'.'), \r\n",
					"                    IFNULL(T1.conditions_mark,'.'), \r\n",
					"                    IFNULL(T1.conditions_detail,'.'), \r\n",
					"                    IFNULL(T1.coverage_mark,'.'), \r\n",
					"                    IFNULL(T1.coverage_detail,'.'), \r\n",
					"                    IFNULL(T1.ground_a_mark,'.'), \r\n",
					"                    IFNULL(T1.ground_a_iit_level,'.'), \r\n",
					"                    IFNULL(T1.invalid_nullity,'.'), \r\n",
					"                    IFNULL(T1.invalid_nullity_mark,'.'), \r\n",
					"                    IFNULL(T1.legal_grounds_mark,'.'), \r\n",
					"                    IFNULL(T1.legal_grounds_considered,'.'), \r\n",
					"                    IFNULL(T1.non_legal_grounds_mark,'.'), \r\n",
					"                    IFNULL(T1.non_legal_grounds_considered,'.'), \r\n",
					"                    IFNULL(T1.other_grounds_affecting_complexity,'.'), \r\n",
					"                    IFNULL(T1.outcome,'.'), \r\n",
					"                    IFNULL(T1.overall_case_level_for_iit_progression,'.'), \r\n",
					"                    IFNULL(T1.presentation_accuracy_mark,'.'), \r\n",
					"                    IFNULL(T1.presentation_accuracy_detail,'.'), \r\n",
					"                    IFNULL(T1.structure_reasoning_mark,'.'), \r\n",
					"                    IFNULL(T1.structure_reasoning_detail,'.'), \r\n",
					"                    IFNULL(T1.timeliness_mark,'.'), \r\n",
					"                    IFNULL(T1.reading_complete_notification_needed,'.'))) <> T3.RowID\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.CasemarkingID IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END  = 'Y' )\r\n",
					"    AND T1.id IS NOT NULL\r\n",
					"    AND T1.expected_from = (SELECT MAX(expected_from) FROM casemarking_grouped)\r\n",
					";"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **_dim_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View _dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY  VIEW casemarking_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    CasemarkingDimID, -- surrogate key\r\n",
					"    CasemarkingID,\r\n",
					"    CaseReference,\r\n",
					"    OverallMark,\r\n",
					"    AmendmentsTimeliness,\r\n",
					"    Complexity,\r\n",
					"    ConditionsMark,\r\n",
					"    ConditionsDetail,\r\n",
					"    CoverageMark,\r\n",
					"    CoverageDetail,\r\n",
					"    GroundAMark,\r\n",
					"    GroundAIITLevel,\r\n",
					"    InvalidNullity,\r\n",
					"    InvalidNullityMark,\r\n",
					"    LegalGroundsMark,\r\n",
					"    LegalGroundsConsidered,\r\n",
					"    NonLegalGroundsMark,\r\n",
					"    NonLegalGroundsConsidered,\r\n",
					"    OtherGroundsAffectingComplexity,\r\n",
					"    Outcome,\r\n",
					"    OverallCaseLevelForIITProgression,\r\n",
					"    PresentationAccuracyMark,\r\n",
					"    PresentationAccuracyDetail,\r\n",
					"    StructureReasoningMark,\r\n",
					"    StructureReasoningDetail,\r\n",
					"    TimelinessMark,\r\n",
					"    ReadingCompleteNotificationNeeded,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From casemarking_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CasemarkingDimID,\r\n",
					"    CasemarkingID,\r\n",
					"    CaseReference,\r\n",
					"    OverallMark,\r\n",
					"    AmendmentsTimeliness,\r\n",
					"    Complexity,\r\n",
					"    ConditionsMark,\r\n",
					"    ConditionsDetail,\r\n",
					"    CoverageMark,\r\n",
					"    CoverageDetail,\r\n",
					"    GroundAMark,\r\n",
					"    GroundAIITLevel,\r\n",
					"    InvalidNullity,\r\n",
					"    InvalidNullityMark,\r\n",
					"    LegalGroundsMark,\r\n",
					"    LegalGroundsConsidered,\r\n",
					"    NonLegalGroundsMark,\r\n",
					"    NonLegalGroundsConsidered,\r\n",
					"    OtherGroundsAffectingComplexity,\r\n",
					"    Outcome,\r\n",
					"    OverallCaseLevelForIITProgression,\r\n",
					"    PresentationAccuracyMark,\r\n",
					"    PresentationAccuracyDetail,\r\n",
					"    StructureReasoningMark,\r\n",
					"    StructureReasoningDetail,\r\n",
					"    TimelinessMark,\r\n",
					"    ReadingCompleteNotificationNeeded,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive  \r\n",
					"FROM odw_harmonised_db.checkmark_casemarking_dim\r\n",
					"WHERE CaseReference IN (SELECT CaseReference FROM casemarking_dim_new WHERE CasemarkingID IS NULL)\r\n",
					"AND IsActive = 'Y'; \r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM casemarking_dim_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW casemarking_dim_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    CasemarkingDimID,\n",
					"    CasemarkingID,\n",
					"    CaseReference,\n",
					"    OverallMark,\n",
					"    AmendmentsTimeliness,\n",
					"    Complexity,\n",
					"    ConditionsMark,\n",
					"    ConditionsDetail,\n",
					"    CoverageMark,\n",
					"    CoverageDetail,\n",
					"    GroundAMark,\n",
					"    GroundAIITLevel,\n",
					"    InvalidNullity,\n",
					"    InvalidNullityMark,\n",
					"    LegalGroundsMark,\n",
					"    LegalGroundsConsidered,\n",
					"    NonLegalGroundsMark,\n",
					"    NonLegalGroundsConsidered,\n",
					"    OtherGroundsAffectingComplexity,\n",
					"    Outcome,\n",
					"    OverallCaseLevelForIITProgression,\n",
					"    PresentationAccuracyMark,\n",
					"    PresentationAccuracyDetail,\n",
					"    StructureReasoningMark,\n",
					"    StructureReasoningDetail,\n",
					"    TimelinessMark,\n",
					"    ReadingCompleteNotificationNeeded,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM casemarking_dim_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View _dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the Business Key (i.e.  from Personal Characteristics), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the business key, insert rows\n",
					"## Table odw_harmonised._dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.checkmark_casemarking_dim AS Target\r\n",
					"USING casemarking_dim_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.CasemarkingDimID = Target.CasemarkingDimID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (CasemarkingDimID,\r\n",
					"        CasemarkingID,\r\n",
					"        CaseReference,\r\n",
					"        OverallMark,\r\n",
					"        AmendmentsTimeliness,\r\n",
					"        Complexity,\r\n",
					"        ConditionsMark,\r\n",
					"        ConditionsDetail,\r\n",
					"        CoverageMark,\r\n",
					"        CoverageDetail,\r\n",
					"        GroundAMark,\r\n",
					"        GroundAIITLevel,\r\n",
					"        InvalidNullity,\r\n",
					"        InvalidNullityMark,\r\n",
					"        LegalGroundsMark,\r\n",
					"        LegalGroundsConsidered,\r\n",
					"        NonLegalGroundsMark,\r\n",
					"        NonLegalGroundsConsidered,\r\n",
					"        OtherGroundsAffectingComplexity,\r\n",
					"        Outcome,\r\n",
					"        OverallCaseLevelForIITProgression,\r\n",
					"        PresentationAccuracyMark,\r\n",
					"        PresentationAccuracyDetail,\r\n",
					"        StructureReasoningMark,\r\n",
					"        StructureReasoningDetail,\r\n",
					"        TimelinessMark,\r\n",
					"        ReadingCompleteNotificationNeeded,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)  \r\n",
					"        VALUES (Source.CasemarkingDimID,\r\n",
					"        Source.CasemarkingID,\r\n",
					"        Source.CaseReference,\r\n",
					"        Source.OverallMark,\r\n",
					"        Source.AmendmentsTimeliness,\r\n",
					"        Source.Complexity,\r\n",
					"        Source.ConditionsMark,\r\n",
					"        Source.ConditionsDetail,\r\n",
					"        Source.CoverageMark,\r\n",
					"        Source.CoverageDetail,\r\n",
					"        Source.GroundAMark,\r\n",
					"        Source.GroundAIITLevel,\r\n",
					"        Source.InvalidNullity,\r\n",
					"        Source.InvalidNullityMark,\r\n",
					"        Source.LegalGroundsMark,\r\n",
					"        Source.LegalGroundsConsidered,\r\n",
					"        Source.NonLegalGroundsMark,\r\n",
					"        Source.NonLegalGroundsConsidered,\r\n",
					"        Source.OtherGroundsAffectingComplexity,\r\n",
					"        Source.Outcome,\r\n",
					"        Source.OverallCaseLevelForIITProgression,\r\n",
					"        Source.PresentationAccuracyMark,\r\n",
					"        Source.PresentationAccuracyDetail,\r\n",
					"        Source.StructureReasoningMark,\r\n",
					"        Source.StructureReasoningDetail,\r\n",
					"        Source.TimelinessMark,\r\n",
					"        Source.ReadingCompleteNotificationNeeded,\r\n",
					"        Source.SourceSystemID, \r\n",
					"        Source.IngestionDate, \r\n",
					"        Source.ValidTo, \r\n",
					"        Source.RowID, \r\n",
					"        Source.IsActive) \r\n",
					"; \r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised._dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new ID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.checkmark_casemarking_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY CasemarkingDimID NULLS LAST) AS CasemarkingDimID,\r\n",
					"    CasemarkingID,\r\n",
					"    CaseReference,\r\n",
					"    OverallMark,\r\n",
					"    AmendmentsTimeliness,\r\n",
					"    Complexity,\r\n",
					"    ConditionsMark,\r\n",
					"    ConditionsDetail,\r\n",
					"    CoverageMark,\r\n",
					"    CoverageDetail,\r\n",
					"    GroundAMark,\r\n",
					"    GroundAIITLevel,\r\n",
					"    InvalidNullity,\r\n",
					"    InvalidNullityMark,\r\n",
					"    LegalGroundsMark,\r\n",
					"    LegalGroundsConsidered,\r\n",
					"    NonLegalGroundsMark,\r\n",
					"    NonLegalGroundsConsidered,\r\n",
					"    OtherGroundsAffectingComplexity,\r\n",
					"    Outcome,\r\n",
					"    OverallCaseLevelForIITProgression,\r\n",
					"    PresentationAccuracyMark,\r\n",
					"    PresentationAccuracyDetail,\r\n",
					"    StructureReasoningMark,\r\n",
					"    StructureReasoningDetail,\r\n",
					"    TimelinessMark,\r\n",
					"    ReadingCompleteNotificationNeeded,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive  \r\n",
					"FROM odw_harmonised_db.checkmark_casemarking_dim;\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}