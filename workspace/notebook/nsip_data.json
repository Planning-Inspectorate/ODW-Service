{
	"name": "nsip_data",
	"properties": {
		"description": "please refer to the NSIP Entity Message Topic Requirements  documentation",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "309ccd68-5890-4faa-8a4b-56e9bfa32e42"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Checking the Environment\n",
					"#### If dev or test, limiting the number of output rows and anonymisation of the sensitive fields is required."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from notebookutils import mssparkutils\n",
					"# storage_account=mssparkutils.notebook.run('/utils/py_utils_get_storage_account')\n",
					"\n",
					"# is_dev_or_test_env = 'dev' in storage_account or 'test' in storage_account\n",
					"\n",
					"# # limiting the number of output to 20 rows for dev environment\n",
					"# max_limit = 20 if 'dev' in storage_account else 100000000\n",
					"\n",
					"# spark.sql(f\"SET MAX_LIMIT = {max_limit}\")"
				],
				"execution_count": 44
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_nsip_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_nsip_data\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"\tCAST(CASE WHEN T1.Migrated = '0' \n",
					"\t\t THEN T1.CaseNodeID\n",
					"\t\t ELSE T1.CaseID\n",
					"\tEND\tAS INT)\t\t\t\t\t\t\t\t\t\t\t\tAS caseId,\n",
					"\tCASE\n",
					"\t\tWHEN T1.CaseReference = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.CaseReference\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS caseReference,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.CaseNodeID = 'nan'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.CaseNodeID\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS caseNodeId,\t\n",
					"\tT1.projectName\t\t\t \t\t\t\t\t\t\t\tAS projectName,\t\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.Summary = 'nan'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.Summary\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS projectDescription,\n",
					"\tCASE\n",
					"\t\tWHEN T1.Decision = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE LOWER(T1.Decision) \n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS decision,\n",
					"\tCASE WHEN LOWER(T1.ProjectStatus) = 'published' \n",
					"\t\t THEN 'published'\n",
					"\t\t ELSE 'unpublished'\n",
					"\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS publishStatus,\n",
					"\tT1.ExamTimetablePublishStatus \t\t\t\t\t\t\tAS examTimetablePublishStatus,\n",
					"\tT1.Sector \t\t\t\t\t\t\t\t\t\t\t\tAS sector,\n",
					"\tT1.ProjectType \t\t\t\t\t\t\t\t\t\t\tAS projectType,\n",
					"\tLOWER(T1.ODTSourceSystem)\t\t\t\t\t\t\t\tAS sourceSystem,\n",
					"\tLOWER(REPLACE(REPLACE(T1.Stage,'-', '_'),' ', '_'))\t\tAS stage,\n",
					"\tCASE\n",
					"\t\tWHEN T1. = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.CaseReference\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS caseReference,\n",
					"\tT1.ProjectLocation \t\t\t\t\t\t\t\t\t\tAS projectLocation,\n",
					"\tT1.ProjectEmailAddress \t\t\t\t\t\t\t\t\tAS projectEmailAddress,\n",
					"\tLOWER(\n",
					"\t\tREPLACE(\n",
					"\t\t\tREPLACE(\n",
					"\t\t\t\tREPLACE(T1.Region,' ', '_'),\n",
					"\t\t\t'[', ''),\n",
					"\t\t']', '')) \t\t\t\t\t\t\t\t\t\t\tAS regions,\n",
					"\tT1.Transboundary \t\t\t\t\t\t\t\t\t\tAS transboundary,\n",
					"\tCAST(T1.Easting AS INT)\t\t\t\t\t\t\t\t\tAS easting,\n",
					"\tCAST(T1.Northing AS INT)\t\t\t\t\t\t\t\tAS northing,\n",
					"\n",
					"\tCASE\n",
					"\t\tWHEN T1.DatePINSFirstNotifiedOfProject = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DatePINSFirstNotifiedOfProject\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS datePINSFirstNotifiedOfProject,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DateProjectAppearsOnWebsite = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateProjectAppearsOnWebsite\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateProjectAppearsOnWebsite,\n",
					"\tCASE\n",
					"\t\tWHEN T1.AnticipatedSubmissionDateNonSpecific = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.AnticipatedSubmissionDateNonSpecific\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS anticipatedSubmissionDateNonSpecific,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.AnticipatedDateOfSubmission = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.AnticipatedDateOfSubmission\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS anticipatedDateOfSubmission,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.ScreeningOpinionSought = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.ScreeningOpinionSought\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS screeningOpinionSought,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.ScreeningOpinionIssued = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.ScreeningOpinionIssued\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS screeningOpinionIssued,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.ScopingOpinionSought = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.ScopingOpinionSought\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS scopingOpinionSought,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.ScopingOpinionIssued = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.ScopingOpinionIssued\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS scopingOpinionIssued,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.Section46Notification = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.Section46Notification\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS section46Notification,\n",
					"\t\tCASE\n",
					"\t\tWHEN T1.DateOfDCOSubmission = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateOfDCOSubmission\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfDCOSubmission,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DeadlineForAcceptanceDecision = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DeadlineForAcceptanceDecision\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS deadlineForAcceptanceDecision,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DateOfDCOAcceptance = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateOfDCOAcceptance\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfDCOAcceptance,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DateOfNonAcceptance = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateOfNonAcceptance\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfNonAcceptance,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DateOfRepresentationPeriodOpen = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateOfRepresentationPeriodOpen\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfRepresentationPeriodOpen,\n",
					"\tCASE\n",
					"\t\tWHEN T1.DateOfRelevantRepresentationClose = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.DateOfRelevantRepresentationClose\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfRelevantRepresentationClose,\n",
					"\tCASE\n",
					"\t\tWHEN T1.ExtensionToDateRelevantRepresentationsClose = 'None'\n",
					"\t\tTHEN NULL\n",
					"\t\tELSE T1.ExtensionToDateRelevantRepresentationsClose\n",
					"\tEND \t\t\t\t\t\t\t\t\t\t\t\t\tAS extensionToDateRelevantRepresentationsClose,\n",
					"\n",
					"\n",
					"\n",
					"\n",
					"\n",
					"\tT1.DateRRepAppearOnWebsite \t\t\t\t\t\t\t\tAS dateRRepAppearOnWebsite,\n",
					"\tT1.DateIAPIDue \t\t\t\t\t\t\t\t\t\t\tAS dateIAPIDue, ---NEW\n",
					"\tT1.Rule6LetterPublishDate \t\t\t\t\t\t\t\tAS rule6LetterPublishDate,\n",
					"\tT1.PreliminaryMeetingStartDate \t\t\t\t\t\t\tAS preliminaryMeetingStartDate,\n",
					"\tT1.NotificationDateForPMAndEventsDirectlyFollowingPM \tAS notificationDateForPMAndEventsDirectlyFollowingPM,\n",
					"\tT1.NotificationDateForEventsDeveloper \t\t\t\t\tAS notificationDateForEventsDeveloper,\n",
					"\tT1.DateSection58NoticeReceived \t\t\t\t\t\t\tAS dateSection58NoticeReceived,\n",
					"\tT1.ConfirmedStartOfExamination \t\t\t\t\t\t\tAS confirmedStartOfExamination,\n",
					"\tT1.Rule8LetterPublishDate \t\t\t\t\t\t\t\tAS rule8LetterPublishDate,\t\n",
					"\tT1.DeadlineForCloseOfExamination \t\t\t\t\t\tAS deadlineForCloseOfExamination,\n",
					"\tT1.DateTimeExaminationEnds\t\t\t\t\t\t\t\tAS dateTimeExaminationEnds,\t\n",
					"\tT1.Stage4ExtensionToExamCloseDate\t\t\t\t\t\tAS stage4ExtensionToExamCloseDate,\n",
					"\tT1.DeadlineForSubmissionOfRecommendation \t\t\t\tAS deadlineForSubmissionOfRecommendation,\n",
					"\tT1.DateOfRecommendations \t\t\t\t\t\t\t\tAS dateOfRecommendations,\n",
					"\tT1.Stage5ExtensionToDecisionDeadline \t\t\t\t\tAS stage5ExtensionToDecisionDeadline,\n",
					"\tT1.DeadlineForDecision \t\t\t\t\t\t\t\t\tAS deadlineForDecision,\n",
					"\tT1.ConfirmedDateOfDecision \t\t\t\t\t\t\t\tAS confirmedDateOfDecision,\n",
					"\tT1.Stage5ExtensionToRecommendationDeadline\t \t\t\tAS stage5ExtensionToRecommendationDeadline,\t\n",
					"\tT1.JRPeriodEndDate \t\t\t\t\t\t\t\t\t\tAS jRPeriodEndDate,\n",
					"\tT1.DateProjectWithdrawn \t\t\t\t\t\t\t\tAS dateProjectWithdrawn,\n",
					"\tCASE\n",
					"        WHEN T3.TypeOfInvolvement LIKE '%Operations%Lead%'\n",
					"        THEN T3.ContactID\n",
					"        ELSE NULL\n",
					"    END \t\t\t\t\t\t\t\t\t\t\t\t\tAS operationsLeadId,\n",
					"\tCASE\n",
					"        WHEN T3.TypeOfInvolvement LIKE '%Operations%Manager%'\n",
					"        THEN T3.ContactID\n",
					"        ELSE NULL\n",
					"    END \t\t\t\t\t\t\t\t\t\t\t\t\tAS operationsManagerId,\n",
					"\tCASE\n",
					"        WHEN T3.TypeOfInvolvement LIKE '%Case&Manager%'\n",
					"        THEN T3.ContactID\n",
					"        ELSE NULL\n",
					"    END \t\t\t\t\t\t\t\t\t\t\t\t\tAS caseManagerId,\n",
					"\tT1.NsipOfficerID \t\t\t\t\t\t\t\t\t\tAS nsipOfficerIds,\n",
					"\tT1.NsipAdministrationOfficerID \t\t\t\t\t\t\tAS nsipAdministrationOfficerIds,\n",
					"    NULL \t\t\t\t\t\t\t\t\t\t\t\t\tAS leadInspectorId,\n",
					"    T1.InspectorID \t\t\t\t\t\t\t\t\t\t\tAS inspectorIds, -- surrogate key\n",
					"\tNULL\t\t\t\t\t\t\t\t\t\t\t\t\tAS environmentalServicesOfficerId,\n",
					"\tNULL \t\t\t\t\t\t\t\t\t\t\t\t\tAS legalOfficerId,\n",
					"\tApplicantID \t\t\t\t\t\t\t\t\t\t\tAS applicantId,\n",
					"\tCASE WHEN T1.WelshLanguage = 'YES' \n",
					"\t\t THEN TRUE\n",
					"\t\t ELSE FALSE\n",
					"\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS welshLanguage,\n",
					"\tLOWER(T1.MapZoomLevel) \t\t\t\t\t\t\t\t\tAS mapZoomLevel,\n",
					"\tT1.SoS \t\t\t\t\t\t\t\t\t\t\t\t\tAS secretaryOfState,\n",
					"\tT1.Migrated \t\t\t\t\t\t\t\t\t\t\tAS migrationStatus,\n",
					"\tNULL \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfReOpenRelevantRepresentationStart,\n",
					"\tNULL \t\t\t\t\t\t\t\t\t\t\t\t\tAS dateOfReOpenRelevantRepresentationClose\n",
					"\n",
					"FROM odw_harmonised_db.casework_nsip_data_dim T1\n",
					"LEFT JOIN odw_harmonised_db.casework_inspector_cases_dim T2 \n",
					"\tON T1.CaseReference=T2.CaseReference \n",
					"\t\tAND T2.IsActive='Y'\n",
					"LEFT JOIN odw_harmonised_db.casework_contact_information_dim T3\n",
					"\tON  T1.ApplicantEmailAddress = T3.Email  \n",
					"\t\tAND CAST(T1.CaseCreatedDate AS date) = CAST(T3.CaseCreatedDate AS date)\n",
					"\t\tAND T3.IsActive='Y'\n",
					"\n",
					"-- LIMIT ${MAX_LIMIT}"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql \n",
					"\n",
					"SELECT * FROM odw_curated_db.vw_nsip_data WHERE caseId = '100000534';\n",
					"\n",
					"-- SELECT DISTINCT Decision FROM odw_harmonised_db.casework_nsip_data_dim;\n",
					"-- SELECT DISTINCT decision FROM odw_curated_db.vw_nsip_data;\n",
					"\n",
					"\n",
					""
				],
				"execution_count": 46
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.nsip_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TABLE odw_curated_db.nsip_data\n",
					"\n",
					"USING delta\n",
					"\n",
					"AS\n",
					"\n",
					"SELECT \t\t\t\t\t\t\t\t\n",
					"    caseId,\n",
					"    caseReference,\n",
					"    projectName,\n",
					"    projectDescription,\n",
					"    decision,\n",
					"    publishStatus,\n",
					"    sector,\n",
					"    projectType,\n",
					"    sourceSystem,\n",
					"    stage,\n",
					"    projectLocation,\n",
					"    projectEmailAddress,\n",
					"    regions,\n",
					"    transboundary,\n",
					"    easting,\n",
					"    northing,\n",
					"    datePINSFirstNotifiedOfProject,\n",
					"    dateProjectAppearsOnWebsite,\n",
					"    anticipatedSubmissionDateNonSpecific,\n",
					"    anticipatedDateOfSubmission,\n",
					"    screeningOpinionSought,\n",
					"    screeningOpinionIssued,\n",
					"    scopingOpinionSought,\n",
					"    scopingOpinionIssued,\n",
					"    section46Notification,\n",
					"    dateOfDCOSubmission,\n",
					"    deadlineForAcceptanceDecision,\n",
					"    dateOfDCOAcceptance,\n",
					"    dateOfNonAcceptance,\n",
					"    dateOfRepresentationPeriodOpen,\n",
					"    dateOfRelevantRepresentationClose,\n",
					"    extensionToDateRelevantRepresentationsClose,\n",
					"    dateRRepAppearOnWebsite,\n",
					"    dateIAPIDue,\n",
					"    rule6LetterPublishDate,\n",
					"    preliminaryMeetingStartDate,\n",
					"    notificationDateForPMAndEventsDirectlyFollowingPM,\n",
					"    notificationDateForEventsDeveloper,\n",
					"    dateSection58NoticeReceived,\n",
					"    confirmedStartOfExamination,\n",
					"    rule8LetterPublishDate,\n",
					"    deadlineForCloseOfExamination,\n",
					"    dateTimeExaminationEnds,\n",
					"    stage4ExtensionToExamCloseDate,\n",
					"    deadlineForSubmissionOfRecommendation,\n",
					"    dateOfRecommendations,\n",
					"    stage5ExtensionToRecommendationDeadline,\n",
					"    deadlineForDecision,\n",
					"    confirmedDateOfDecision,\n",
					"    stage5ExtensionToDecisionDeadline,\n",
					"    jRPeriodEndDate,\n",
					"    dateProjectWithdrawn,\n",
					"    operationsLeadId,\n",
					"    operationsManagerId,\n",
					"    caseManagerId,\n",
					"    nsipOfficerIds,\n",
					"    nsipAdministrationOfficerIds,\n",
					"    leadInspectorId,\n",
					"    inspectorIds,\n",
					"    environmentalServicesOfficerId,\n",
					"    legalOfficerId,\n",
					"    applicantId,\n",
					"    welshLanguage,\n",
					"    mapZoomLevel,\n",
					"    secretaryOfState,\n",
					"    migrationStatus,\n",
					"    dateOfReOpenRelevantRepresentationStart,\n",
					"    dateOfReOpenRelevantRepresentationClose\n",
					"    \n",
					"FROM odw_curated_db.vw_nsip_data\n",
					"\n",
					"WHERE caseId IS NOT NULL;"
				],
				"execution_count": 47
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Install anonymisation library i.e Faker"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# %%pyspark\n",
					"# pip install Faker"
				],
				"execution_count": 48
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Anonymisation of sensitive fields"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# if is_dev_or_test_env:\n",
					"\n",
					"#     import pandas as pd\n",
					"#     import uuid\n",
					"    \n",
					"#     df = spark.sql(\"select * from odw_curated_db.nsip_data\").toPandas()\n",
					"\n",
					"#     if(len(df) > 0):\n",
					"        \n",
					"#         df['OperationsLeadID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['OperationsManagerID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['CaseManagerID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['NSIPAdministrationOfficerID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['LeadInspectorID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['InspectorID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['EnvironmentalServicesOfficerID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"#         df['LegalOfficerID'] = [str(uuid.uuid4()) for _ in range(len(df))]\n",
					"\n",
					"        \n",
					"#         df = spark.createDataFrame(df)\n",
					"\n",
					"#         table_loc = \"abfss://odw-curated@\"+storage_account+'nsip_data'\n",
					"#         df.write.format(\"delta\").mode(\"overwrite\").save(table_loc)  "
				],
				"execution_count": 49
			}
		]
	}
}