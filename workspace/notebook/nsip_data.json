{
	"name": "nsip_data",
	"properties": {
		"description": "please refer to the NSIP Entity Message Topic Requirements  documentation",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "be5acb5e-ff94-44ee-ac45-82393ff79545"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run utils/py_logging_decorator"
				],
				"execution_count": 172
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql import DataFrame"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_nsip_project is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_nsip_project\n",
					"AS\n",
					"SELECT\n",
					"\tProject.caseId\n",
					"\t,Project.caseReference\n",
					"\t,Project.projectName\n",
					"\t,Project.projectNameWelsh\n",
					"\t,Project.projectDescription\n",
					"\t,Project.projectDescriptionWelsh\n",
					"\t,Project.decision\n",
					"\t,LOWER(project.publishStatus) AS publishStatus\n",
					"\t,Project.sector\n",
					"\t,CASE\n",
					"\t\tWHEN Project.ProjectType = 'WW01 - Waste Water treatment Plants' THEN\n",
					"\t\t\t'WW01 - Waste Water Treatment Plants'\n",
					"\t\tELSE \n",
					"\t\t\tProject.ProjectType\n",
					"\tEND AS projectType\n",
					"\t,LOWER(\tCASE \n",
					"\t\t\t\tWHEN Project.ODTSourceSystem = 'ODT' THEN \n",
					"\t\t\t\t\t'back-office-applications' \n",
					"\t\t\t\tELSE \n",
					"\t\t\t\t\tProject.ODTSourceSystem \n",
					"\t\t\tEND) AS sourceSystem\n",
					"\t,LOWER(REPLACE(REPLACE(Project.Stage,'-', '_'),' ', '_')) AS stage\n",
					"\t,Project.projectLocation\n",
					"\t,Project.projectLocationWelsh\n",
					"\t,Project.projectEmailAddress\n",
					"\t,Project.regions\n",
					"\t,Project.transboundary\n",
					"\t,CAST(project.Easting AS INT) AS easting\n",
					"\t,CAST(project.Northing AS INT) AS northing\n",
					"\t,Project.WelshLanguage AS welshLanguage\n",
					"\t,Project.mapZoomLevel\n",
					"\t,Project.SecretaryOfState AS secretaryOfState\n",
					"\t-- Pre-application dates\n",
					"\t,Project.datePINSFirstNotifiedOfProject\n",
					"\t,Project.dateProjectAppearsOnWebsite\t\n",
					"\t,Project.anticipatedSubmissionDateNonSpecific\n",
					"\t,Project.anticipatedDateOfSubmission\n",
					"\t,Project.screeningOpinionSought\t\n",
					"\t,Project.screeningOpinionIssued\n",
					"\t,Project.scopingOpinionSought\n",
					"\t,Project.scopingOpinionIssued\n",
					"\t,Project.section46Notification\n",
					"\t-- acceptance dates\n",
					"\t,Project.dateOfDCOSubmission\n",
					"\t,Project.deadlineForAcceptanceDecision\n",
					"\t,Project.dateOfDCOAcceptance\n",
					"\t,Project.dateOfNonAcceptance\n",
					"\t--pre examination dates\n",
					"\t,Project.dateOfRepresentationPeriodOpen\n",
					"\t,Project.dateOfRelevantRepresentationClose\n",
					"\t,Project.extensionToDateRelevantRepresentationsClose\n",
					"\t,Project.dateRRepAppearOnWebsite\n",
					"\t,Project.dateIAPIDue\n",
					"\t,Project.rule6LetterPublishDate\n",
					"\t,Project.preliminaryMeetingStartDate\n",
					"\t,Project.notificationDateForPMAndEventsDirectlyFollowingPM\n",
					"\t,Project.notificationDateForEventsDeveloper\n",
					"\t-- examination dates\n",
					"\t,Project.dateSection58NoticeReceived\n",
					"\t,Project.confirmedStartOfExamination\n",
					"\t,Project.rule8LetterPublishDate\n",
					"\t,Project.deadlineForCloseOfExamination\n",
					"\t,Project.dateTimeExaminationEnds\n",
					"\t,Project.stage4ExtensionToExamCloseDate\n",
					"\t--recommendation dates\n",
					"\t,Project.deadlineForSubmissionOfRecommendation\n",
					"\t,Project.dateOfRecommendations\n",
					"\t,Project.stage5ExtensionToRecommendationDeadline\n",
					"\t--decision dates\n",
					"\t,Project.deadlineForDecision\n",
					"\t,Project.confirmedDateOfDecision\n",
					"\t,Project.stage5ExtensionToDecisionDeadline\n",
					"\t--post decision dates\n",
					"\t,Project.jRPeriodEndDate\n",
					"\t--withdrawl dates\n",
					"\t,Project.dateProjectWithdrawn\n",
					"\t-- Additional fields\n",
					"\t,Project.operationsLeadId\n",
					"\t,Project.operationsManagerId\n",
					"\t,Project.caseManagerId\n",
					"\t,Project.nsipOfficerIds\n",
					"\t,Project.nsipAdministrationOfficerIds\n",
					"\t,Project.leadInspectorId\n",
					"\t,Project.inspectorIds\n",
					"\t,Project.environmentalServicesOfficerId\n",
					"\t,Project.legalOfficerId\n",
					"\t,Project.applicantId\n",
					"\t,Project.migrationStatus\n",
					"\t,Project.dateOfReOpenRelevantRepresentationStart\n",
					"\t,Project.dateOfReOpenRelevantRepresentationClose\n",
					"\t,Project.isMaterialChange\n",
					"FROM \n",
					"\todw_harmonised_db.nsip_project AS Project\n",
					"WHERE \n",
					"\tProject.IsActive='Y'"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Create a DataFrame of the data from the view"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data = spark.sql(\"SELECT * FROM odw_curated_db.vw_nsip_project\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Specify the schema for the data, taken from the curated table which has already been created in advance from the data model"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"schema = spark.table(\"odw_curated_db.nsip_project\").schema"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Cast all field data types in the data to the data types from the curated table schema\r\n",
					"\r\n",
					"This is necessary because the view generated above is joining harmonised tables, many of which are sourced from Horizon and will have a different schema to the final table and fields will have different data types. Therefore, taking the curated schema as defined in thr data model and casting all fields correctly, ensures accuracy."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = data.select(\r\n",
					"    *[\r\n",
					"        col(field.name).cast(field.dataType).alias(field.name)\r\n",
					"        for field in schema.fields\r\n",
					"    ]\r\n",
					")"
				],
				"execution_count": 164
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Print the schema as a visual check"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"execution_count": 165
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.nsip_project spark table is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"logInfo(f\"Writing to odw_curated_db.nsip_project\")"
				],
				"execution_count": 166
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##from pyspark.sql import SparkSession\r\n",
					"##spark = SparkSession.builder.getOrCreate()\r\n",
					"##view_df = spark.sql('SELECT * FROM odw_curated_db.vw_nsip_project')\r\n",
					"##view_df.write.mode(\"overwrite\").saveAsTable('odw_curated_db.nsip_project')"
				],
				"execution_count": 167
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.mode(\"overwrite\").format(\"delta\").saveAsTable(\"odw_curated_db.nsip_project\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"logInfo(f\"Written to odw_curated_db.nsip_project\")"
				],
				"execution_count": 169
			}
		]
	}
}