{
	"name": "py_sb_horizon_harmonised_appeal_s78",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3ec5e07b-dfc8-4753-b89b-29ae6f85d64d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.types import IntegerType, ArrayType, StructType, StructField\n",
					"from pyspark.sql import Row\n",
					"from pyspark.sql.functions import *"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"service_bus_table = \"odw_harmonised_db.sb_appeal_s78\"\n",
					"\n",
					"spark_table_final = \"odw_harmonised_db.appeal_s78\"\n",
					"\n",
					"primary_key = 'caseReference'\n",
					"incremental_key = 'AppealS78ID'"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Get data out of the service bus with additional fields needed for Horizon data\r\n",
					"service_bus_data = spark.sql(f\"\"\"\r\n",
					"                    SELECT DISTINCT\r\n",
					"                        CAST(NULL AS Long) as AppealS78ID\r\n",
					"                        ,caseReference as {primary_key}\r\n",
					"                        ,caseId\r\n",
					"                        ,submissionId\r\n",
					"                        ,caseStatus\r\n",
					"                        ,caseType\r\n",
					"                        ,caseProcedure\r\n",
					"                        ,lpaCode\r\n",
					"                        ,caseOfficerId\r\n",
					"                        ,inspectorId\r\n",
					"                        ,allocationLevel\r\n",
					"                        ,allocationBand\r\n",
					"                        ,caseSpecialisms\r\n",
					"                        ,caseSubmittedDate\r\n",
					"                        ,caseCreatedDate\r\n",
					"                        ,caseUpdatedDate\r\n",
					"                        ,caseValidDate\r\n",
					"                        ,caseValidationDate\r\n",
					"                        ,caseValidationOutcome\r\n",
					"                        ,caseValidationInvalidDetails\r\n",
					"                        ,caseValidationIncompleteDetails\r\n",
					"                        ,caseExtensionDate\r\n",
					"                        ,caseStartedDate\r\n",
					"                        ,casePublishedDate\r\n",
					"                        ,linkedCaseStatus\r\n",
					"                        ,leadCaseReference\r\n",
					"                        ,lpaQuestionnaireDueDate\r\n",
					"                        ,lpaQuestionnaireSubmittedDate\r\n",
					"                        ,lpaQuestionnaireCreatedDate\r\n",
					"                        ,lpaQuestionnairePublishedDate\r\n",
					"                        ,lpaQuestionnaireValidationOutcome\r\n",
					"                        ,lpaQuestionnaireValidationOutcomeDate\r\n",
					"                        ,lpaQuestionnaireValidationDetails\r\n",
					"                        ,lpaStatement\r\n",
					"                        ,caseWithdrawnDate\r\n",
					"                        ,caseTransferredDate\r\n",
					"                        ,transferredCaseClosedDate\r\n",
					"                        ,caseDecisionOutcomeDate\r\n",
					"                        ,caseDecisionPublishedDate\r\n",
					"                        ,caseDecisionOutcome\r\n",
					"                        ,caseCompletedDate\r\n",
					"                        ,enforcementNotice\r\n",
					"                        ,applicationReference\r\n",
					"                        ,applicationDate\r\n",
					"                        ,applicationDecision\r\n",
					"                        ,applicationDecisionDate\r\n",
					"                        ,caseSubmissionDueDate\r\n",
					"                        ,siteAddressLine1\r\n",
					"                        ,siteAddressLine2\r\n",
					"                        ,siteAddressTown\r\n",
					"                        ,siteAddressCounty\r\n",
					"                        ,siteAddressPostcode\r\n",
					"                        ,siteAccessDetails\r\n",
					"                        ,siteSafetyDetails\r\n",
					"                        ,siteAreaSquareMetres\r\n",
					"                        ,floorSpaceSquareMetres\r\n",
					"                        ,isCorrectAppealType\r\n",
					"                        ,isGreenBelt\r\n",
					"                        ,inConservationArea\r\n",
					"                        ,ownsAllLand\r\n",
					"                        ,ownsSomeLand\r\n",
					"                        ,knowsOtherOwners\r\n",
					"                        ,knowsAllOwners\r\n",
					"                        ,advertisedAppeal\r\n",
					"                        ,notificationMethod\r\n",
					"                        ,ownersInformed\r\n",
					"                        ,originalDevelopmentDescription\r\n",
					"                        ,changedDevelopmentDescription\r\n",
					"                        ,newConditionDetails\r\n",
					"                        ,nearbyCaseReferences\r\n",
					"                        ,neighbouringSiteAddresses\r\n",
					"                        ,affectedListedBuildingNumbers\r\n",
					"                        ,changedListedBuildingNumbers\r\n",
					"                        ,appellantCostsAppliedFor\r\n",
					"                        ,lpaCostsAppliedFor\r\n",
					"                        ,agriculturalHolding\r\n",
					"                        ,tenantAgriculturalHolding\r\n",
					"                        ,otherTenantsAgriculturalHolding\r\n",
					"                        ,informedTenantsAgriculturalHolding\r\n",
					"                        ,appellantProcedurePreference\r\n",
					"                        ,appellantProcedurePreferenceDetails\r\n",
					"                        ,appellantProcedurePreferenceDuration\r\n",
					"                        ,appellantProcedurePreferenceWitnessCount\r\n",
					"                        ,statusPlanningObligation\r\n",
					"                        ,affectsScheduledMonument\r\n",
					"                        ,hasProtectedSpecies\r\n",
					"                        ,isAonbNationalLandscape\r\n",
					"                        ,designatedSitesNames\r\n",
					"                        ,isGypsyOrTravellerSite\r\n",
					"                        ,isPublicRightOfWay\r\n",
					"                        ,eiaEnvironmentalImpactSchedule\r\n",
					"                        ,eiaDevelopmentDescription\r\n",
					"                        ,eiaSensitiveAreaDetails\r\n",
					"                        ,eiaColumnTwoThreshold\r\n",
					"                        ,eiaScreeningOpinion\r\n",
					"                        ,eiaRequiresEnvironmentalStatement\r\n",
					"                        ,eiaCompletedEnvironmentalStatement\r\n",
					"                        ,eiaConsultedBodiesDetails\r\n",
					"                        ,hasStatutoryConsultees\r\n",
					"                        ,hasInfrastructureLevy\r\n",
					"                        ,isInfrastructureLevyFormallyAdopted\r\n",
					"                        ,infrastructureLevyAdoptedDate\r\n",
					"                        ,infrastructureLevyExpectedDate\r\n",
					"                        ,lpaProcedurePreference\r\n",
					"                        ,lpaProcedurePreferenceDetails\r\n",
					"                        ,lpaProcedurePreferenceDuration\r\n",
					"                        ,caseworkReason\r\n",
					"                        ,developmentType\r\n",
					"                        ,importantInformation\r\n",
					"                        ,jurisdiction\r\n",
					"                        ,redeterminedIndicator\r\n",
					"                        ,dateCostsReportDespatched\r\n",
					"                        ,dateNotRecoveredOrDerecovered\r\n",
					"                        ,dateRecovered\r\n",
					"                        ,originalCaseDecisionDate\r\n",
					"                        ,targetDate\r\n",
					"                        ,appellantCommentsSubmittedDate\r\n",
					"                        ,appellantStatementSubmittedDate\r\n",
					"                        ,finalCommentsDueDate\r\n",
					"                        ,interestedPartyRepsDueDate\r\n",
					"                        ,lpaCommentsSubmittedDate\r\n",
					"                        ,lpaProofsSubmittedDate\r\n",
					"                        ,lpaStatementSubmittedDate\r\n",
					"                        ,proofsOfEvidenceDueDate\r\n",
					"                        ,siteNoticesSentDate\r\n",
					"                        ,statementDueDate\r\n",
					"                        ,reasonForNeighbourVisits\r\n",
					"                        ,numberOfResidencesNetChange\r\n",
					"                        ,siteGridReferenceEasting\r\n",
					"                        ,siteGridReferenceNorthing\r\n",
					"                        ,siteViewableFromRoad\r\n",
					"                        ,siteWithinSSSI\r\n",
					"                        ,typeOfPlanningApplication\r\n",
					"\r\n",
					"               \r\n",
					"                        ,Migrated\r\n",
					"                        ,ODTSourceSystem\r\n",
					"                        ,IngestionDate\r\n",
					"                        ,NULLIF(ValidTo, '') AS ValidTo\r\n",
					"                        ,'' as RowID\r\n",
					"                        ,IsActive\r\n",
					"    \r\n",
					"\r\n",
					"                    FROM \r\n",
					"                        {service_bus_table}\r\n",
					"\r\n",
					"                    \"\"\")"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Get data out of Horizon and matching the SB schema (with additional fields and ensure data types match)"
				],
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results = service_bus_data"
				],
				"execution_count": 56
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")"
				],
				"execution_count": 57
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\n",
					"Now need to sort internal ids, IsActive flags, and valid_to dates"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"spark.sql(f\"\"\"\n",
					"    CREATE OR REPLACE TEMPORARY VIEW vw_appeal_s78_calculations_base\n",
					"        AS\n",
					"        SELECT  \n",
					"            row_number() OVER(PARTITION BY {primary_key} ORDER BY IngestionDate DESC) AS ReverseOrderProcessed\n",
					"            ,row_number() OVER(ORDER BY IngestionDate asc, {primary_key} asc) AS {incremental_key}\n",
					"            ,{primary_key}\n",
					"            ,IngestionDate\n",
					"            ,ValidTo\n",
					"            ,'0' AS Migrated\n",
					"            ,CASE row_number() OVER(PARTITION BY {primary_key} ORDER BY IngestionDate DESC)\n",
					"                WHEN 1 THEN\n",
					"                    'Y'\n",
					"                ELSE\n",
					"                    'N'\n",
					"            END AS IsActive                \n",
					"        FROM\n",
					"            {spark_table_final}\n",
					"    \"\"\")\n",
					""
				],
				"execution_count": 58
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_calcs = spark.sql(f\"\"\"\n",
					"                        SELECT\n",
					"                            CurrentRow.{incremental_key}\n",
					"                            ,CurrentRow.{primary_key} \n",
					"                            ,CurrentRow.IngestionDate\n",
					"                            ,COALESCE(NULLIF(CurrentRow.ValidTo,''), NextRow.IngestionDate) AS ValidTo\n",
					"                            ,CASE\n",
					"                                WHEN raw.{primary_key} IS NOT NULL THEN \n",
					"                                    \"1\"\n",
					"                                ELSE \n",
					"                                    \"0\"\n",
					"                            END AS Migrated\n",
					"                            ,CurrentRow.IsActive\n",
					"                        FROM\n",
					"                            vw_appeal_s78_calculations_base AS CurrentRow\n",
					"                            LEFT OUTER JOIN vw_appeal_s78_calculations_base AS NextRow\n",
					"                                ON CurrentRow.{primary_key} = NextRow.{primary_key}\n",
					"                                AND CurrentRow.ReverseOrderProcessed - 1 = NextRow.ReverseOrderProcessed\n",
					"                            LEFT OUTER JOIN (SELECT DISTINCT {primary_key} FROM  odw_harmonised_db.sb_appeal_s78) AS Raw\n",
					"                                ON CurrentRow.{primary_key} = Raw.{primary_key} \n",
					"                            ORDER BY currentRow.ReverseOrderProcessed\n",
					"                    \"\"\")"
				],
				"execution_count": 59
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_calcs"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_calcs = df_calcs.withColumnRenamed(primary_key, f\"temp_{primary_key}\").withColumnRenamed(\"IngestionDate\", \"temp_IngestionDate\")"
				],
				"execution_count": 61
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_calcs\r\n",
					""
				],
				"execution_count": 62
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"results = spark.sql(f\"\"\"\n",
					"                    SELECT DISTINCT \n",
					"                        AppealS78ID\n",
					"                        ,{primary_key}\n",
					"                        ,caseId\n",
					"                        ,submissionId\n",
					"                        ,caseStatus\n",
					"                        ,caseType\n",
					"                        ,caseProcedure\n",
					"                        ,lpaCode\n",
					"                        ,caseOfficerId\n",
					"                        ,inspectorId\n",
					"                        ,allocationLevel\n",
					"                        ,allocationBand\n",
					"                        ,caseSpecialisms\n",
					"                        ,caseSubmittedDate\n",
					"                        ,caseCreatedDate\n",
					"                        ,caseUpdatedDate\n",
					"                        ,caseValidDate\n",
					"                        ,caseValidationDate\n",
					"                        ,caseValidationOutcome\n",
					"                        ,caseValidationInvalidDetails\n",
					"                        ,caseValidationIncompleteDetails\n",
					"                        ,caseExtensionDate\n",
					"                        ,caseStartedDate\n",
					"                        ,casePublishedDate\n",
					"                        ,linkedCaseStatus\n",
					"                        ,leadCaseReference\n",
					"                        ,lpaQuestionnaireDueDate\n",
					"                        ,lpaQuestionnaireSubmittedDate\n",
					"                        ,lpaQuestionnaireCreatedDate\n",
					"                        ,lpaQuestionnairePublishedDate\n",
					"                        ,lpaQuestionnaireValidationOutcome\n",
					"                        ,lpaQuestionnaireValidationOutcomeDate\n",
					"                        ,lpaQuestionnaireValidationDetails\n",
					"                        ,lpaStatement\n",
					"                        ,caseWithdrawnDate\n",
					"                        ,caseTransferredDate\n",
					"                        ,transferredCaseClosedDate\n",
					"                        ,caseDecisionOutcomeDate\n",
					"                        ,caseDecisionPublishedDate\n",
					"                        ,caseDecisionOutcome\n",
					"                        ,caseCompletedDate\n",
					"                        ,enforcementNotice\n",
					"                        ,applicationReference\n",
					"                        ,applicationDate\n",
					"                        ,applicationDecision\n",
					"                        ,applicationDecisionDate\n",
					"                        ,caseSubmissionDueDate\n",
					"                        ,siteAddressLine1\n",
					"                        ,siteAddressLine2\n",
					"                        ,siteAddressTown\n",
					"                        ,siteAddressCounty\n",
					"                        ,siteAddressPostcode\n",
					"                        ,siteAccessDetails\n",
					"                        ,siteSafetyDetails\n",
					"                        ,siteAreaSquareMetres\n",
					"                        ,floorSpaceSquareMetres\n",
					"                        ,isCorrectAppealType\n",
					"                        ,isGreenBelt\n",
					"                        ,inConservationArea\n",
					"                        ,ownsAllLand\n",
					"                        ,ownsSomeLand\n",
					"                        ,knowsOtherOwners\n",
					"                        ,knowsAllOwners\n",
					"                        ,advertisedAppeal\n",
					"                        ,notificationMethod\n",
					"                        ,ownersInformed\n",
					"                        ,originalDevelopmentDescription\n",
					"                        ,changedDevelopmentDescription\n",
					"                        ,newConditionDetails\n",
					"                        ,nearbyCaseReferences\n",
					"                        ,neighbouringSiteAddresses\n",
					"                        ,affectedListedBuildingNumbers\n",
					"                        ,changedListedBuildingNumbers\n",
					"                        ,appellantCostsAppliedFor\n",
					"                        ,lpaCostsAppliedFor\n",
					"                        ,agriculturalHolding\n",
					"                        ,tenantAgriculturalHolding\n",
					"                        ,otherTenantsAgriculturalHolding\n",
					"                        ,informedTenantsAgriculturalHolding\n",
					"                        ,appellantProcedurePreference\n",
					"                        ,appellantProcedurePreferenceDetails\n",
					"                        ,appellantProcedurePreferenceDuration\n",
					"                        ,appellantProcedurePreferenceWitnessCount\n",
					"                        ,statusPlanningObligation\n",
					"                        ,affectsScheduledMonument\n",
					"                        ,hasProtectedSpecies\n",
					"                        ,isAonbNationalLandscape\n",
					"                        ,designatedSitesNames\n",
					"                        ,isGypsyOrTravellerSite\n",
					"                        ,isPublicRightOfWay\n",
					"                        ,eiaEnvironmentalImpactSchedule\n",
					"                        ,eiaDevelopmentDescription\n",
					"                        ,eiaSensitiveAreaDetails\n",
					"                        ,eiaColumnTwoThreshold\n",
					"                        ,eiaScreeningOpinion\n",
					"                        ,eiaRequiresEnvironmentalStatement\n",
					"                        ,eiaCompletedEnvironmentalStatement\n",
					"                        ,eiaConsultedBodiesDetails\n",
					"                        ,hasStatutoryConsultees\n",
					"                        ,hasInfrastructureLevy\n",
					"                        ,isInfrastructureLevyFormallyAdopted\n",
					"                        ,infrastructureLevyAdoptedDate\n",
					"                        ,infrastructureLevyExpectedDate\n",
					"                        ,lpaProcedurePreference\n",
					"                        ,lpaProcedurePreferenceDetails\n",
					"                        ,lpaProcedurePreferenceDuration\n",
					"                        ,caseworkReason\n",
					"                        ,developmentType\n",
					"                        ,importantInformation\n",
					"                        ,jurisdiction\n",
					"                        ,redeterminedIndicator\n",
					"                        ,dateCostsReportDespatched\n",
					"                        ,dateNotRecoveredOrDerecovered\n",
					"                        ,dateRecovered\n",
					"                        ,originalCaseDecisionDate\n",
					"                        ,targetDate\n",
					"                        ,appellantCommentsSubmittedDate\n",
					"                        ,appellantStatementSubmittedDate\n",
					"                        ,finalCommentsDueDate\n",
					"                        ,interestedPartyRepsDueDate\n",
					"                        ,lpaCommentsSubmittedDate\n",
					"                        ,lpaProofsSubmittedDate\n",
					"                        ,lpaStatementSubmittedDate\n",
					"                        ,proofsOfEvidenceDueDate\n",
					"                        ,siteNoticesSentDate\n",
					"                        ,statementDueDate\n",
					"                        ,reasonForNeighbourVisits\n",
					"                        ,numberOfResidencesNetChange\n",
					"                        ,siteGridReferenceEasting\n",
					"                        ,siteGridReferenceNorthing\n",
					"                        ,siteViewableFromRoad\n",
					"                        ,siteWithinSSSI\n",
					"                        ,typeOfPlanningApplication\n",
					"                        ,Migrated\n",
					"                        ,ODTSourceSystem\n",
					"                        ,IngestionDate\n",
					"                        ,ValidTo\n",
					"                        ,MD5(CONCAT(\n",
					"                            IFNULL(CAST(AppealS78ID as String), '.')\n",
					"                            ,IFNULL(CAST(caseReference as String), '.')\n",
					"                            ,IFNULL(CAST(submissionId as String), '.')\n",
					"                            ,IFNULL(CAST(caseStatus as String), '.')\n",
					"                            ,IFNULL(CAST(caseType as String), '.')\n",
					"                            ,IFNULL(CAST(caseProcedure as String), '.')\n",
					"                            ,IFNULL(CAST(lpaCode as String), '.')\n",
					"                            ,IFNULL(CAST(caseOfficerId as String), '.')\n",
					"                            ,IFNULL(CAST(inspectorId as String), '.')\n",
					"                            ,IFNULL(CAST(allocationLevel as String), '.')\n",
					"                            ,IFNULL(CAST(allocationBand as String), '.')\n",
					"                            ,IFNULL(CAST(caseSpecialisms as String), '.')\n",
					"                            ,IFNULL(CAST(caseSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseCreatedDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseUpdatedDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseValidDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseValidationDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseValidationOutcome as String), '.')\n",
					"                            ,IFNULL(CAST(caseValidationInvalidDetails as String), '.')\n",
					"                            ,IFNULL(CAST(caseValidationIncompleteDetails as String), '.')\n",
					"                            ,IFNULL(CAST(caseExtensionDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseStartedDate as String), '.')\n",
					"                            ,IFNULL(CAST(casePublishedDate as String), '.')\n",
					"                            ,IFNULL(CAST(linkedCaseStatus as String), '.')\n",
					"                            ,IFNULL(CAST(leadCaseReference as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireCreatedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnairePublishedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireValidationOutcome as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireValidationOutcomeDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaQuestionnaireValidationDetails as String), '.')\n",
					"                            ,IFNULL(CAST(lpaStatement as String), '.')\n",
					"                            ,IFNULL(CAST(caseWithdrawnDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseTransferredDate as String), '.')\n",
					"                            ,IFNULL(CAST(transferredCaseClosedDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseDecisionOutcomeDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseDecisionPublishedDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseDecisionOutcome as String), '.')\n",
					"                            ,IFNULL(CAST(caseCompletedDate as String), '.')\n",
					"                            ,IFNULL(CAST(enforcementNotice as String), '.')\n",
					"                            ,IFNULL(CAST(applicationReference as String), '.')\n",
					"                            ,IFNULL(CAST(applicationDate as String), '.')\n",
					"                            ,IFNULL(CAST(applicationDecision as String), '.')\n",
					"                            ,IFNULL(CAST(applicationDecisionDate as String), '.')\n",
					"                            ,IFNULL(CAST(caseSubmissionDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(siteAddressLine1 as String), '.')\n",
					"                            ,IFNULL(CAST(siteAddressLine2 as String), '.')\n",
					"                            ,IFNULL(CAST(siteAddressTown as String), '.')\n",
					"                            ,IFNULL(CAST(siteAddressCounty as String), '.')\n",
					"                            ,IFNULL(CAST(siteAddressPostcode as String), '.')\n",
					"                            ,IFNULL(CAST(siteAccessDetails as String), '.')\n",
					"                            ,IFNULL(CAST(siteSafetyDetails as String), '.')\n",
					"                            ,IFNULL(CAST(siteAreaSquareMetres as String), '.')\n",
					"                            ,IFNULL(CAST(floorSpaceSquareMetres as String), '.')\n",
					"                            ,IFNULL(CAST(isCorrectAppealType as String), '.')\n",
					"                            ,IFNULL(CAST(isGreenBelt as String), '.')\n",
					"                            ,IFNULL(CAST(inConservationArea as String), '.')\n",
					"                            ,IFNULL(CAST(ownsAllLand as String), '.')\n",
					"                            ,IFNULL(CAST(ownsSomeLand as String), '.')\n",
					"                            ,IFNULL(CAST(knowsOtherOwners as String), '.')\n",
					"                            ,IFNULL(CAST(knowsAllOwners as String), '.')\n",
					"                            ,IFNULL(CAST(advertisedAppeal as String), '.')\n",
					"                            ,IFNULL(CAST(notificationMethod as String), '.')\n",
					"                            ,IFNULL(CAST(ownersInformed as String), '.')\n",
					"                            ,IFNULL(CAST(originalDevelopmentDescription as String), '.')\n",
					"                            ,IFNULL(CAST(changedDevelopmentDescription as String), '.')\n",
					"                            ,IFNULL(CAST(newConditionDetails as String), '.')\n",
					"                            ,IFNULL(CAST(nearbyCaseReferences as String), '.')\n",
					"                            ,IFNULL(CAST(neighbouringSiteAddresses as String), '.')\n",
					"                            ,IFNULL(CAST(affectedListedBuildingNumbers as String), '.')\n",
					"                            ,IFNULL(CAST(changedListedBuildingNumbers as String), '.')\n",
					"                            ,IFNULL(CAST(appellantCostsAppliedFor as String), '.')\n",
					"                            ,IFNULL(CAST(lpaCostsAppliedFor as String), '.')\n",
					"                            ,IFNULL(CAST(agriculturalHolding as String), '.')\n",
					"                            ,IFNULL(CAST(tenantAgriculturalHolding as String), '.')\n",
					"                            ,IFNULL(CAST(otherTenantsAgriculturalHolding as String), '.')\n",
					"                            ,IFNULL(CAST(informedTenantsAgriculturalHolding as String), '.')\n",
					"                            ,IFNULL(CAST(appellantProcedurePreference as String), '.')\n",
					"                            ,IFNULL(CAST(appellantProcedurePreferenceDetails as String), '.')\n",
					"                            ,IFNULL(CAST(appellantProcedurePreferenceDuration as String),'.')\n",
					"                            ,IFNULL(CAST(appellantProcedurePreferenceWitnessCount as String),'.')\n",
					"                            ,IFNULL(CAST(statusPlanningObligation as String), '.')\n",
					"                            ,IFNULL(CAST(affectsScheduledMonument as String), '.')\n",
					"                            ,IFNULL(CAST(hasProtectedSpecies as String), '.')\n",
					"                            ,IFNULL(CAST(isAonbNationalLandscape as String), '.')\n",
					"                            ,IFNULL(CAST(designatedSitesNames as String), '.')\n",
					"                            ,IFNULL(CAST(isGypsyOrTravellerSite as String), '.')\n",
					"                            ,IFNULL(CAST(isPublicRightOfWay as String), '.')\n",
					"                            ,IFNULL(CAST(eiaEnvironmentalImpactSchedule as String), '.')\n",
					"                            ,IFNULL(CAST(eiaDevelopmentDescription as String), '.')\n",
					"                            ,IFNULL(CAST(eiaSensitiveAreaDetails as String), '.')\n",
					"                            ,IFNULL(CAST(eiaColumnTwoThreshold as String), '.')\n",
					"                            ,IFNULL(CAST(eiaScreeningOpinion as String), '.')\n",
					"                            ,IFNULL(CAST(eiaRequiresEnvironmentalStatement as String), '.')\n",
					"                            ,IFNULL(CAST(eiaCompletedEnvironmentalStatement as String), '.')\n",
					"                            ,IFNULL(CAST(eiaConsultedBodiesDetails as String), '.')\n",
					"                            ,IFNULL(CAST(hasStatutoryConsultees as String), '.')\n",
					"                            ,IFNULL(CAST(hasInfrastructureLevy as String), '.')\n",
					"                            ,IFNULL(CAST(isInfrastructureLevyFormallyAdopted as String), '.')\n",
					"                            ,IFNULL(CAST(infrastructureLevyAdoptedDate as String), '.')\n",
					"                            ,IFNULL(CAST(infrastructureLevyExpectedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaProcedurePreference as String), '.')\n",
					"                            ,IFNULL(CAST(lpaProcedurePreferenceDetails as String), '.')\n",
					"                            ,IFNULL(CAST(lpaProcedurePreferenceDuration as String), '.')\n",
					"                            ,IFNULL(CAST(caseworkReason as String), '.')\n",
					"                            ,IFNULL(CAST(developmentType as String), '.')\n",
					"                            ,IFNULL(CAST(importantInformation as String), '.')\n",
					"                            ,IFNULL(CAST(jurisdiction as String), '.')\n",
					"                            ,IFNULL(CAST(redeterminedIndicator as String), '.')\n",
					"                            ,IFNULL(CAST(dateCostsReportDespatched as String), '.')\n",
					"                            ,IFNULL(CAST(dateNotRecoveredOrDerecovered as String), '.')\n",
					"                            ,IFNULL(CAST(dateRecovered as String), '.')\n",
					"                            ,IFNULL(CAST(originalCaseDecisionDate as String), '.')\n",
					"                            ,IFNULL(CAST(targetDate as String), '.')\n",
					"                            ,IFNULL(CAST(appellantCommentsSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(appellantStatementSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(finalCommentsDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(interestedPartyRepsDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaCommentsSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaProofsSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(lpaStatementSubmittedDate as String), '.')\n",
					"                            ,IFNULL(CAST(proofsOfEvidenceDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(siteNoticesSentDate as String), '.')\n",
					"                            ,IFNULL(CAST(statementDueDate as String), '.')\n",
					"                            ,IFNULL(CAST(reasonForNeighbourVisits as String), '.')\n",
					"                            ,IFNULL(CAST(numberOfResidencesNetChange as String), '.')\n",
					"                            ,IFNULL(CAST(siteGridReferenceEasting as String), '.')\n",
					"                            ,IFNULL(CAST(siteGridReferenceNorthing as String), '.')\n",
					"                            ,IFNULL(CAST(siteViewableFromRoad as String), '.')\n",
					"                            ,IFNULL(CAST(siteWithinSSSI as String), '.')\n",
					"                            ,IFNULL(CAST(typeOfPlanningApplication as String), '.')\n",
					"                            ,IFNULL(CAST(Migrated as String), '.')\n",
					"                            ,IFNULL(CAST(ODTSourceSystem as String), '.')\n",
					"                            ,IFNULL(CAST(IngestionDate as String), '.')\n",
					"                            ,IFNULL(CAST(ValidTo as String), '.')\n",
					"                            )\n",
					"                        ) AS RowID\n",
					"                        ,IsActive\n",
					"                    FROM \n",
					"                        {spark_table_final}\n",
					"                \"\"\")\n",
					"    "
				],
				"execution_count": 63
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"columns = results.columns\n",
					"\n",
					"results = results.drop(\"AppealS78ID\", \"ValidTo\", \"Migrated\", \"IsActive\")"
				],
				"execution_count": 64
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"final_df = results.join(df_calcs, (df_calcs[f\"temp_{primary_key}\"] == results[primary_key]) & (df_calcs[\"temp_IngestionDate\"] == results[\"IngestionDate\"])).select(columns).distinct()\n",
					"final_df = final_df.drop(primary_key).drop_duplicates()"
				],
				"execution_count": 66
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"final_df.write.format(\"delta\").mode(\"Overwrite\").option(\"overwriteSchema\", \"true\").partitionBy(\"IsActive\").saveAsTable(f\"{spark_table_final}\")"
				],
				"execution_count": 67
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}