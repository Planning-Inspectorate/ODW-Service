{
	"name": "py_create_lake_databases",
	"properties": {
		"description": "Post deployment script to create lake databases",
		"folder": {
			"name": "post-deployment"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "aecfe711-fbdc-4164-84f9-de218abc7d8a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"storage_account=mssparkutils.notebook.run('/utils/py_utils_get_storage_account')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"logging_database_location = f\"abfss://logging@{storage_account}\"\r\n",
					"standardised_database_location = f\"abfss://odw-standardised@{storage_account}\"\r\n",
					"harmonised_database_location = f\"abfss://odw-harmonised@{storage_account}\"\r\n",
					"curated_database_location = f\"abfss://odw-curated@{storage_account}\"\r\n",
					"curated_migration_database_location = f\"abfss://odw-curated-migration@{storage_account}\"\r\n",
					"config_database_location = f\"abfss://odw-config-db@{storage_account}\""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS logging LOCATION '{logging_database_location}'\")\r\n",
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS odw_standardised_db LOCATION '{standardised_database_location}'\")\r\n",
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS odw_harmonised_db LOCATION '{harmonised_database_location}'\")\r\n",
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS odw_curated_db LOCATION '{curated_database_location}'\")\r\n",
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS odw_curated_migration_db LOCATION '{curated_migration_database_location}'\")\r\n",
					"spark.sql(f\"CREATE DATABASE IF NOT EXISTS config LOCATION '{config_database_location}'\")"
				],
				"execution_count": null
			}
		]
	}
}