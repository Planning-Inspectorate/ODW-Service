{
	"name": "casework_tpo_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2f11a199-0c7e-4bf5-a2c1-a19726aef06a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_tpo_dim is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_tpo_dim table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_tpo_dim_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.appeal_reference_number IS NULL\r\n",
					"        THEN T3.TPOID\r\n",
					"        ELSE NULL\r\n",
					"    END                                                                                     AS TPOID,\r\n",
					"    T1.category                                                                             AS Category,\r\n",
					"    T1.type                                                                                 AS Type,\r\n",
					"    T1.procedure                                                                            AS Procedure,\r\n",
					"    T10.LPAID                                                                               AS LPAID,\r\n",
					"    T1.appeal_reference_number                                                              AS AppealRefNumber,\r\n",
					"    concat('APP/',T1.type,'/',T1.lpa_code,'/',T1.procedure,'/',T1.appeal_reference_number)  AS CaseReference,\r\n",
					"    T1.rejected_or_withdrawn                                                                AS RejectedOrWithdrawn,\r\n",
					"    T1.appeal_withdrawn_date                                                                AS AppealWithdrawnDate,\r\n",
					"    T1.visit_type                                                                           AS VisitType,\r\n",
					"    T1.appellant                                                                            AS Appellant,\r\n",
					"    T1.site_address_postcode                                                                AS SiteAddressPostcode,\r\n",
					"    T1.revieved_date                                                                        AS RevivedDate,\r\n",
					"    T1.valid_date                                                                           AS ValidDate,\r\n",
					"    T1.start_date                                                                           AS StartDate,\r\n",
					"    T1.event_date                                                                           AS EventDate,\r\n",
					"    T1.decision_date                                                                        AS DecisionDate,\r\n",
					"    T1.decision                                                                             AS Decision,\r\n",
					"    T1.open_or_closed                                                                       AS OpenOrClosed,\r\n",
					"    T1.linked                                                                               AS Linked,\r\n",
					"    T1.case_officer_name                                                                    AS CaseOfficerName,\r\n",
					"    T1.case_officer_login                                                                   AS CaseOfficerLogin,\r\n",
					"    T1.processing_state                                                                     AS ProcessingState,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)                                                          AS IngestionDate,\r\n",
					"    NULL                                                                                    AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.appeal_reference_number,'.'),\r\n",
					"            IFNULL(T1.category,'.'),\r\n",
					"            IFNULL(T1.type,'.'),\r\n",
					"            IFNULL(T1.procedure,'.'),\r\n",
					"            IFNULL(T10.LPAID,'.'),\r\n",
					"            IFNULL(T1.rejected_or_withdrawn,'.'),\r\n",
					"            IFNULL(T1.appeal_withdrawn_date,'.'),\r\n",
					"            IFNULL(T1.visit_type,'.'),\r\n",
					"            IFNULL(T1.appellant,'.'),\r\n",
					"            IFNULL(T1.site_address_postcode,'.'),\r\n",
					"            IFNULL(T1.revieved_date,'.'),\r\n",
					"            IFNULL(T1.valid_date,'.'),\r\n",
					"            IFNULL(T1.start_date,'.'),\r\n",
					"            IFNULL(T1.event_date,'.'),\r\n",
					"            IFNULL(T1.decision_date,'.'),\r\n",
					"            IFNULL(T1.decision,'.'),\r\n",
					"            IFNULL(T1.open_or_closed,'.'),\r\n",
					"            IFNULL(T1.linked,'.'),\r\n",
					"            IFNULL(T1.case_officer_name,'.'),\r\n",
					"            IFNULL(T1.case_officer_login,'.'),\r\n",
					"            IFNULL(T1.processing_state,'.')\r\n",
					"        ))                                                                                      AS RowID, -- this hash should contain all the defining fields\r\n",
					"    'Y'                                                                                         AS IsActive,\r\n",
					"    T3.IsActive                                                                                 AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.casework_specialist_tpo T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_local_planning_authority_fact T10 ON T1.lpa_code = T10.LPACode AND T10.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_tpo_dim T3 ON T1.appeal_reference_number = T3.AppealRefNumber AND T3.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE\r\n",
					"        -- flags new data        \r\n",
					"    (   CASE\r\n",
					"            WHEN T1.appeal_reference_number = T3.AppealRefNumber AND \r\n",
					"                md5(\r\n",
					"                    concat(\r\n",
					"                    IFNULL(T1.appeal_reference_number,'.'),\r\n",
					"                    IFNULL(T1.category,'.'),\r\n",
					"                    IFNULL(T1.type,'.'),\r\n",
					"                    IFNULL(T1.procedure,'.'),\r\n",
					"                    IFNULL(T10.LPAID,'.'),\r\n",
					"                    IFNULL(T1.rejected_or_withdrawn,'.'),\r\n",
					"                    IFNULL(T1.appeal_withdrawn_date,'.'),\r\n",
					"                    IFNULL(T1.visit_type,'.'),\r\n",
					"                    IFNULL(T1.appellant,'.'),\r\n",
					"                    IFNULL(T1.site_address_postcode,'.'),\r\n",
					"                    IFNULL(T1.revieved_date,'.'),\r\n",
					"                    IFNULL(T1.valid_date,'.'),\r\n",
					"                    IFNULL(T1.start_date,'.'),\r\n",
					"                    IFNULL(T1.event_date,'.'),\r\n",
					"                    IFNULL(T1.decision_date,'.'),\r\n",
					"                    IFNULL(T1.decision,'.'),\r\n",
					"                    IFNULL(T1.open_or_closed,'.'),\r\n",
					"                    IFNULL(T1.linked,'.'),\r\n",
					"                    IFNULL(T1.case_officer_name,'.'),\r\n",
					"                    IFNULL(T1.case_officer_login,'.'),\r\n",
					"                    IFNULL(T1.processing_state,'.')\r\n",
					"                    )\r\n",
					"                ) <> T3.RowID  -- same employee, changed data\r\n",
					"                THEN 'Y'\r\n",
					"                WHEN T3.AppealRefNumber IS NULL -- new PositionCode\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END  = 'Y')\r\n",
					";\r\n",
					"\r\n",
					"SELECT COUNT(*) FROM odw_standardised_db.casework_specialist_tpo;\r\n",
					"SELECT COUNT(*) FROM casework_tpo_dim_new;\r\n",
					"SELECT * FROM casework_tpo_dim_new;"
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Source_Number = spark.sql(\"SELECT COUNT(*) AS Source_Number FROM pins_casework_all_appeals_grouped\")\r\n",
					"# Current_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Current_Number FROM odw_harmonised_db.casework_tpo_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS New_Data_Number FROM casework_tpo_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Deleted_Data_Number FROM casework_tpo_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Source_Number_Pandas = Source_Number.toPandas()\r\n",
					"# Current_Number_Pandas =  Current_Number.toPandas()\r\n",
					"# New_Data_Number_Pandas = New_Data_Number.toPandas()\r\n",
					"# Deleted_Data_Number_Pandas = Deleted_Data_Number.toPandas()\r\n",
					"\r\n",
					"# # checking if new total number of registers matches the previously loaded, plus New ones, minus Deleted ones\r\n",
					"# print(\"SET 1:\")\r\n",
					"# Total_Number = Source_Number_Pandas['Source_Number'].tolist() \r\n",
					"# Current_Loaded_Number = Current_Number_Pandas['Current_Number'].tolist() \r\n",
					"# New_Data_Number = New_Data_Number_Pandas['New_Data_Number'].tolist() \r\n",
					"# Deleted_Data_Number = Deleted_Data_Number_Pandas['Deleted_Data_Number'].tolist() \r\n",
					"\r\n",
					"# if Total_Number[0] != (Current_Loaded_Number[0] + New_Data_Number[0] - Deleted_Data_Number[0]):\r\n",
					"#     raise RuntimeError(\"Loading Number do not match\")\r\n",
					"# else:\r\n",
					"#     print(\"Loading number matches with existing codes plus new, minus deleted!\")\r\n",
					"\r\n",
					"# if New_Data_Number[0] > 1000:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many new codes\")\r\n",
					"# else:\r\n",
					"#     print(\"New data under tolerance levels\")\r\n",
					"\r\n",
					"# if Deleted_Data_Number[0] > 500:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many deleted codes\")\r\n",
					"# else:\r\n",
					"#     print(\"Unused codes under tolerance levels\")"
				],
				"execution_count": 14
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Current_Records = spark.sql(\"SELECT DISTINCT RowID AS Current_Records FROM odw_harmonised_db.casework_tpo_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS New_Data_Records FROM casework_tpo_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS Deleted_Data_Records FROM casework_tpo_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Current_Records_Pandas =  Current_Records.toPandas()\r\n",
					"# New_Data_Records_Pandas = New_Data_Records.toPandas()\r\n",
					"# Deleted_Data_Records_Pandas = Deleted_Data_Records.toPandas()\r\n",
					"\r\n",
					"# # checking if a deleted records are correcly flagged, not existing in the new data, but existing inpreviously loaded\r\n",
					"# print(\"TEST 2:\")\r\n",
					"\r\n",
					"# Current_Records = Current_Records_Pandas['Current_Records'].tolist() \r\n",
					"# Deleted_Records = Deleted_Data_Records_Pandas['Deleted_Data_Records'].tolist()\r\n",
					"# New_Records = New_Data_Records_Pandas['New_Data_Records'].tolist()\r\n",
					"\r\n",
					"# print(Current_Records)\r\n",
					"# print(Deleted_Records)\r\n",
					"# print(New_Records)\r\n",
					"\r\n",
					"# for i in Deleted_Records:\r\n",
					"#     if i in Current_Records: \r\n",
					"#         print(i + \" to be deleted is in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Delete do not match\")\r\n",
					"\r\n",
					"# for j in New_Records:\r\n",
					"#     if j not in Current_Records: \r\n",
					"#         print(j + \" to be added is not in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Add do not match\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_tpo_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_tpo_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    TPOID,\r\n",
					"    Category,\r\n",
					"    Type,\r\n",
					"    Procedure,\r\n",
					"    LPAID,\r\n",
					"    AppealRefNumber,\r\n",
					"    CaseReference,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    VisitType,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    RevivedDate,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    EventDate,\r\n",
					"    DecisionDate,\r\n",
					"    Decision,\r\n",
					"    OpenOrClosed,\r\n",
					"    Linked,\r\n",
					"    CaseOfficerName,\r\n",
					"    CaseOfficerLogin,\r\n",
					"    ProcessingState,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_tpo_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    TPOID,\r\n",
					"    Category,\r\n",
					"    Type,\r\n",
					"    Procedure,\r\n",
					"    LPAID,\r\n",
					"    AppealRefNumber,\r\n",
					"    CaseReference,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    VisitType,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    RevivedDate,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    EventDate,\r\n",
					"    DecisionDate,\r\n",
					"    Decision,\r\n",
					"    OpenOrClosed,\r\n",
					"    Linked,\r\n",
					"    CaseOfficerName,\r\n",
					"    CaseOfficerLogin,\r\n",
					"    ProcessingState,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_tpo_dim\r\n",
					"WHERE AppealRefNumber IN (SELECT AppealRefNumber FROM casework_tpo_dim_new WHERE TPOID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM casework_tpo_dim_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_tpo_dim_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    TPOID,\n",
					"    Category,\n",
					"    Type,\n",
					"    Procedure,\n",
					"    LPAID,\n",
					"    AppealRefNumber,\n",
					"    CaseReference,\n",
					"    RejectedOrWithdrawn,\n",
					"    AppealWithdrawnDate,\n",
					"    VisitType,\n",
					"    Appellant,\n",
					"    SiteAddressPostcode,\n",
					"    RevivedDate,\n",
					"    ValidDate,\n",
					"    StartDate,\n",
					"    EventDate,\n",
					"    DecisionDate,\n",
					"    Decision,\n",
					"    OpenOrClosed,\n",
					"    Linked,\n",
					"    CaseOfficerName,\n",
					"    CaseOfficerLogin,\n",
					"    ProcessingState,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM casework_tpo_dim_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_tpo_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_tpo_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_tpo_dim AS Target\r\n",
					"USING casework_tpo_dim_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.TPOID = Target.TPOID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (\r\n",
					"        TPOID,\r\n",
					"        Category,\r\n",
					"        Type,\r\n",
					"        Procedure,\r\n",
					"        LPAID,\r\n",
					"        AppealRefNumber,\r\n",
					"        CaseReference,\r\n",
					"        RejectedOrWithdrawn,\r\n",
					"        AppealWithdrawnDate,\r\n",
					"        VisitType,\r\n",
					"        Appellant,\r\n",
					"        SiteAddressPostcode,\r\n",
					"        RevivedDate,\r\n",
					"        ValidDate,\r\n",
					"        StartDate,\r\n",
					"        EventDate,\r\n",
					"        DecisionDate,\r\n",
					"        Decision,\r\n",
					"        OpenOrClosed,\r\n",
					"        Linked,\r\n",
					"        CaseOfficerName,\r\n",
					"        CaseOfficerLogin,\r\n",
					"        ProcessingState,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive\r\n",
					"    )\r\n",
					"    VALUES (\r\n",
					"        Source.TPOID,\r\n",
					"        Source.Category,\r\n",
					"        Source.Type,\r\n",
					"        Source.Procedure,\r\n",
					"        Source.LPAID,\r\n",
					"        Source.AppealRefNumber,\r\n",
					"        Source.CaseReference,\r\n",
					"        Source.RejectedOrWithdrawn,\r\n",
					"        Source.AppealWithdrawnDate,\r\n",
					"        Source.VisitType,\r\n",
					"        Source.Appellant,\r\n",
					"        Source.SiteAddressPostcode,\r\n",
					"        Source.RevivedDate,\r\n",
					"        Source.ValidDate,\r\n",
					"        Source.StartDate,\r\n",
					"        Source.EventDate,\r\n",
					"        Source.DecisionDate,\r\n",
					"        Source.Decision,\r\n",
					"        Source.OpenOrClosed,\r\n",
					"        Source.Linked,\r\n",
					"        Source.CaseOfficerName,\r\n",
					"        Source.CaseOfficerLogin,\r\n",
					"        Source.ProcessingState,\r\n",
					"        Source.SourceSystemID,\r\n",
					"        Source.IngestionDate,\r\n",
					"        Source.ValidTo,\r\n",
					"        Source.RowID,\r\n",
					"        Source.IsActive\r\n",
					"    )\r\n",
					";   \r\n",
					""
				],
				"execution_count": 17
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_tpo_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_tpo_dim\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.casework_tpo_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY TPOID NULLS LAST) AS TPOID,\r\n",
					"    Category,\r\n",
					"    Type,\r\n",
					"    Procedure,\r\n",
					"    LPAID,\r\n",
					"    AppealRefNumber,\r\n",
					"    CaseReference,\r\n",
					"    RejectedOrWithdrawn,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    VisitType,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    RevivedDate,\r\n",
					"    ValidDate,\r\n",
					"    StartDate,\r\n",
					"    EventDate,\r\n",
					"    DecisionDate,\r\n",
					"    Decision,\r\n",
					"    OpenOrClosed,\r\n",
					"    Linked,\r\n",
					"    CaseOfficerName,\r\n",
					"    CaseOfficerLogin,\r\n",
					"    ProcessingState,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.casework_tpo_dim;\r\n",
					""
				],
				"execution_count": 18
			}
		]
	}
}