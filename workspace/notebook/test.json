{
	"name": "test",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1313b3a0-2a3c-4e8e-a85b-09daccc3c2d4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pyspark\r\n",
					"from pyspark.sql import SparkSession, Row\r\n",
					"from pyspark.sql.types import StructType,StructField, StringType\r\n",
					"\r\n",
					"spark = SparkSession.builder.getOrCreate()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"jsonschema = '{\"fields\": [{\"metadata\": {}, \"name\": \"Process_Date\", \"nullable\": false, \"type\": \"timestamp\"}, {\"metadata\": {}, \"name\": \"Filepath\", \"nullable\": false, \"type\": \"string\"}, {\"metadata\": {}, \"name\": \"File_Modified_Date\", \"nullable\": false, \"type\": \"timestamp\"}]}'\r\n",
					"import json\r\n",
					"schema = StructType.fromJson(json.loads(jsonschema))\r\n",
					"import datetime\r\n",
					"new_raw_file = spark.createDataFrame([], schema)\r\n",
					"new_raw_file.write.option(\"mergeSchema\", \"false\").format('delta').save(\"abfss://odw-raw@pinsstodwdevuks9h80mb.dfs.core.windows.net/test/\")\r\n",
					"spark.sql(\"CREATE TABLE {0}.{1} USING DELTA LOCATION '{2}'\".format(\"odw_test_db\",\"abdullah_temp\",\"abfss://odw-raw@pinsstodwdevuks9h80mb.dfs.core.windows.net/test/\"))"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"listex = [[datetime.datetime.now(), \"example\", datetime.datetime.now()]]\r\n",
					"df2 = spark.createDataFrame(listex, schema)\r\n",
					"df2.write.format(\"delta\").mode(\"append\").saveAsTable(f\"odw_test_db.abdullah_temp\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}