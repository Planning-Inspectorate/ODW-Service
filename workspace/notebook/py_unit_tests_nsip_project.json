{
	"name": "py_unit_tests_nsip_project",
	"properties": {
		"folder": {
			"name": "utils/unit-tests"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "66f0f309-1611-42b9-895b-d345bb1484e2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import json\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql import DataFrame\r\n",
					"from pyspark.sql import functions as F\r\n",
					"import pprint"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"entity_name: str = 'nsip-project'\r\n",
					"std_db_name: str = 'odw_standardised_db'\r\n",
					"hrm_db_name: str = 'odw_harmonised_db'\r\n",
					"curated_db_name: str = 'odw_curated_db'\r\n",
					"std_table_name: str = 'sb_nsip_project'\r\n",
					"horizon_std_table_name: str = 'horizon_nsip_data'\r\n",
					"hrm_table_name: str = 'sb_nsip_project'\r\n",
					"hrm_table_final: str = 'nsip_project'\r\n",
					"curated_table_name: str = 'nsip_project'\r\n",
					"\r\n",
					"## new curated database\r\n",
					"curated_db_migration_name: str = 'odw_curated_migration_db'\r\n",
					"curated_table_migration_name: str = 'nsip_project'\r\n",
					"primary_key: str = 'caseId'\r\n",
					"migration_primary_key:str = 'caseReference'"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#keep track of the exitCodes, if the exit code is not zero then we've had failures, we flip the boolean\n",
					"exitCode: int = 0"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"storage_account: str = mssparkutils.notebook.run('/utils/py_utils_get_storage_account')\r\n",
					"path_to_orchestration_file: str = \"abfss://odw-config@\"+storage_account+\"orchestration/orchestration.json\""
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data_model_columns = [\r\n",
					"    \"caseId\",\r\n",
					"\t\t\"caseReference\",\r\n",
					"\t\t\"projectName\",\r\n",
					"\t\t\"projectDescription\",\r\n",
					"\t\t\"decision\",\r\n",
					"\t\t\"publishStatus\",\r\n",
					"\t\t\"sector\",\r\n",
					"\t\t\"projectType\",\r\n",
					"\t\t\"sourceSystem\",\r\n",
					"\t\t\"stage\",\r\n",
					"\t\t\"projectLocation\",\r\n",
					"\t\t\"projectEmailAddress\",\r\n",
					"\t\t\"regions\",\r\n",
					"\t\t\"transboundary\",\r\n",
					"\t\t\"easting\",\r\n",
					"\t\t\"northing\",\r\n",
					"\t\t\"datePINSFirstNotifiedOfProject\",\r\n",
					"\t\t\"dateProjectAppearsOnWebsite\",\r\n",
					"\t\t\"anticipatedSubmissionDateNonSpecific\",\r\n",
					"\t\t\"anticipatedDateOfSubmission\",\r\n",
					"\t\t\"screeningOpinionSought\",\r\n",
					"\t\t\"screeningOpinionIssued\",\r\n",
					"\t\t\"scopingOpinionSought\",\r\n",
					"\t\t\"scopingOpinionIssued\",\r\n",
					"\t\t\"section46Notification\",\r\n",
					"\t\t\"dateOfDCOSubmission\",\r\n",
					"\t\t\"deadlineForAcceptanceDecision\",\r\n",
					"\t\t\"dateOfDCOAcceptance\",\r\n",
					"\t\t\"dateOfNonAcceptance\",\r\n",
					"\t\t\"dateOfRepresentationPeriodOpen\",\r\n",
					"\t\t\"dateOfRelevantRepresentationClose\",\r\n",
					"\t\t\"extensionToDateRelevantRepresentationsClose\",\r\n",
					"\t\t\"dateRRepAppearOnWebsite\",\r\n",
					"\t\t\"dateIAPIDue\",\r\n",
					"\t\t\"rule6LetterPublishDate\",\r\n",
					"\t\t\"preliminaryMeetingStartDate\",\r\n",
					"\t\t\"notificationDateForPMAndEventsDirectlyFollowingPM\",\r\n",
					"\t\t\"notificationDateForEventsDeveloper\",\r\n",
					"\t\t\"dateSection58NoticeReceived\",\r\n",
					"\t\t\"confirmedStartOfExamination\",\r\n",
					"\t\t\"rule8LetterPublishDate\",\r\n",
					"\t\t\"deadlineForCloseOfExamination\",\r\n",
					"\t\t\"dateTimeExaminationEnds\",\r\n",
					"\t\t\"stage4ExtensionToExamCloseDate\",\r\n",
					"\t\t\"deadlineForSubmissionOfRecommendation\",\r\n",
					"\t\t\"dateOfRecommendations\",\r\n",
					"\t\t\"stage5ExtensionToRecommendationDeadline\",\r\n",
					"\t\t\"deadlineForDecision\",\r\n",
					"\t\t\"confirmedDateOfDecision\",\r\n",
					"\t\t\"stage5ExtensionToDecisionDeadline\",\r\n",
					"\t\t\"jRPeriodEndDate\",\r\n",
					"\t\t\"dateProjectWithdrawn\",\r\n",
					"\t\t\"operationsLeadId\",\r\n",
					"\t\t\"operationsManagerId\",\r\n",
					"\t\t\"caseManagerId\",\r\n",
					"\t\t\"nsipOfficerIds\",\r\n",
					"\t\t\"nsipAdministrationOfficerIds\",\r\n",
					"\t\t\"leadInspectorId\",\r\n",
					"\t\t\"inspectorIds\",\r\n",
					"\t\t\"environmentalServicesOfficerId\",\r\n",
					"\t\t\"legalOfficerId\",\r\n",
					"\t\t\"applicantId\",\r\n",
					"\t\t\"welshLanguage\",\r\n",
					"\t\t\"mapZoomLevel\",\r\n",
					"\t\t\"secretaryOfState\",\r\n",
					"\t\t\"migrationStatus\",\r\n",
					"\t\t\"dateOfReOpenRelevantRepresentationStart\",\r\n",
					"\t\t\"dateOfReOpenRelevantRepresentationClose\"\r\n",
					"\t\t\"isMaterialChange\"\r\n",
					"\t]"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run /utils/unit-tests/py_unit_tests_functions"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sb_std_schema = create_spark_schema(std_db_name, entity_name)\r\n",
					"sb_std_table_schema = spark.table(f\"{std_db_name}.{std_table_name}\").schema\r\n",
					"sb_hrm_schema = create_spark_schema(hrm_db_name, entity_name)\r\n",
					"sb_hrm_table_schema = spark.table(f\"{hrm_db_name}.{hrm_table_name}\").schema\r\n",
					"curated_schema = create_spark_schema(curated_db_name, entity_name)\r\n",
					"curated_table_schema = spark.table(f\"{curated_db_name}.{curated_table_name}\").schema"
				],
				"execution_count": 38
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Compare schemas"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"std_schema_correct: bool = test_compare_schemas(sb_std_schema, sb_std_table_schema)\r\n",
					"exitCode += int(not std_schema_correct)\r\n",
					"print(f\"Service bus standardised schema correct: {std_schema_correct}\\nTable: {std_db_name}.{std_table_name}\\nDifferences shown above (if any)\")\r\n",
					"hrm_schema_correct: bool = test_compare_schemas(sb_hrm_schema, sb_hrm_table_schema)\r\n",
					"exitCode += int(not hrm_schema_correct)\r\n",
					"print(f\"Service bus harmonised schema correct: {hrm_schema_correct}\\nTable: {hrm_db_name}.{hrm_table_name}\\nDifferences shown above (if any)\")\r\n",
					"cur_schema_correct: bool = test_compare_schemas(curated_schema, curated_table_schema)\r\n",
					"print(f\"Curated schema correct: {cur_schema_correct}\\nTable: {curated_db_name}.{curated_table_name}\\nDifferences shown above (if any)\")\r\n",
					"exitCode += int(not cur_schema_correct)"
				],
				"execution_count": 39
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Compare service bus standardised with harmonised\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"standardised_count, harmonised_count, counts_match = test_std_same_rows_hrm(std_table_name, hrm_table_name)\r\n",
					"print(f\"Standardised Count: {standardised_count: ,}\\nHarmonised Count: {harmonised_count: ,}\\nCounts match: {counts_match}\")\r\n",
					"\r\n",
					"if standardised_count > harmonised_count:\r\n",
					"    exitCode += 1\r\n",
					"    print(f\"{standardised_count - harmonised_count} rows from Standardised are missing in Harmonised.\" )\r\n",
					"    differentiate_std_and_hrm(f\"{std_db_name}.{std_table_name}\", f\"{hrm_db_name}.{hrm_table_name}\", data_model_columns)"
				],
				"execution_count": 40
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Compare final harmonised table (if combined with Horizon) with curated table\r\n",
					"Comparing where IsActive = Y in harmonised = curated row count"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"harmonised_final_count, curated_count, counts_match = test_curated_row_count(hrm_table_final, curated_table_name)\r\n",
					"print(f\"Harmonised Final Count: {harmonised_final_count: ,}\\nCurated Count: {curated_count: ,}\\nCounts match: {counts_match}\")\r\n",
					"exitCode += int(not counts_match)"
				],
				"execution_count": 41
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### The below tests are for the curated_migration_db table\r\n",
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Test 1: Check curated layer only has horizon data and unique records (distinct primary ids)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"no_horizon_records, total_curated_count, distinct_curated_count, counts_match = test_curated_unique_hzn_only(curated_db_migration_name, curated_table_migration_name, primary_key)\r\n",
					"print(f\"There is no other records than Horizon: {no_horizon_records:}\\nCurated Count: {total_curated_count: ,}\\nDistinct Curated Count: {distinct_curated_count:,}\\nCounts match: {counts_match}\")\r\n",
					"exitCode += int(not counts_match)"
				],
				"execution_count": 46
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Test 2: Check we are not loosing caseids, only rows, as we are getting the latest ingestionDate"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"if test_hrm_to_curated_no_dropping_primary_ids_only_records(hrm_db_name, hrm_table_final, curated_db_migration_name, curated_table_migration_name, primary_key):\n",
					"    pass\n",
					"else:\n",
					"    print(\"Test - Horizon to curated no caseids are dropped : Failed\")\n",
					"    exitCode += 1"
				],
				"execution_count": 47
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Test 3: Test No CaseReference is dropped from horizon"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"if test_no_project_from_horizon_dropped(std_db_name, curated_db_migration_name, horizon_std_table_name, curated_table_migration_name, migration_primary_key, migration_primary_key):\n",
					"    pass\n",
					"else:\n",
					"    print(\"test_no_project_from_horizon_dropped : Failed\")\n",
					"    exitCode += 1"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"mssparkutils.notebook.exit(exitCode)"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"SELECT\n",
					"    *\n",
					"FROM\n",
					"    odw_standardised_db.sb_nsip_project as sb\n",
					"    LEFT OUTER JOIN odw_harmonised_db.sb_nsip_project as hrm\n",
					"        ON sb.caseId = hrm.caseId\n",
					"        AND sb.ingested_datetime = hrm.IngestionDate\n",
					"WHERE\n",
					"    hrm.caseId Is null\n",
					"LIMIT 1"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Trace service bus data from standardised to curated\r\n",
					"We need to make sure the data has loaded through correctly. To do this efficiently, we will select a sample record and check that the data is maintained as it moves through the medallian architecture."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM odw_standardised_db.sb_nsip_project"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM odw_standardised_db.sb_nsip_project \r\n",
					"WHERE caseid = 100000913 order by ingested_datetime desc"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM odw_harmonised_db.sb_nsip_project WHERE caseid = 100000913 \r\n",
					"Order by IngestionDate desc"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### Check array fields are aggregated properly\r\n",
					"Go and find examples"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    horizoncasenumber,\r\n",
					"    COUNT(DISTINCT region)\r\n",
					"FROM\r\n",
					"    odw_standardised_db.horizon_nsip_data\r\n",
					"WHERE\r\n",
					"    ingested_datetime = (SELECT MAX(ingested_datetime) FROM odw_standardised_db.horizon_nsip_data)\r\n",
					"GROUP BY\r\n",
					"    horizoncasenumber\r\n",
					"HAVING\r\n",
					"    COUNT(DISTINCT region) > 1\r\n",
					"ORDER BY\r\n",
					"    2 DESC"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM \r\n",
					"    odw_standardised_db.horizon_nsip_data"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### Trace Horizon data to Harmonised"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT DISTINCT\r\n",
					"    caseCreatedDate\r\n",
					"    ,projectName\r\n",
					"    ,projectstatus\r\n",
					"    ,examtimetablepublishstatus\r\n",
					"    ,sector\r\n",
					"    ,projectType\r\n",
					"    ,stage\r\n",
					"    ,caseReference\r\n",
					"    ,horizoncasenumber\r\n",
					"    ,projectLocation\r\n",
					"    ,projectEmailAddress\r\n",
					"    ,twitteraccountname\r\n",
					"    ,region\r\n",
					"    ,easting\r\n",
					"    ,northing\r\n",
					"    ,transboundary\r\n",
					"    ,welshLanguage\r\n",
					"    ,exasize\r\n",
					"    ,mapZoomLevel\r\n",
					"    ,projectDescription\r\n",
					"    ,sos\r\n",
					"    ,tene\r\n",
					"    ,anticipatedDateOfSubmission\r\n",
					"    ,dateProjectAppearsOnWebsite\r\n",
					"    ,dateOfDCOAcceptance\r\n",
					"    ,anticipatedDateOfSubmission\r\n",
					"    ,dateOfDCOSubmission\r\n",
					"    ,dateOfRepresentationPeriodOpen\r\n",
					"    ,dateOfRelevantRepresentationClose\r\n",
					"    ,dateRRepAppearOnWebsite\r\n",
					"    ,confirmedStartOfExamination\r\n",
					"    ,dateTimeExaminationEnds\r\n",
					"    ,stage4ExtensionToExamCloseDate\r\n",
					"    ,stage5ExtensionToRecommendationDeadline\r\n",
					"    ,dateOfRecommendations\r\n",
					"    ,confirmedDateOfDecision\r\n",
					"    ,stage5ExtensionToDecisionDeadline\r\n",
					"    ,dateProjectWithdrawn\r\n",
					"    ,section46Notification\r\n",
					"    ,datePINSFirstNotifiedOfProject\r\n",
					"    ,screeningOpinionSought\r\n",
					"    ,screeningOpinionIssued\r\n",
					"    ,scopingOpinionSought\r\n",
					"    ,scopingOpinionIssued\r\n",
					"    ,deadlineForAcceptanceDecision\r\n",
					"    ,dateSection58NoticeReceived\r\n",
					"    ,preliminaryMeetingStartDate\r\n",
					"    ,deadlineForCloseOfExamination\r\n",
					"    ,deadlineForSubmissionOfRecommendation\r\n",
					"    ,deadlineForDecision\r\n",
					"    ,jRPeriodEndDate\r\n",
					"    ,extensionToDateRelevantRepresentationsClose\r\n",
					"    ,summary\r\n",
					"    ,promotername\r\n",
					"    ,applicantfirstname\r\n",
					"    ,applicantlastname\r\n",
					"    ,addressLine1\r\n",
					"    ,addressLine2\r\n",
					"    ,addressTown\r\n",
					"    ,addressCounty\r\n",
					"    ,postcode\r\n",
					"    ,applicantemailaddress\r\n",
					"    ,applicantwebaddress\r\n",
					"    ,applicantphonenumber\r\n",
					"    ,applicantdescriptionofproject\r\n",
					"    ,casenodeid\r\n",
					"FROM\r\n",
					"    odw_standardised_db.horizon_nsip_data\r\n",
					"WHERE\r\n",
					"     horizoncasenumber = '3222228'"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    caseCreatedDate\r\n",
					"    ,projectName\r\n",
					"    ,publishStatus\r\n",
					"    ,examTimetablePublishStatus\r\n",
					"    ,sector\r\n",
					"    ,projectType\r\n",
					"    ,stage\r\n",
					"    ,caseReference\r\n",
					"    ,caseId\r\n",
					"    ,projectLocation\r\n",
					"    ,projectEmailAddress\r\n",
					"    ,twitteraccountname\r\n",
					"    ,regions\r\n",
					"    ,easting\r\n",
					"    ,northing\r\n",
					"    ,transboundary\r\n",
					"    ,welshLanguage\r\n",
					"    ,exasize\r\n",
					"    ,mapZoomLevel\r\n",
					"    ,projectDescription\r\n",
					"    ,secretaryOfState\r\n",
					"    ,tene\r\n",
					"    ,anticipatedDateOfSubmission\r\n",
					"    ,dateProjectAppearsOnWebsite\r\n",
					"    ,dateOfDCOAcceptance\r\n",
					"    ,anticipatedDateOfSubmission\r\n",
					"    ,dateOfDCOSubmission\r\n",
					"    ,dateOfRepresentationPeriodOpen\r\n",
					"    ,dateOfRelevantRepresentationClose\r\n",
					"    ,dateRRepAppearOnWebsite\r\n",
					"    ,confirmedStartOfExamination\r\n",
					"    ,dateTimeExaminationEnds\r\n",
					"    ,stage4ExtensionToExamCloseDate\r\n",
					"    ,stage5ExtensionToRecommendationDeadline\r\n",
					"    ,dateOfRecommendations\r\n",
					"    ,confirmedDateOfDecision\r\n",
					"    ,stage5ExtensionToDecisionDeadline\r\n",
					"    ,dateProjectWithdrawn\r\n",
					"    ,section46Notification\r\n",
					"    ,datePINSFirstNotifiedOfProject\r\n",
					"    ,screeningOpinionSought\r\n",
					"    ,screeningOpinionIssued\r\n",
					"    ,scopingOpinionSought\r\n",
					"    ,scopingOpinionIssued\r\n",
					"    ,deadlineForAcceptanceDecision\r\n",
					"    ,dateSection58NoticeReceived\r\n",
					"    ,preliminaryMeetingStartDate\r\n",
					"    ,deadlineForCloseOfExamination\r\n",
					"    ,deadlineForSubmissionOfRecommendation\r\n",
					"    ,deadlineForDecision\r\n",
					"    ,jRPeriodEndDate\r\n",
					"    ,extensionToDateRelevantRepresentationsClose\r\n",
					"    --,summary\r\n",
					"    ,promotername\r\n",
					"    ,applicantfirstname\r\n",
					"    ,applicantlastname\r\n",
					"    ,addressLine1\r\n",
					"    ,addressLine2\r\n",
					"    ,addressTown\r\n",
					"    ,addressCounty\r\n",
					"    ,postcode\r\n",
					"    ,applicantemailaddress\r\n",
					"    ,applicantwebaddress\r\n",
					"    ,applicantphonenumber\r\n",
					"    ,applicantdescriptionofproject\r\n",
					"    --,casenodeid ---casenodeid has been mapped as caseid\r\n",
					"    ,isMaterialChange\r\n",
					"    ,HorizonCaseNumber\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.nsip_project\r\n",
					"WHERE\r\n",
					"     HorizonCaseNumber = '3222228'\r\n",
					"     --caseid = '3222228'\r\n",
					"order BY\r\n",
					"    ingestiondate DESC"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Horizon and Service Bus data successfully combined and flags set appropriately"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    caseId\r\n",
					"    ,count(*)\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.nsip_project\r\n",
					"WHERE\r\n",
					"    ODTSourceSystem = 'Horizon'\r\n",
					"GROUP BY\r\n",
					"    caseId\r\n",
					"ORDER BY\r\n",
					"    2 desc"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    caseId\r\n",
					"    ,count(*)\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.nsip_project\r\n",
					"WHERE\r\n",
					"    ODTSourceSystem = 'ODT'\r\n",
					"GROUP BY\r\n",
					"    caseId\r\n",
					"ORDER BY\r\n",
					"    2 desc"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    *\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.nsip_project\r\n",
					"WHERE\r\n",
					"    caseid = '100000913'\r\n",
					"order BY\r\n",
					"    ingestiondate DESC"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### Data updated in curated correctly"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT\r\n",
					"    *\r\n",
					"FROM\r\n",
					"    odw_curated_db.nsip_project\r\n",
					"WHERE\r\n",
					"    caseid = '100000913'"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### **Dive into data: Example queries** "
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Example of caseids with multiple records in harmonised"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.nsip_project tbl_1\r\n",
					"where caseid in (3148455,3217867) and LOWER(SourceSystem) ='horizon'\r\n",
					"order by caseid"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Get the latest ingestionDate per primary id (caseid). Expected result: 1 row per primary id."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.nsip_project tbl_1\r\n",
					"where LOWER(SourceSystem)='horizon'  and IngestionDate = (select max(IngestionDate) from odw_harmonised_db.nsip_project tbl_2  WHERE tbl_1.caseid = tbl_2.caseid group by caseid) and caseid in (3148455,3217867)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Make sure there is not duplicate primary ids. Expected result: No result"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT caseid, COUNT(*)\r\n",
					"FROM odw_curated_migration_db.nsip_project\r\n",
					"GROUP BY caseid\r\n",
					"HAVING COUNT(*) > 1;"
				],
				"execution_count": null
			}
		]
	}
}