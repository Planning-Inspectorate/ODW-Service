{
	"name": "employee",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4cf0b754-396a-44cf-8aed-6bdcb9278e4c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (hr_record_fact) against the target (odw_curated_db.employee)\n",
					"- **New Data:** where an EmployeeID in the source does not exist as an EmployeeID in the target, data is inserted\n",
					"- **Updated data:** Comparison occurs on EmployeeID in source and EmployeeID in target where the row hash is different i.e. there is a change in one of the columns, data is updated\n",
					"- **Deleted data:** where an EmployeeID in the target exists but the same EmployeeID doesn't exist in the source, data is deleted\n",
					"\n",
					"## View employee_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW employee_new \r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"SELECT\r\n",
					"    T1.HRRecordID,\r\n",
					"    T1.EmployeeID,\r\n",
					"    T17.EmployeeNumber,\r\n",
					"    T1.CoCd,\r\n",
					"    T1.CompanyCode,\r\n",
					"    T2.FirstName,\r\n",
					"    T2.LastName,\r\n",
					"    T2.Gender,\r\n",
					"    T17.DOB,\r\n",
					"    T2.AddressLine1,\r\n",
					"    T2.AddressLine2,\r\n",
					"    T2.City,\r\n",
					"    T2.County,\r\n",
					"    T2.PostCode,\r\n",
					"    T2.EmailAddress,\r\n",
					"    T2.TelephoneNumberWork,\r\n",
					"    T2.CivilServiceStart,\r\n",
					"    T3.ContractCode,\r\n",
					"    T3.Description as ContractCodeDesc,\r\n",
					"    T3.ContractTypeCode,\r\n",
					"    T3.ContractType as ContractTypeCodeDesc,\r\n",
					"    T14.CostCenterCode, \r\n",
					"    T14.Description as CostCenterCodeDesc,\r\n",
					"    T2.DateToCurrentJob,\r\n",
					"    T2.EmploymentStatus,\r\n",
					"    T2.FixTermEndDate,\r\n",
					"    T2.FTE,\r\n",
					"    T2.WorkHours,\r\n",
					"    T2.AnnualSalary,\r\n",
					"    T2.PartTimeEmployee,\r\n",
					"    T2.LoanStartDate,\r\n",
					"    T2.LoanEndDate,\r\n",
					"    T4.LocationCode,\r\n",
					"    T4.Description as LocationCodeDesc,\r\n",
					"    T18.EmployeeNumber as ManagerEmployeeNumber,\r\n",
					"    T8.FirstName AS ManagerFirstName,\r\n",
					"    T8.LastName AS ManagerLastName,\r\n",
					"    T7.PositionCode as ManagerPositionCode,\r\n",
					"    T7.Description as ManagerPositionCodeDesc,\r\n",
					"    T2.OrgStartDate,\r\n",
					"    T9.OrganisationUnit,\r\n",
					"    T9.Description as OrganisationUnitDesc,\r\n",
					"    T10.PersonnelAreaCode,\r\n",
					"    T10.Description as PersonnelAreaCodeDesc,\r\n",
					"    T11.PersonnelSubAreaCode,\r\n",
					"    T11.Description as PersonnelSubAreaCodeDesc,\r\n",
					"    T12.PositionCode,\r\n",
					"    T12.Description as PositionCodeDesc,\r\n",
					"    T13.PSGroupCode,\r\n",
					"    T13.Description as PSGroupCodeDesc,\r\n",
					"    T2.SeniorityDate,\r\n",
					"    T2.ReasonForAction,\r\n",
					"    NULL as AnnualLeaveStartDate,\r\n",
					"    T2.Currency,\r\n",
					"    T2.DateToSubstantiveGrade,\r\n",
					"    T15.EEGrp as EmployeeGroup,\r\n",
					"    T15.EmployeeGroup as EmployeeGroupDesc,\r\n",
					"    T16.PayrollAreaCode,\r\n",
					"    T16.Description as PayrollAreaCodeDesc,\r\n",
					"    md5(concat( \r\n",
					"      IFNULL(T1.HRRecordID,'.'),\r\n",
					"      IFNULL(T1.EmployeeID,'.'),\r\n",
					"      IFNULL(T17.EmployeeNumber,'.'),\r\n",
					"      IFNULL(T1.CoCd,'.'),\r\n",
					"      IFNULL(T1.CompanyCode,'.'),\r\n",
					"      IFNULL(T2.FirstName,'.'),\r\n",
					"      IFNULL(T2.LastName,'.'),\r\n",
					"      IFNULL(T2.Gender,'.'),\r\n",
					"      IFNULL(T17.DOB,'.'),\r\n",
					"      IFNULL(T2.AddressLine1,'.'),\r\n",
					"      IFNULL(T2.AddressLine2,'.'),\r\n",
					"      IFNULL(T2.City,'.'),\r\n",
					"      IFNULL(T2.County,'.'),\r\n",
					"      IFNULL(T2.PostCode,'.'),\r\n",
					"      IFNULL(T2.EmailAddress,'.'),\r\n",
					"      IFNULL(T2.TelephoneNumberWork,'.'),\r\n",
					"      IFNULL(T2.CivilServiceStart,'.'),\r\n",
					"      IFNULL(T3.ContractCode,'.'),\r\n",
					"      IFNULL(T3.Description,'.'),\r\n",
					"      IFNULL(T3.ContractTypeCode,'.'),\r\n",
					"      IFNULL(T3.ContractType,'.'),\r\n",
					"      IFNULL(T14.CostCenterCode,'.'),\r\n",
					"      IFNULL(T14.Description,'.'),\r\n",
					"      IFNULL(T2.DateToCurrentJob,'.'),\r\n",
					"      IFNULL(T2.EmploymentStatus,'.'),\r\n",
					"      IFNULL(T2.FixTermEndDate,'.'),\r\n",
					"      IFNULL(T2.FTE,'.'),\r\n",
					"      IFNULL(T2.WorkHours,'.'),\r\n",
					"      IFNULL(T2.AnnualSalary,'.'),\r\n",
					"      IFNULL(T2.PartTimeEmployee,'.'),\r\n",
					"      IFNULL(T2.LoanStartDate,'.'),\r\n",
					"      IFNULL(T2.LoanEndDate,'.'),\r\n",
					"      IFNULL(T4.LocationCode,'.'),\r\n",
					"      IFNULL(T4.Description,'.'),\r\n",
					"      IFNULL(T18.EmployeeNumber,'.'),\r\n",
					"      IFNULL(T8.FirstName,'.'),\r\n",
					"      IFNULL(T8.LastName,'.'),\r\n",
					"      IFNULL(T7.PositionCode,'.'),\r\n",
					"      IFNULL(T7.Description,'.'),\r\n",
					"      IFNULL(T2.OrgStartDate,'.'),\r\n",
					"      IFNULL(T9.OrganisationUnit,'.'),\r\n",
					"      IFNULL(T9.Description,'.'),\r\n",
					"      IFNULL(T10.PersonnelAreaCode,'.'),\r\n",
					"      IFNULL(T10.Description,'.'),\r\n",
					"      IFNULL(T11.PersonnelSubAreaCode,'.'),\r\n",
					"      IFNULL(T11.Description,'.'),\r\n",
					"      IFNULL(T12.PositionCode,'.'),\r\n",
					"      IFNULL(T12.Description,'.'),\r\n",
					"      IFNULL(T13.PSGroupCode,'.'),\r\n",
					"      IFNULL(T13.Description,'.'),\r\n",
					"      IFNULL(T2.SeniorityDate,'.'),\r\n",
					"      IFNULL(T2.SeniorityDate,'.'),\r\n",
					"      IFNULL(T2.ReasonForAction,'.'),\r\n",
					"      IFNULL(NULL,'.'),\r\n",
					"      IFNULL(T2.Currency,'.'),\r\n",
					"      IFNULL(T2.DateToSubstantiveGrade,'.'),\r\n",
					"      IFNULL(T15.EEGrp,'.'),\r\n",
					"      IFNULL(T15.EmployeeGroup,'.'),\r\n",
					"      IFNULL(T16.PayrollAreaCode,'.'),\r\n",
					"      IFNULL(T16.Description,'.')\r\n",
					"    )) as RowID, \r\n",
					"    'Y' as IsActive\r\n",
					"\r\n",
					"\r\n",
					"FROM odw_harmonised_db.hr_record_fact T1\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_dim T2 ON T1.EmployeeID = T2.EmployeeID and T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_contract_dim T3 ON T1.ContractID = T3.ContractID and T3.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_pins_location_dim T4 ON T1.LocationID = T4.LocationID and T4.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_hr_hierarchy_dim T5 ON T1.EmployeeID = T5.EmployeeID and T5.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_record_fact T6 ON T5.ManagerEmployeeID = T6.EmployeeID and T6.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_position_dim T7 ON T6.PositionID = T7.PositionID and T7.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_dim T8 ON T6.ManagerEmployeeID = T8.EmployeeID and T8.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_organisation_unit_dim T9 ON T1.OrganisationalUnitID = T9.OrganisationUnitID and T9.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_area_dim T10 ON T1.PersonnelAreaID = T10.PersonnelAreaID and T10.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_personnel_sub_area_dim T11 ON T1.PersonnelSubAreaID = T11.PersonnelSubAreaID and T11.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_position_dim T12 ON T1.PositionID = T12.PositionID and T12.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_payband_dim T13 ON T1.PaybandID = T13.PaybandID and T13.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_costcenter_dim T14 ON T1.CostCenterID = T14.CostCenterID and T14.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employeegroup_dim T15 ON T1.EmployeeGroupID = T15.EmployeeGroupID AND T15.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_payroll_area_dim T16 ON T1.PayrollAreaID = T16.PayrollAreaID and T16.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_fact T17 ON T1.EmployeeID = T17.EmployeeID and T17.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_fact T18 ON T6.EmployeeID = T18.EmployeeID and T18.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE T1.IsActive = 'Y'\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View employee_new is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the Business Key (i.e. EmployeeID), update rows\n",
					"- **WHEN NOT MATCHED** ON the business key, insert rows\n",
					"## Table odw_harmonised.employee_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- merge into employee table\n",
					"\n",
					"MERGE INTO odw_curated_db.employee AS Target\n",
					"USING employee_new AS Source\n",
					"\n",
					"ON Source.EmployeeID = Target.EmployeeID\n",
					"\n",
					"WHEN MATCHED AND Source.RowID<>Target.RowID\n",
					"    THEN\n",
					"    UPDATE SET *\n",
					"WHEN NOT MATCHED\n",
					"    THEN\n",
					"    INSERT *"
				],
				"execution_count": 5
			}
		]
	}
}