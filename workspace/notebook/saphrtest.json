{
	"name": "saphrtest",
	"properties": {
		"folder": {
			"name": "archive"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a58e1a8c-c0fa-4816-b7a3-f502260cc0c9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import json\n",
					"from datetime import datetime\n",
					"\n",
					"# Dictionary to store all counts\n",
					"all_counts = {}\n",
					"execution_time = datetime.now().isoformat()\n",
					"\n",
					"try:\n",
					"    # Define all tables to count\n",
					"    tables_to_count = {\n",
					"        \"dim_date\": \"odw_harmonised_db.live_dim_date\",\n",
					"        \"sap_hr_weekly\":\"odw_harmonised_db.load_sap_hr_weekly\",\n",
					"        \"load_sap_hr\": \"odw_harmonised_db.load_sap_hr_monthly\",\n",
					"        \"hist_sap_hr\": \"odw_harmonised_db.hist_SAP_HR\",\n",
					"        \"sap_hr_leavers\": \"odw_harmonised_db.load_sap_hr_leavers\", \n",
					"        \"fact_absence_data\": \"odw_harmonised_db.sap_hr_fact_absence_all\",\n",
					"        \"absence_data\": \"odw_harmonised_db.sap_hr_absence_all\",\n",
					"        \"absence_data_sickness\": \"odw_harmonised_db.sap_hr_fact_absence_sickness\",\n",
					"        \"protected_data\": \"odw_harmonised_db.sap_hr_protected_data\",\n",
					"        # Add all your other tables here\n",
					"    }\n",
					"    \n",
					"    # Get counts for all tables\n",
					"    for table_name, table_path in tables_to_count.items():\n",
					"        try:\n",
					"            count = spark.sql(f\"SELECT COUNT(*) as count FROM {table_path}\").collect()[0]['count']\n",
					"            all_counts[table_name] = {\n",
					"                \"count\": count,\n",
					"                \"table_path\": table_path,\n",
					"                \"status\": \"success\",\n",
					"                \"timestamp\": execution_time\n",
					"            }\n",
					"            print(f\"✓ {table_name}: {count} records\")\n",
					"        except Exception as e:\n",
					"            all_counts[table_name] = {\n",
					"                \"count\": 0,\n",
					"                \"table_path\": table_path,\n",
					"                \"status\": \"error\",\n",
					"                \"error\": str(e),\n",
					"                \"timestamp\": execution_time\n",
					"            }\n",
					"            print(f\"✗ {table_name}: Error - {str(e)}\")\n",
					"    \n",
					"    # Return as JSON string\n",
					"    result_json = json.dumps(all_counts)\n",
					"    mssparkutils.notebook.exit(result_json)\n",
					"    \n",
					"except Exception as e:\n",
					"    error_result = {\n",
					"        \"status\": \"failed\",\n",
					"        \"error\": str(e),\n",
					"        \"timestamp\": execution_time\n",
					"    }\n",
					"    mssparkutils.notebook.exit(json.dumps(error_result))"
				],
				"execution_count": null
			}
		]
	}
}