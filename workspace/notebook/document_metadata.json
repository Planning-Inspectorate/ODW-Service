{
	"name": "document_metadata",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "de8a8f85-0db6-41ee-9854-65d9d78b06db"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- CREATE OR REPLACE VIEW odw_curated_db.vw_document_metadata\n",
					"\n",
					"-- AS\n",
					"\n",
					"SELECT DISTINCT \n",
					"MD.DataId\t                            AS\tdocumentId,\n",
					"CAST(MD.CaseNodeId AS INT)\t            AS\tcaseId,\n",
					"MD.caseReference\t                    AS\tcaseRef,\n",
					"MD.documentReference\t                AS\tdocumentReference,\n",
					"CAST(MD.Version AS INT)                 AS\tversion,\n",
					"AMD.examinationRefNo\t                AS\texaminationRefNo,\n",
					"MD.Name\t                                AS\tfilename,\n",
					"MD.Name\t                                AS\toriginalFilename,\n",
					"CAST(MD.DataSize AS INT)\t            AS\tsize,\n",
					"AMD.mime\t                            AS\tmime,\n",
					"AMD.DocumentURI\t                        AS\tdocumentURI,\n",
					"AMD.DocumentURI\t\t                    AS\tpublishedDocumentURI,\n",
					"NULL                                    AS path,\n",
					"MD.virusCheckStatus\t                    AS\tvirusCheckStatus,\n",
					"AMD.fileMd5\t                            AS\tfileMD5,\n",
					"MD.CreateDate\t                        AS\tdateCreated,\n",
					"MD.ModifyDate\t                        AS\tlastModified,\n",
					"LOWER(MD.CaseworkType)\t                AS\tcaseType,\n",
					"CASE\n",
					"    WHEN AMD.redactedStatus = ' '    \n",
					"    THEN NULL\n",
					"    ELSE AMD.redactedStatus                \n",
					"END                                     AS\tredactedStatus,\n",
					"REPLACE(\n",
					"    LOWER(MD.PublishedStatus),\n",
					"    ' ',\n",
					"    '_')                 \t            AS\tpublishedStatus,\n",
					"CAST(MD.DatePublished AS DATE)\t        AS\tdatePublished,\n",
					"MD.DocumentType\t                        AS\tdocumentType,\n",
					"CASE\n",
					"    WHEN AMD.securityClassification = ' '\n",
					"    THEN NULL\n",
					"    ELSE AMD.securityClassification\n",
					"END\t                                    AS\tsecurityClassification,\n",
					"MD.SourceSystem\t                        AS\tsourceSystem,\n",
					"CASE\n",
					"    WHEN AMD.origin  = ' '\n",
					"    THEN NULL\n",
					"    ELSE AMD.origin\n",
					"END\t                                    AS\torigin,\n",
					"AMD.owner                               AS\towner,\n",
					"MD.Author\t                            AS\tauthor,\n",
					"MD.Representative\t                    AS\trepresentative,\n",
					"MD.DocumentDescription\t                AS\tdescription,\n",
					"LOWER(MD.DocumentCaseStage)\t            AS\tdocumentCaseStage,\n",
					"MD.Filter1\t                            AS\tfilter1,\n",
					"MD.Filter2\t                            AS\tfilter2,\n",
					"MD.ParentID\t                            AS\thorizonFolderId,\n",
					"'NULL'\t                                AS\ttranscriptId\t\n",
					"\n",
					"FROM odw_harmonised_db.document_meta_data   AS MD\n",
					"JOIN odw_harmonised_db.aie_document_data    AS AMD\n",
					"    ON MD.DataID = AMD.DocumentID\n",
					"WHERE AMD.IsActive = 'Y' \n",
					"    AND MD.IsActive = 'Y'"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"drop table if exists odw_curated_db.document_meta_data;\")\n",
					""
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TABLE odw_curated_db.document_meta_data\r\n",
					"\r\n",
					"USING delta\r\n",
					"\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT \r\n",
					"* \r\n",
					"FROM odw_curated_db.vw_document_metadata"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT * FROM odw_curated_db.document_meta_data"
				],
				"execution_count": 33
			}
		]
	}
}