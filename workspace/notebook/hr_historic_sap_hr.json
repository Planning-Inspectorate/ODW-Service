{
	"name": "hr_historic_sap_hr",
	"properties": {
		"folder": {
			"name": "odw-harmonised/SAP-HR"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "617580a1-2715-4e99-8ea5-6e9e15752285"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW staff_cost\n",
					"\n",
					"     AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    h.pers_no as staff_number,\n",
					"    h.ps_group as grade, \n",
					"\th.annual_salary as salary, \n",
					"    cast(cast(h.annual_salary as float)/(365.0*7.4) as float) as hourly_rate,\n",
					"    le.ExpectedFrom as report_month_end_date,\n",
					"    le.LeaveDaysPerYear as leave_allowance,\n",
					"    cast(case sign(datediff(day, cast(le.LeaveYearStart as date), le.expectedfrom))\n",
					"\t\t\t\twhen 1 then le.LeaveYearStart\n",
					"\t\t\t\twhen 0 then le.LeaveYearStart\n",
					"\t\t\t\telse dateadd(year, -1, le.LeaveYearStart)\n",
					"\t\t\tend as date) as leave_start_date,\n",
					"    le.leavedaysperyear*(1 - abs((((datediff(day, cast(\n",
					"                                                    CASE sign(datediff(day, cast(le.leaveyearstart AS date), le.expectedfrom))\n",
					"                                                    WHEN 1 THEN\n",
					"                                                    le.leaveyearstart\n",
					"                                                    ELSE dateadd(year, -1, le.leaveyearstart)\n",
					"                                                    END\n",
					"                                                    AS date), le.expectedfrom))/364.25)%1))) AS expected_leave_hours_remaining\n",
					"    \n",
					"FROM odw_standardised_db.hr_saphr h\n",
					"LEFT JOIN odw_harmonised_db.hr_leave_entitlement_dim le on h.pers_no = le.EmployeeID\n",
					"WHERE\n",
					"    le.AbsenceQuotaType = 'Annual Leave / P&P';"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW carried_over\n",
					"    \n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    h.pers_no as staff_number,\n",
					"    case sign(le.LeaveDaysPerYear - 148)\n",
					"        when 1 then 148\n",
					"        when 0 then 148\n",
					"        else le.LeaveDaysPerYear\n",
					"    end as carried_over_hours\n",
					"\n",
					"FROM odw_standardised_db.hr_saphr h\n",
					"LEFT JOIN odw_harmonised_db.hr_leave_entitlement_dim le on h.pers_no = le.EmployeeID\n",
					"WHERE\n",
					"    le.AbsenceQuotaType = 'Brought Forward';"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW leave_taken\n",
					"\n",
					"     AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    f.EmployeeID as staff_number,\n",
					"    sum(f.Hours) as leave_hours_taken\n",
					"\n",
					"FROM odw_harmonised_db.hr_absence_dim f \n",
					"LEFT JOIN staff_cost sc ON f.EmployeeID = sc.staff_number\n",
					"WHERE \n",
					"    f.AbsenceType IN ('PT Annual / P&P Leave', 'FT Annual / Priv Leave')\n",
					"    AND \n",
					"    f.AbsenceStartDate  BETWEEN sc.leave_start_date AND sc.report_month_end_date\n",
					"GROUP BY \n",
					"    f.EmployeeID;"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW sap_hr_historic\n",
					"\n",
					"     AS\n",
					"\t \n",
					"SELECT DISTINCT\n",
					"\th.pers_no,\n",
					"\th.first_name,\n",
					"\th.last_name,\n",
					"\th.employee_no,\n",
					"\th.cocd,\n",
					"\th.company_code,\n",
					"\th.pa,\n",
					"\th.personnel_area,\n",
					"\th.psubarea,\n",
					"\th.personnel_subarea,\n",
					"\th.org_unit,\n",
					"\th.organizational_unit,\n",
					"\th.organizational_key1,\n",
					"\th.organizational_key2,\n",
					"\th.workc,\n",
					"\th.work_contract,\n",
					"\th.ct,\n",
					"\th.contract_type,\n",
					"\th.ps_group,\n",
					"\th.pay_band_description,\n",
					"\th.fte,\n",
					"\th.wk_hrs,\n",
					"\th.indicator_part_time_employee,\n",
					"\th.s,\n",
					"\th.employment_status,\n",
					"\th.gender_key,\n",
					"\th.tra_start_date,\n",
					"\th.tra_end_date,\n",
					"\th.tra_status,\n",
					"\th.tra_grade,\n",
					"\th.prev_persno,\n",
					"\th.actr,\n",
					"\th.reason_for_action,\n",
					"\th.position,\n",
					"\th.position_1,\n",
					"\th.cost_ctr,\n",
					"\th.cost_centre,\n",
					"\th.civil_service_start,\n",
					"\th.date_to_current_job,\n",
					"\th.seniority_date,\n",
					"\th.date_to_subst_grade,\n",
					"\th.pers_no_1,\n",
					"\th.name_of_manager_om,\n",
					"\th.manager_position,\n",
					"\th.manager_position_text,\n",
					"\th.counter_sign_manager,\n",
					"\th.loc,\n",
					"\th.location,\n",
					"\th.org_start_date,\n",
					"\th.fix_term_end_date,\n",
					"\th.loan_start_date,\n",
					"\th.loan_end_date,\n",
					"\th.eegrp,\n",
					"\th.employee_group,\n",
					"\th.annual_salary,\n",
					"\th.curr,\n",
					"\th.ni_number,\n",
					"\th.birth_date,\n",
					"\th.age_of_employee,\n",
					"\th.eo,\n",
					"\th.ethnic_origin,\n",
					"\th.nid,\n",
					"\th.rel,\n",
					"\th.religious_denomination_key,\n",
					"\th.sxo,\n",
					"\th.wage_type,\n",
					"\th.employee_subgroup,\n",
					"\th.loa_abs_type,\n",
					"\th.loa_absence_type_text,\n",
					"\th.scheme_reference,\n",
					"\th.pension_scheme_name,\n",
					"\th.disability_code,\n",
					"\th.disability_text,\n",
					"\th.disability_code_description,\n",
					"\th.parea,\n",
					"\th.payroll_area,\n",
					"\th.assignment_number,\n",
					"\th.fte_2,\n",
					"\tsc.report_month_end_date as Report_MonthEnd_Date,\n",
					"\tcoalesce(sc.leave_allowance, 0) + coalesce(co.carried_over_hours, 0) as leave_entitlement_hrs,\n",
					"\tcoalesce(lt.leave_hours_taken, 0) as leave_taken_hrs,\n",
					"\tround((coalesce(sc.leave_allowance, 0) + coalesce(co.carried_over_hours, 0) - coalesce(sc.expected_leave_hours_remaining, 0)  - coalesce(lt.leave_hours_taken, 0)), 2) as leave_remaining_hours,\n",
					"\tcoalesce(round(sc.expected_leave_hours_remaining, 2), 0) as leave_remaining_prorata_hours\n",
					"\t--,coalesce(round((coalesce(sc.leave_allowance, 0) + coalesce(co.carried_over_hours, 0) - coalesce(sc.expected_leave_hours_remaining, 0)  - coalesce(lt.leave_hours_taken, 0)) * (sc.hourly_rate) * (1 + p.Total), 2),0.0) as cost_untaken_al\n",
					"from odw_standardised_db.hr_saphr h\n",
					"\tleft join staff_cost sc on h.pers_no = sc.staff_number\n",
					"\tleft join carried_over co on sc.staff_number = co.staff_number\n",
					"\tleft join leave_taken lt on sc.staff_number = lt.staff_number\n",
					"\tleft join odw_standardised_db.bis_pension_ernic_rates p on sc.grade = p.Grade\n",
					"where \n",
					"\tright(cast(cast(sc.report_month_end_date as date) as varchar(10)),5) in ('01-31','02-28','02-29','03-31','04-30','05-31','06-30','07-31','08-31','09-30','10-31','11-30','12-31')"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_historic_sap_hr_new \r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of PersNo and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN h.pers_no IS NULL\r\n",
					"        THEN T5.HistoricSAPHRID\r\n",
					"        ELSE NULL\r\n",
					"    END as HistoricSAPHRID, -- surrogate\r\n",
					"    h.pers_no\tAS\tPersNo\t,\r\n",
					"    h.first_name\tAS\tFirstName\t,\r\n",
					"    h.last_name\tAS\tLastName\t,\r\n",
					"    h.employee_no\tAS\tEmployeeNo\t,\r\n",
					"    h.cocd\tAS\tCocd\t,\r\n",
					"    h.company_code\tAS\tCompanyCode\t,\r\n",
					"    h.pa\tAS\tPa\t,\r\n",
					"    h.personnel_area\tAS\tPersonnelArea\t,\r\n",
					"    h.psubarea\tAS\tPsubarea\t,\r\n",
					"    h.personnel_subarea\tAS\tPersonnelSubarea\t,\r\n",
					"    h.org_unit\tAS\tOrgUnit\t,\r\n",
					"    h.organizational_unit\tAS\tOrganizationalUnit\t,\r\n",
					"    h.organizational_key1\tAS\tOrganizationalKey1\t,\r\n",
					"    h.organizational_key2\tAS\tOrganizationalKey2\t,\r\n",
					"    h.workc\tAS\tWorkc\t,\r\n",
					"    h.work_contract\tAS\tWorkContract\t,\r\n",
					"    h.ct\tAS\tCt\t,\r\n",
					"    h.contract_type\tAS\tContractType\t,\r\n",
					"    h.ps_group\tAS\tPsGroup\t,\r\n",
					"    h.pay_band_description\tAS\tPayBandDescription\t,\r\n",
					"    h.fte\tAS\tFte\t,\r\n",
					"    h.wk_hrs\tAS\tWkHrs\t,\r\n",
					"    h.indicator_part_time_employee\tAS\tIndicatorPartTimeEmployee\t,\r\n",
					"    h.s\tAS\tS\t,\r\n",
					"    h.employment_status\tAS\tEmploymentStatus\t,\r\n",
					"    h.gender_key\tAS\tGenderKey\t,\r\n",
					"    h.tra_start_date\tAS\tTraStartDate\t,\r\n",
					"    h.tra_end_date\tAS\tTraEndDate\t,\r\n",
					"    h.tra_status\tAS\tTraStatus\t,\r\n",
					"    h.tra_grade\tAS\tTraGrade\t,\r\n",
					"    h.prev_persno\tAS\tPrevPersno\t,\r\n",
					"    h.actr\tAS\tActr\t,\r\n",
					"    h.reason_for_action\tAS\tReasonForAction\t,\r\n",
					"    h.position\tAS\tPosition\t,\r\n",
					"    h.position_1\tAS\tPosition1\t,\r\n",
					"    h.cost_ctr\tAS\tCostCtr\t,\r\n",
					"    h.cost_centre\tAS\tCostCentre\t,\r\n",
					"    h.civil_service_start\tAS\tCivilServiceStart\t,\r\n",
					"    h.date_to_current_job\tAS\tDateToCurrentJob\t,\r\n",
					"    h.seniority_date\tAS\tSeniorityDate\t,\r\n",
					"    h.date_to_subst_grade\tAS\tDateToSubstGrade\t,\r\n",
					"    h.pers_no_1\tAS\tPersNo1\t,\r\n",
					"    h.name_of_manager_om\tAS\tNameOfManagerOm\t,\r\n",
					"    h.manager_position\tAS\tManagerPosition\t,\r\n",
					"    h.manager_position_text\tAS\tManagerPositionText\t,\r\n",
					"    h.counter_sign_manager\tAS\tCounterSignManager\t,\r\n",
					"    h.loc\tAS\tLoc\t,\r\n",
					"    h.location\tAS\tLocation\t,\r\n",
					"    h.org_start_date\tAS\tOrgStartDate\t,\r\n",
					"    h.fix_term_end_date\tAS\tFixTermEndDate\t,\r\n",
					"    h.loan_start_date\tAS\tLoanStartDate\t,\r\n",
					"    h.loan_end_date\tAS\tLoanEndDate\t,\r\n",
					"    h.eegrp\tAS\tEegrp\t,\r\n",
					"    h.employee_group\tAS\tEmployeeGroup\t,\r\n",
					"    h.annual_salary\tAS\tAnnualSalary\t,\r\n",
					"    h.curr\tAS\tCurr\t,\r\n",
					"    h.ni_number\tAS\tNiNumber\t,\r\n",
					"    h.birth_date\tAS\tBirthDate\t,\r\n",
					"    h.age_of_employee\tAS\tAgeOfEmployee\t,\r\n",
					"    h.eo\tAS\tEo\t,\r\n",
					"    h.ethnic_origin\tAS\tEthnicOrigin\t,\r\n",
					"    h.nid\tAS\tNid\t,\r\n",
					"    h.rel\tAS\tRel\t,\r\n",
					"    h.religious_denomination_key\tAS\tReligiousDenominationKey\t,\r\n",
					"    h.sxo\tAS\tSxo\t,\r\n",
					"    h.wage_type\tAS\tWageType\t,\r\n",
					"    h.employee_subgroup\tAS\tEmployeeSubgroup\t,\r\n",
					"    h.loa_abs_type\tAS\tLoaAbsType\t,\r\n",
					"    h.loa_absence_type_text\tAS\tLoaAbsenceTypeText\t,\r\n",
					"    h.scheme_reference\tAS\tSchemeReference\t,\r\n",
					"    h.pension_scheme_name\tAS\tPensionSchemeName\t,\r\n",
					"    h.disability_code\tAS\tDisabilityCode\t,\r\n",
					"    h.disability_text\tAS\tDisabilityText\t,\r\n",
					"    h.disability_code_description\tAS\tDisabilityCodeDescription\t,\r\n",
					"    h.parea\tAS\tParea\t,\r\n",
					"    h.payroll_area\tAS\tPayrollArea\t,\r\n",
					"    h.assignment_number\tAS\tAssignmentNumber\t,\r\n",
					"    h.fte_2\tAS\tFte2\t,\r\n",
					"    h.Report_MonthEnd_Date\tAS\tReportMonthendDate\t,\r\n",
					"    h.leave_entitlement_hrs\tAS\tLeaveEntitlementHrs\t,\r\n",
					"    h.leave_taken_hrs\tAS\tLeaveTakenHrs\t,\r\n",
					"    h.leave_remaining_hours\tAS\tLeaveRemainingHours\t,\r\n",
					"    h.leave_remaining_prorata_hours\tAS\tLeaveRemainingProrataHours,\r\n",
					"\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(IFNULL(h.pers_no,'.'),IFNULL(h.employee_no,'.'))) AS RowID,\r\n",
					"    'Y' AS IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN h.pers_no = T5.PersNo AND md5(concat(IFNULL(h.pers_no,'.'),IFNULL(h.employee_no,'.'))) <> T5.RowID-- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T5.PersNo IS NULL -- new comment\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN h.pers_no IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData, \r\n",
					"    T5.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM sap_hr_historic h\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"SAP HR\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.hr_historic_sap_hr T5 ON h.pers_no = T5.PersNo AND T5.IsActive = 'Y'\r\n",
					"\r\n",
					"\r\n",
					"WHERE\r\n",
					"    (\r\n",
					"        \r\n",
					"        -- flags new data        \r\n",
					"        (   CASE\r\n",
					"                WHEN h.pers_no = T5.PersNo AND md5(concat(IFNULL(h.pers_no,'.'),IFNULL(h.employee_no,'.'))) <> T5.RowID    -- same employee, changed data\r\n",
					"                THEN 'Y'\r\n",
					"                WHEN T5.PersNo IS NULL -- new employee\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        (   CASE\r\n",
					"                WHEN h.pers_no IS NULL\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END = 'Y' )\r\n",
					"    )\r\n",
					";"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_historic_sap_hr_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"\r\n",
					"Select \r\n",
					"    HistoricSAPHRID, -- surrogate \r\n",
					"    PersNo\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    Cocd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    Pa\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    Psubarea\t,\r\n",
					"    PersonnelSubarea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    Workc\t,\r\n",
					"    WorkContract\t,\r\n",
					"    Ct\t,\r\n",
					"    ContractType\t,\r\n",
					"    PsGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    Fte\t,\r\n",
					"    WkHrs\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TraStartDate\t,\r\n",
					"    TraEndDate\t,\r\n",
					"    TraStatus\t,\r\n",
					"    TraGrade\t,\r\n",
					"    PrevPersno\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    Eegrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NiNumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    Eo\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    Nid\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    Parea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    Fte2\t,\r\n",
					"    ReportMonthendDate\t,\r\n",
					"    LeaveEntitlementHrs\t,\r\n",
					"    LeaveTakenHrs\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From hr_historic_sap_hr_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"\r\n",
					"SELECT\r\n",
					"    HistoricSAPHRID, -- surrogate \r\n",
					"    PersNo\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    Cocd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    Pa\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    Psubarea\t,\r\n",
					"    PersonnelSubarea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    Workc\t,\r\n",
					"    WorkContract\t,\r\n",
					"    Ct\t,\r\n",
					"    ContractType\t,\r\n",
					"    PsGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    Fte\t,\r\n",
					"    WkHrs\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TraStartDate\t,\r\n",
					"    TraEndDate\t,\r\n",
					"    TraStatus\t,\r\n",
					"    TraGrade\t,\r\n",
					"    PrevPersno\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    Eegrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NiNumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    Eo\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    Nid\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    Parea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    Fte2\t,\r\n",
					"    ReportMonthendDate\t,\r\n",
					"    LeaveEntitlementHrs\t,\r\n",
					"    LeaveTakenHrs\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.hr_historic_sap_hr\r\n",
					"WHERE PersNo IN (SELECT PersNo FROM hr_historic_sap_hr_new WHERE HistoricSAPHRID IS NULL) AND IsActive = 'Y';"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.hr_historic_sap_hr AS Target\r\n",
					"USING hr_historic_sap_hr_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.PersNo = Target.PersNo\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;   "
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new HistoricSAPHRID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.hr_historic_sap_hr\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY HistoricSAPHRID NULLS LAST) AS HistoricSAPHRID, -- surrogate key\r\n",
					"    PersNo\t,\r\n",
					"    FirstName\t,\r\n",
					"    LastName\t,\r\n",
					"    EmployeeNo\t,\r\n",
					"    Cocd\t,\r\n",
					"    CompanyCode\t,\r\n",
					"    Pa\t,\r\n",
					"    PersonnelArea\t,\r\n",
					"    Psubarea\t,\r\n",
					"    PersonnelSubarea\t,\r\n",
					"    OrgUnit\t,\r\n",
					"    OrganizationalUnit\t,\r\n",
					"    OrganizationalKey1\t,\r\n",
					"    OrganizationalKey2\t,\r\n",
					"    Workc\t,\r\n",
					"    WorkContract\t,\r\n",
					"    Ct\t,\r\n",
					"    ContractType\t,\r\n",
					"    PsGroup\t,\r\n",
					"    PayBandDescription\t,\r\n",
					"    Fte\t,\r\n",
					"    WkHrs\t,\r\n",
					"    IndicatorPartTimeEmployee\t,\r\n",
					"    S\t,\r\n",
					"    EmploymentStatus\t,\r\n",
					"    GenderKey\t,\r\n",
					"    TraStartDate\t,\r\n",
					"    TraEndDate\t,\r\n",
					"    TraStatus\t,\r\n",
					"    TraGrade\t,\r\n",
					"    PrevPersno\t,\r\n",
					"    Actr\t,\r\n",
					"    ReasonForAction\t,\r\n",
					"    Position\t,\r\n",
					"    Position1\t,\r\n",
					"    CostCtr\t,\r\n",
					"    CostCentre\t,\r\n",
					"    CivilServiceStart\t,\r\n",
					"    DateToCurrentJob\t,\r\n",
					"    SeniorityDate\t,\r\n",
					"    DateToSubstGrade\t,\r\n",
					"    PersNo1\t,\r\n",
					"    NameOfManagerOm\t,\r\n",
					"    ManagerPosition\t,\r\n",
					"    ManagerPositionText\t,\r\n",
					"    CounterSignManager\t,\r\n",
					"    Loc\t,\r\n",
					"    Location\t,\r\n",
					"    OrgStartDate\t,\r\n",
					"    FixTermEndDate\t,\r\n",
					"    LoanStartDate\t,\r\n",
					"    LoanEndDate\t,\r\n",
					"    Eegrp\t,\r\n",
					"    EmployeeGroup\t,\r\n",
					"    AnnualSalary\t,\r\n",
					"    Curr\t,\r\n",
					"    NiNumber\t,\r\n",
					"    BirthDate\t,\r\n",
					"    AgeOfEmployee\t,\r\n",
					"    Eo\t,\r\n",
					"    EthnicOrigin\t,\r\n",
					"    Nid\t,\r\n",
					"    Rel\t,\r\n",
					"    ReligiousDenominationKey\t,\r\n",
					"    Sxo\t,\r\n",
					"    WageType\t,\r\n",
					"    EmployeeSubgroup\t,\r\n",
					"    LoaAbsType\t,\r\n",
					"    LoaAbsenceTypeText\t,\r\n",
					"    SchemeReference\t,\r\n",
					"    PensionSchemeName\t,\r\n",
					"    DisabilityCode\t,\r\n",
					"    DisabilityText\t,\r\n",
					"    DisabilityCodeDescription\t,\r\n",
					"    Parea\t,\r\n",
					"    PayrollArea\t,\r\n",
					"    AssignmentNumber\t,\r\n",
					"    Fte2\t,\r\n",
					"    ReportMonthendDate\t,\r\n",
					"    LeaveEntitlementHrs\t,\r\n",
					"    LeaveTakenHrs\t,\r\n",
					"    LeaveRemainingHours\t,\r\n",
					"    LeaveRemainingProrataHours\t,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.hr_historic_sap_hr;"
				],
				"execution_count": 27
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Checking for day and hours in absenence_dim which = 0 "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM odw_harmonised_db.hr_absence_dim WHERE Days = 0 AND Hours = 0;"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT AbsenceID, \r\n",
					"EmployeeID, \r\n",
					"Days, \r\n",
					"Hours,\r\n",
					"CalendarDays,\r\n",
					"AbsenceStartDate,\r\n",
					"AbsenceEndDate,\r\n",
					"CASE \r\n",
					"    WHEN DAYS = 0 AND Hours = 0 THEN 7.4 * CalendarDays\r\n",
					"    ELSE NULL\r\n",
					"END AS BankHolidaysHours\r\n",
					"FROM odw_harmonised_db.hr_absence_dim WHERE EmployeeID=00500002 AND Days = 0 AND Hours = 0;\r\n",
					"\r\n",
					""
				],
				"execution_count": 8
			}
		]
	}
}