{
	"name": "Inspector_address",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "66479dcc-0bd3-4a9e-b2c4-7f7fe5d3e5ac"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Entity Name :  Inspector Address !"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\n",
					"from pyspark.sql.types import StructType, StructField, StringType, TimestampType\n",
					"from pyspark.sql.functions import col, trim, regexp_replace\n",
					"\n",
					"# Initialize Spark Session\n",
					"spark = SparkSession.builder.appName(\"LakeDB_Transfer\").getOrCreate()"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"drop table odw_harmonised_db.inspector_address"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"editable": false,
					"run_control": {
						"frozen": true
					}
				},
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.inspector_addresses_monthly (\n",
					"\n",
					"StaffNumber\tstring,\n",
					"StreetandHouseNumber\tstring,\n",
					"2ndAddressLine\tstring,\n",
					"City\tstring,\n",
					"District\tstring,\n",
					"PostalCode\tstring,\n",
					"RegionStateProvinceCount\tstring,\n",
					"StartDate\tstring,\n",
					"EndDate\tstring,\n",
					"ChartingOfficer\tstring,\n",
					"ChartingOfficerforInspector\tstring,\n",
					"SubsPSgroup\tstring,\n",
					"TelNo\tstring,\n",
					"PersonalMobile\tstring,\n",
					"WorkMobile\tstring,\n",
					"Chngdon\tstring\n",
					"\n",
					" )\n",
					"    USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"drop table odw_harmonised_db.inspector_address"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE odw_harmonised_db.inspector_address (\n",
					"    StaffNumber STRING,\n",
					"    StreetandHouseNumber STRING,\n",
					"    2ndAddressLine STRING,\n",
					"    City STRING,\n",
					"    District STRING,\n",
					"    PostalCode STRING,\n",
					"    RegionStateProvinceCount STRING,\n",
					"    StartDate TIMESTAMP,\n",
					"    EndDate TIMESTAMP,\n",
					"    ChartingOfficer STRING,\n",
					"    ChartingOfficerforInspector STRING,\n",
					"    SubsPSgroup STRING,\n",
					"    TelNo STRING,\n",
					"    PersonalMobile STRING,\n",
					"    WorkMobile STRING,\n",
					"    Chngdon DATE,\n",
					"    ValHashKey STRING\n",
					")\n",
					"USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select * from odw_harmonised_db.inspector_address"
				],
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Waiting to work on date columns fix"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Delete existing data from the table\n",
					"DELETE FROM odw_harmonised_db.inspector_address;\n",
					"\n",
					"-- Insert new data into the table\n",
					"INSERT INTO odw_harmonised_db.inspector_address\n",
					"(\n",
					"    StaffNumber,\n",
					"    StreetandHouseNumber,\n",
					"    2ndAddressLine,\n",
					"    City,\n",
					"    District,\n",
					"    PostalCode,\n",
					"    RegionStateProvinceCount,\n",
					"    StartDate,\n",
					"    EndDate,\n",
					"    ChartingOfficer,\n",
					"    ChartingOfficerforInspector,\n",
					"    SubsPSgroup,\n",
					"    TelNo,\n",
					"    PersonalMobile,\n",
					"    WorkMobile,\n",
					"    Chngdon,\n",
					"    ValHashKey\n",
					")\n",
					"SELECT \n",
					"    StaffNumber,\n",
					"    StreetandHouseNumber,\n",
					"    2ndAddressLine,\n",
					"    City,\n",
					"    District,\n",
					"    PostalCode,\n",
					"    RegionStateProvinceCount,\n",
					" to_date(StartDate, 'MM/dd/yy'),  \n",
					" to_date(EndDate, 'Mm/d/yy') ,\n",
					"    CASE \n",
					"        WHEN LEN(ChartingOfficer) = 6 THEN\n",
					"            CASE \n",
					"                WHEN ChartingOfficer LIKE '50%' THEN CONCAT('00', ChartingOfficer)\n",
					"                WHEN ChartingOfficer LIKE '42%' THEN CONCAT('50', ChartingOfficer)\n",
					"                ELSE ChartingOfficer\n",
					"            END\n",
					"        WHEN LEN(ChartingOfficer) = 8 THEN ChartingOfficer\n",
					"        ELSE ChartingOfficer\n",
					"    END AS ChartingOfficer,\n",
					"    ChartingOfficerforInspector,\n",
					"    SubsPSgroup,\n",
					"    TelNo,\n",
					"    NULL AS PersonalMobile,\n",
					"    WorkMobile,\n",
					"    MAX(Chngdon) AS Chngdon,\n",
					"    NULL AS ValHashKey  -- Add the missing column\n",
					"FROM odw_standardised_db.inspector_addresses_monthly t1\n",
					"WHERE t1.StartDate = (\n",
					"    SELECT MAX(t2.StartDate)\n",
					"    FROM odw_standardised_db.inspector_addresses_monthly t2\n",
					"    WHERE t2.StaffNumber = t1.StaffNumber\n",
					")\n",
					"GROUP BY\n",
					"    StaffNumber,\n",
					"    StreetandHouseNumber,\n",
					"    2ndAddressLine,\n",
					"    City,\n",
					"    District,\n",
					"    PostalCode,\n",
					"    RegionStateProvinceCount,\n",
					"    StartDate,\n",
					"    EndDate,\n",
					"    ChartingOfficer,\n",
					"    ChartingOfficerforInspector,\n",
					"    SubsPSgroup,\n",
					"    TelNo,\n",
					"    PersonalMobile,\n",
					"    WorkMobile;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%%sql\n",
					"\n",
					"Update odw_harmonised_db.inspector_address\n",
					"\tset ValHashKey=\n",
					"\t\thashbytes('MD5',\n",
					"\t\t\tconcat_ws('|',\n",
					"\t\t\t    StaffNumber,\n",
					"\t\t\t\tStreetandHouseNumber,\n",
					"\t\t\t\t2ndAddressLine,\n",
					"\t\t\t\tCity,\n",
					"\t\t\t\tDistrict,\n",
					"\t\t\t\tPostalCode,\n",
					"\t\t\t\tRegionStateProvinceCount,\n",
					"\t\t\t\tStartDate ,\n",
					"\t\t\t\tEndDate,\n",
					"\t\t\t\tChartingOfficer,\n",
					"\t\t\t\tChartingOfficerforInspector,\n",
					"\t\t\t\tSubsPSgroup,\n",
					"\t\t\t\tTelNo,\n",
					"\t\t\t\tPersonalMobile,\n",
					"\t\t\t\tWorkMobile,\n",
					"\t\t\t\tChngdon\n",
					") )\n",
					"\t\t\t\t;"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select * from odw_harmonised_db.inspector_address;"
				],
				"execution_count": 31
			}
		]
	}
}