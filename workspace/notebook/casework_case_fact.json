{
	"name": "casework_case_fact",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6e463069-0f01-4069-be12-cbd818ab6fe8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_case_fact is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_case_fact table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_case_fact_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.CaseReference IS NULL\r\n",
					"        THEN T3.CaseFactID\r\n",
					"        ELSE NULL\r\n",
					"    END as CaseFactID,\r\n",
					"    T1.CaseReference,\r\n",
					"    T4.AdditionalFieldsID,\r\n",
					"    T5.EventID,\r\n",
					"    T6.InspectorCasesID,\r\n",
					"    T7.NSIPProjectInfoInternalID AS ProjectInfoInternalID,\r\n",
					"    T1.CasesInfoID,\r\n",
					"    T8.CaseDatesID,\r\n",
					"    T9.CaseOfficerAdditionalDetailsID,\r\n",
					"    T10.NSIPRedactionsID,\r\n",
					"    T11.CommentsID,\r\n",
					"    T12.DocumentsID,\r\n",
					"    T13.ReadingCaseID,\r\n",
					"    T14.CasemarkingID,\r\n",
					"    T15.OutcomeReferenceID,\r\n",
					"    T11.State,\r\n",
					"    T11.Type,\r\n",
					"    T16.AllAppealsID,\r\n",
					"    T17.AllAppealsAdditionalDataID,\r\n",
					"    T1.AppealRefNumber,\r\n",
					"    Appellant,                  -FLAG\r\n",
					"    T7.AddressLine1 AS SiteAddress1,\r\n",
					"    T7.AddressLine2 AS SiteAddress2,\r\n",
					"    T7.AddressTown AS SiteTown,\r\n",
					"    SiteCounty,                 -FLAG\r\n",
					"    T7.AddressCounty AS SiteCountry,\r\n",
					"    T7.PostCode AS SitePostCode,\r\n",
					"    AbeyanceEndDate,            -FLAG\r\n",
					"    Name,                       -FLAG   \r\n",
					"    EnglandWalesIndicator,      -FLAG\r\n",
					"    T18.SpecialistCoastalAccessID,\r\n",
					"    T19.SpecialistEnvironmentID,\r\n",
					"    T20.SpecialistHighCourtID,\r\n",
					"    T21.SpecialistCaseStringID,\r\n",
					"    T22.SpecialistCaseDatesID,\r\n",
					"    T23.SpecialistRechargeID,\r\n",
					"    T24.SpecialistPurchaseNoticeID,\r\n",
					"    T25.CommonLandID,\r\n",
					"    T26.SpecialistModifcationsID\r\n",
					"    T27.ApplicationSubTypeCaseNameID,\r\n",
					"    T28.DecisionIssuesID,\r\n",
					"    T29.AdvertDetailsID,\r\n",
					"    T30.EnforcementGroundsID,\r\n",
					"    T31.SpecialCircumstanceID,\r\n",
					"    T32.SpecialismID\r\n",
					"    T33.ExaminationTimetableID,\r\n",
					"    T34.NSIPRelevantRepresentationID\r\n",
					"    T35.ContactInformationID\r\n",
					"    IsNSIP      \r\n",
					"    IsAppeal\r\n",
					"    IsApplication\r\n",
					"    IsGreenAppeal\r\n",
					"\r\n",
					"    \r\n",
					"    T2.SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(IFNULL(T1.CaseReference,'.'), IFNULL(T1.CaseReference,'.'), IFNULL(T1.standardpriority,'.'),IFNULL(T1.importantinformation,'.'))) as RowID, -- this hash should contain all the defining fields, so needs to be done\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.CaseReference = T3.CaseReference AND  md5(concat(IFNULL(T1.CaseReference,'.'), IFNULL(T1.CaseReference,'.'), IFNULL(T1.standardpriority,'.'),IFNULL(T1.importantinformation,'.'))) <> T3.RowID   -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.CaseReference IS NULL -- new AppealRef\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.CaseReference IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData, \r\n",
					"    T3.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_harmonised_db.casework_case_info_dim T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_case_fact T3 ON T1.CaseReference = T3.CaseReference AND T3.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_additional_fields_dim T4 ON T1.CaseReference = T4.CaseReference AND T4.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_event_dim T5 ON T1.CaseReference = T5.CaseReference AND T5.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_inspector_case_dim T6 ON T1.CaseReference = T6.CaseReference AND T6.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_nsip_project_info_internal_dim T7 ON T1.CaseReference = T5.CaseReference AND T5.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_case_dates_dim T8 ON T1.CaseReference = T8.CaseReference AND T8.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_case_officer_additional_details_dim T9 ON T1.CaseReference = T9.CaseReference AND T9.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_nsip_redactions_dim T10 ON T1.CaseReference = T10.CaseReference AND T10.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.checkmark_comments_dim T11 ON T1.CaseReference = T11.CaseReference AND T11.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.checkmark_documents_dim T12 ON T1.CaseReference = T12.CaseReference AND T12.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.checkmark_casemaking_dim T13 ON T1.CaseReference = T13.CaseReference AND T13.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.checkmark_reading_case_dim T14 ON T1.CaseReference = T14.CaseReference AND T14.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.checkmark_casemarking_fact T15 ON T1.CaseReference = T15.CaseReference AND T15.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_all_appeals_dim T16 ON T1.AppealRefNumber = T16.AppealRefNumber AND T16.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_all_appeals_additional_fields_dim T17 ON T1.AppealRefNumber = T17.AppealRefNumber AND T17.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_coastal_access_dim T18 ON T1.AppealRefNumber = T18.AppealRefNumber AND T18.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_environment_dim T19 ON T1.AppealRefNumber = T19.AppealRefNumber AND T19.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_high_court_dim T20 ON T1.AppealRefNumber = T20.AppealRefNumber AND T20.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_case_string_dim T21 ON T1.AppealRefNumber = T21.AppealRefNumber AND T21.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_case_dates_dim T22 ON T1.AppealRefNumber = T22.AppealRefNumber AND T22.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_recharge_dim T23 ON T1.AppealRefNumber = T23.AppealRefNumber AND T23.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_purchase_notice_dim T24 ON T1.AppealRefNumber = T24.AppealRefNumber AND T24.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_common_land_dim T25 ON T1.AppealRefNumber = T25.AppealRefNumber AND T25.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialist_modifications_dim T26 ON T1.AppealRefNumber = T26.AppealRefNumber AND T26.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_application_sub_type_case_name_dim T27 ON T1.AppealRefNumber = T27.AppealRefNumber AND T27.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_decision_issue_dim T28 ON T1.AppealRefNumber = T28.AppealRefNumber AND T28.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_advert_details_dim T29 ON T1.AppealRefNumber = T29.AppealRefNumber AND T29.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_enforcement_grounds_dim T30 ON T1.AppealRefNumber = T30.AppealRefNumber AND T30.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_special_circumstance_dim T31 ON T1.AppealRefNumber = T31.AppealRefNumber AND T31.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_specialism_dim T32 ON T1.AppealRefNumber = T32.AppealRefNumber AND T32.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_nsip_examination_timetable T33 ON T1.CaseReference = T33.CaseReference AND T33.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_nsip_relevant_representation_dim T34 ON T1.CaseReference = T34.CaseReference AND T34.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_contact_information_dim T35 ON T1.CaseReference = T35.CaseReference AND T35.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_decision_issue_dim T35 ON T1.CaseReference = T35.CaseReference AND T35.IsActive = 'Y'\r\n",
					"\r\n",
					"\r\n",
					"WHERE\r\n",
					"    (\r\n",
					"        -- flags new data        \r\n",
					"        (   CASE\r\n",
					"                WHEN T1.CaseReference = T3.CaseReference AND md5(concat(IFNULL(T1.CaseReference,'.'), IFNULL(T1.CaseReference,'.'), IFNULL(T1.standardpriority,'.'),IFNULL(T1.importantinformation,'.'))) <> T3.RowID  -- same employee, changed data\r\n",
					"                THEN 'Y'\r\n",
					"                WHEN T3.CaseReference IS NULL -- new PositionCode\r\n",
					"                THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"            END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        (   CASE\r\n",
					"                WHEN T1.CaseReference IS NULL\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END = 'Y' )\r\n",
					"    );\r\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Source_Number = spark.sql(\"SELECT COUNT(*) AS Source_Number FROM pins_casework_all_appeals_grouped\")\r\n",
					"# Current_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Current_Number FROM odw_harmonised_db.casework_case_fact where IsActive = 'Y' \")\r\n",
					"# New_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS New_Data_Number FROM casework_case_fact WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Deleted_Data_Number FROM casework_case_fact WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Source_Number_Pandas = Source_Number.toPandas()\r\n",
					"# Current_Number_Pandas =  Current_Number.toPandas()\r\n",
					"# New_Data_Number_Pandas = New_Data_Number.toPandas()\r\n",
					"# Deleted_Data_Number_Pandas = Deleted_Data_Number.toPandas()\r\n",
					"\r\n",
					"# # checking if new total number of registers matches the previously loaded, plus New ones, minus Deleted ones\r\n",
					"# print(\"SET 1:\")\r\n",
					"# Total_Number = Source_Number_Pandas['Source_Number'].tolist() \r\n",
					"# Current_Loaded_Number = Current_Number_Pandas['Current_Number'].tolist() \r\n",
					"# New_Data_Number = New_Data_Number_Pandas['New_Data_Number'].tolist() \r\n",
					"# Deleted_Data_Number = Deleted_Data_Number_Pandas['Deleted_Data_Number'].tolist() \r\n",
					"\r\n",
					"# if Total_Number[0] != (Current_Loaded_Number[0] + New_Data_Number[0] - Deleted_Data_Number[0]):\r\n",
					"#     raise RuntimeError(\"Loading Number do not match\")\r\n",
					"# else:\r\n",
					"#     print(\"Loading number matches with existing codes plus new, minus deleted!\")\r\n",
					"\r\n",
					"# if New_Data_Number[0] > 1000:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many new codes\")\r\n",
					"# else:\r\n",
					"#     print(\"New data under tolerance levels\")\r\n",
					"\r\n",
					"# if Deleted_Data_Number[0] > 500:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many deleted codes\")\r\n",
					"# else:\r\n",
					"#     print(\"Unused codes under tolerance levels\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Current_Records = spark.sql(\"SELECT DISTINCT RowID AS Current_Records FROM odw_harmonised_db.casework_case_fact where IsActive = 'Y' \")\r\n",
					"# New_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS New_Data_Records FROM casework_case_fact WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS Deleted_Data_Records FROM casework_case_fact WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Current_Records_Pandas =  Current_Records.toPandas()\r\n",
					"# New_Data_Records_Pandas = New_Data_Records.toPandas()\r\n",
					"# Deleted_Data_Records_Pandas = Deleted_Data_Records.toPandas()\r\n",
					"\r\n",
					"# # checking if a deleted records are correcly flagged, not existing in the new data, but existing inpreviously loaded\r\n",
					"# print(\"TEST 2:\")\r\n",
					"\r\n",
					"# Current_Records = Current_Records_Pandas['Current_Records'].tolist() \r\n",
					"# Deleted_Records = Deleted_Data_Records_Pandas['Deleted_Data_Records'].tolist()\r\n",
					"# New_Records = New_Data_Records_Pandas['New_Data_Records'].tolist()\r\n",
					"\r\n",
					"# print(Current_Records)\r\n",
					"# print(Deleted_Records)\r\n",
					"# print(New_Records)\r\n",
					"\r\n",
					"# for i in Deleted_Records:\r\n",
					"#     if i in Current_Records: \r\n",
					"#         print(i + \" to be deleted is in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Delete do not match\")\r\n",
					"\r\n",
					"# for j in New_Records:\r\n",
					"#     if j not in Current_Records: \r\n",
					"#         print(j + \" to be added is not in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Add do not match\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_case_fact_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_case_fact_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    CaseFactID,\r\n",
					"    CaseReference,\r\n",
					"    CaseReference,\r\n",
					"    StandardPriority,\r\n",
					"    ImportantInformation,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_case_fact_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    CaseFactID,\r\n",
					"    CaseReference,\r\n",
					"    CaseReference,\r\n",
					"    StandardPriority,\r\n",
					"    ImportantInformation,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_case_fact\r\n",
					"WHERE CaseReference IN (SELECT CaseReference FROM casework_case_fact_new WHERE CaseFactID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_case_fact_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_case_fact is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_case_fact AS Target\r\n",
					"USING casework_case_fact_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.CaseFactID = Target.CaseFactID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;  \r\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_case_fact is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_case_fact\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.casework_case_fact\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY CaseReference NULLS LAST) AS CaseFactID,\r\n",
					"    CaseReference,\r\n",
					"    CaseReference,\r\n",
					"    StandardPriority,\r\n",
					"    ImportantInformation,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.casework_case_fact;\r\n",
					""
				],
				"execution_count": 8
			}
		]
	}
}