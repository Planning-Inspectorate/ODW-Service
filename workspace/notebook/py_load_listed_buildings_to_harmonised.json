{
	"name": "py_load_listed_buildings_to_harmonised",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c889b113-b4dc-4c59-8456-6869a1cb4a88"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.sql(\"\"\"\r\n",
					"    SELECT\r\n",
					"        Listings.dataset\r\n",
					"        ,Listings.`end-date` AS endDate\r\n",
					"        ,CAST(Listings.entity AS Integer) AS entity\r\n",
					"        ,Listings.`entry-date` AS entryDate\r\n",
					"        ,Listings.geometry\r\n",
					"        ,Listings.`listed-building-grade` AS listedBuildingGrade\r\n",
					"        ,Listings.name\r\n",
					"        ,Listings.`organisation-entity` AS organisationEntity\r\n",
					"        ,Listings.point\r\n",
					"        ,Listings.prefix\r\n",
					"        ,Listings.reference\r\n",
					"        ,Listings.typology\r\n",
					"        ,NOW() AS dateReceived\r\n",
					"    FROM\r\n",
					"        odw_standardised_db.listed_building as Listings\r\n",
					"        LEFT OUTER JOIN odw_harmonised_db.listedbuilding AS Target\r\n",
					"            ON CAST(Listings.entity AS Integer) = Target.entity\r\n",
					"    WHERE\r\n",
					"        Target.entity IS NULL\r\n",
					"\"\"\")\r\n",
					"\r\n",
					"df.write.mode(\"Append\").saveAsTable(\"odw_harmonised_db.listedbuilding\")"
				],
				"execution_count": 15
			}
		]
	}
}