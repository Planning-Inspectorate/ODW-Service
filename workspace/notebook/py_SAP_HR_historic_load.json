{
	"name": "py_SAP_HR_historic_load",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8444c91b-f61d-498f-8ae7-f9fed61b9d6f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf, col, lit, when, coalesce, concat, sum, avg, max, min, count, countDistinct, date_format, to_date, datediff, months_between, year, month,  hour, minute, second, expr, asc, desc\n",
					"from pyspark.sql.types import DateType, TimestampType, StringType, IntegerType, FloatType, DoubleType, BooleanType, StructType, StructField, ArrayType, MapType\n",
					"from pyspark.sql.window import Window\n",
					"from pyspark.sql.functions import row_number, rank, dense_rank, lag, lead, ntile\n",
					"from pyspark.sql import SQLContext\n",
					"from pyspark.sql import DataFrame\n",
					"from pyspark.sql import functions as F\n",
					"from pyspark.sql.avro.functions import from_avro, to_avro\n",
					"from pyspark.sql.streaming import DataStreamReader, DataStreamWriter\n",
					"from pyspark.sql.utils import AnalysisException\n",
					"from pyspark.sql.catalog import Catalog\n",
					"from pyspark.sql.column import Column\n",
					"from pyspark.sql.group import GroupedData\n",
					"from pyspark.sql.pandas.functions import pandas_udf\n",
					"\n",
					"from datetime import datetime, timedelta\n",
					"import pandas as pd\n",
					"import numpy as np"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"DELETE FROM odw_harmonised_db.hist_SAP_HR;\n",
					"\n",
					"INSERT INTO odw_harmonised_db.hist_SAP_HR\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    CASE \n",
					"        WHEN TRIM(FTE) = '' OR TRIM(FTE) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(FTE AS FLOAT) \n",
					"    END AS FTE,\n",
					"    CASE \n",
					"        WHEN TRIM(Wkhrs) = '' OR TRIM(Wkhrs) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(Wkhrs AS FLOAT) \n",
					"    END AS Wkhrs,\n",
					"    CASE \n",
					"        WHEN TRIM(IndicatorPartTimeEmployee) = '' OR TRIM(IndicatorPartTimeEmployee) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(IndicatorPartTimeEmployee AS BOOLEAN) \n",
					"    END AS IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CASE \n",
					"        WHEN TRIM(CivilServiceStart) = '' OR TRIM(CivilServiceStart) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(CivilServiceStart, \"dd/MM/yyyy\") AS DATE) \n",
					"    END AS CivilServiceStart,\n",
					"    CASE \n",
					"        WHEN TRIM(DatetoCurrentJob) = '' OR TRIM(DatetoCurrentJob) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(DatetoCurrentJob, 'dd/MM/yyyy') AS DATE) \n",
					"    END AS DatetoCurrentJob,\n",
					"    CASE \n",
					"        WHEN TRIM(SeniorityDate) = '' OR TRIM(SeniorityDate) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(SeniorityDate, 'dd/MM/yyyy') AS DATE) \n",
					"    END AS SeniorityDate,\n",
					"    CASE \n",
					"        WHEN TRIM(DatetoSubsitGrade) = '' OR TRIM(DatetoSubsitGrade) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(DatetoSubsitGrade, 'dd/MM/yyyy') AS DATE) \n",
					"    END AS DatetoSubsitGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    CASE \n",
					"        WHEN TRIM(OrgStartDate) = '' OR TRIM(OrgStartDate) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(OrgStartDate AS DATE) \n",
					"    END AS OrgStartDate,\n",
					"    CASE \n",
					"        WHEN TRIM(FixTermEndDate) = '' OR TRIM(FixTermEndDate) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(FixTermEndDate, \"dd/MM/yyyy\") AS DATE) \n",
					"    END AS FixTermEndDate,\n",
					"    CASE \n",
					"        WHEN TRIM(LoanStartDate) = '' OR TRIM(LoanStartDate) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(LoanStartDate, \"dd/MM/yyyy\") AS DATE) \n",
					"    END AS LoanStartDate,\n",
					"    CASE \n",
					"        WHEN TRIM(LoanEndDate) = '' OR TRIM(LoanEndDate) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(LoanEndDate, \"dd/MM/yyyy\") AS DATE) \n",
					"    END AS LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"        CASE \n",
					"        WHEN TRIM(FTE2) = '' OR TRIM(FTE2) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(FTE2 AS FLOAT) \n",
					"    END AS FTE2,\n",
					"    CASE \n",
					"        WHEN TRIM(Report_MonthEnd_Date) = '' OR TRIM(Report_MonthEnd_Date) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(to_timestamp(Report_MonthEnd_Date, \"dd/MM/yyyy\") AS DATE) \n",
					"    END AS Report_MonthEnd_Date,\n",
					"    current_date() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    current_date() AS IngestionDate,\n",
					"    current_timestamp() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive,\n",
					"           CASE \n",
					"        WHEN TRIM(leave_entitlement_hrs) = '' OR TRIM(leave_entitlement_hrs) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(FTE2 AS FLOAT) \n",
					"    END AS leave_entitlement_hrs,\n",
					"       CASE \n",
					"        WHEN TRIM(leave_taken_hrs) = '' OR TRIM(leave_taken_hrs) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(leave_taken_hrs AS FLOAT) \n",
					"    END AS leave_taken_hrs,\n",
					"\n",
					"          CASE \n",
					"        WHEN TRIM(leave_remaining_hours) = '' OR TRIM(leave_remaining_hours) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(leave_remaining_hours AS FLOAT) \n",
					"    END AS leave_remaining_hours,\n",
					"             CASE \n",
					"        WHEN TRIM(leave_remaining_prorata_hours) = '' OR TRIM(leave_remaining_prorata_hours) = 'NULL' THEN NULL \n",
					"        ELSE TRY_CAST(leave_remaining_prorata_hours AS FLOAT) \n",
					"    END AS leave_remaining_prorata_hours\n",
					"FROM odw_standardised_db.sap_hr_hist_mig;"
				],
				"execution_count": null
			}
		]
	}
}