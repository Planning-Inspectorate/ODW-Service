{
	"name": "service_user_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Checkmark"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3369891c-e9b4-4ca4-89a0-f47862c61e27"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build comment_type_reference_dim table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"-- CREATE OR REPLACE TEMPORARY VIEW structure_reasoning_detail_reference_dim_new\r\n",
					"\r\n",
					"--     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    CASE\r\n",
					"        WHEN T3.case_number IS NULL\r\n",
					"        THEN T1.ServiceDataID\r\n",
					"        ELSE NULL\r\n",
					"    END AS ServiceDataID, -- surrogate key\r\n",
					"    T3.case_number as CaseReference,\r\n",
					"    T3.salutation AS Salutation,\r\n",
					"    T3.firstname AS FirstName,\r\n",
					"    T3.lastname AS LastName,\r\n",
					"    T3.address1 AS AddressLine1,\r\n",
					"    T3.address2 AS AddressLine2,\r\n",
					"    T3.city AS AddressTown,\r\n",
					"    T3.county AS AddressCounty,\r\n",
					"    T3.postcode AS Postcode,\r\n",
					"    T3.country AS AddressCountry,\r\n",
					"    T3.organisationname AS Organisation,\r\n",
					"    T3.organisationtypename OrganisationType,\r\n",
					"    -- T3.Role,\r\n",
					"    T3.telephoneoffice AS TelephoneNumber,\r\n",
					"    T3.telephonemobile AS OtherPhoneNumber,\r\n",
					"    T3.fax AS FaxNumber,\r\n",
					"    T3.email AS EmailAddress,\r\n",
					"    -- T3.WebAddress,\r\n",
					"    -- T3.ServiceUserType,\r\n",
					"\r\n",
					"\r\n",
					"    T2.SourceSystemID as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(IFNULL(T3.case_number,'.'), IFNULL(T3.firstname,'.'), IFNULL(T3.lastname,'.'), IFNULL(T3.email,'.'), IFNULL(T3.postcode,'.'))) AS RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T3.case_number = T1.ServiceDataID \r\n",
					"        AND md5(concat(IFNULL(T3.case_number,'.'), IFNULL(T3.firstname,'.'), IFNULL(T3.lastname,'.'), IFNULL(T3.email,'.'), IFNULL(T3.postcode,'.'))) <> T1.RowID\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T1.ServiceDataID IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T3.case_number IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData,\r\n",
					"    T1.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_harmonised_db.service_user_dim T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Checkmark\" = T2.Description\r\n",
					"FULL JOIN odw_standardised_db.horizon_service_user T3 ON T3.case_number = T3.case_number and T1.IsActive = 'Y'\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"WHERE\r\n",
					"    (-- flags new data        \r\n",
					"        (CASE\r\n",
					"            WHEN T3.case_number = T1.ServiceDataID \r\n",
					"            AND md5(concat(IFNULL(T3.case_number,'.'), IFNULL(T3.firstname,'.'), IFNULL(T3.lastname,'.'), IFNULL(T3.email,'.'), IFNULL(T3.postcode,'.'))) <> T1.RowID\r\n",
					"            THEN 'Y'\r\n",
					"            WHEN T1.ServiceDataID IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END  = 'Y' ) OR\r\n",
					"        -- flags deleted data\r\n",
					"        (CASE\r\n",
					"            WHEN T3.case_number IS NULL\r\n",
					"            THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"        END = 'Y' )\r\n",
					"    )\r\n",
					";"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}