{
	"name": "Dev test",
	"properties": {
		"folder": {
			"name": "Releases/1.1.14/ODW_1335/Testing"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "235f3556-6f3e-442f-86a7-3777e3217d5b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"SELECT \r\n",
					"    casereference, count(*) \r\n",
					"FROM \r\n",
					"    odw_standardised_db.horizon_examination_timetable \r\n",
					"where \r\n",
					"    NameWelsh IS NOT NULL\r\n",
					"    AND ingested_datetime = (SELECT mAX(ingested_datetime) FROM odw_standardised_db.horizon_examination_timetable)\r\n",
					"    and casereference IN (\r\n",
					"            SELECT \r\n",
					"                casereference\r\n",
					"            FROM \r\n",
					"                odw_standardised_db.horizon_examination_timetable \r\n",
					"            WHERE\r\n",
					"                ingested_datetime = (SELECT mAX(ingested_datetime) FROM odw_standardised_db.horizon_examination_timetable)\r\n",
					"            GROUP BY\r\n",
					"                casereference\r\n",
					"            HAVING\r\n",
					"                COUNT(*) < 4) -- Find small examples we can easily work with\r\n",
					"group by \r\n",
					"    casereference \r\n",
					"order by 2 desc"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT \r\n",
					"    CaseReference\r\n",
					"    ,Name\r\n",
					"    ,NameWelsh\r\n",
					"    ,description\r\n",
					"    ,descriptionWelsh\r\n",
					"    ,*\r\n",
					"FROM\r\n",
					"    odw_standardised_db.horizon_examination_timetable\r\n",
					"WHERE\r\n",
					"    CaseReference = 'DNS/3218920'\r\n",
					"    AND ingested_datetime = (SELECT mAX(ingested_datetime) FROM odw_standardised_db.horizon_examination_timetable)"
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT\r\n",
					"    *\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.nsip_exam_timetable\r\n",
					"WHERE\r\n",
					"    CaseReference = 'DNS/3218920'\r\n",
					"    AND isActive = 'Y'"
				],
				"execution_count": 32
			}
		]
	}
}