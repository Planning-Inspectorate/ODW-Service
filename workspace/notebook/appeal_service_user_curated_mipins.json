{
	"name": "appeal_service_user_curated_mipins",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pynssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2a3f240f-c9a0-4d87-81f9-15776368cc42"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pynssynspodw34",
				"name": "pynssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pynssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE  VIEW vw_Appeal_Service_User_curated_mipins \n",
					"AS\n",
					"SELECT\n",
					"    id\n",
					"    ,caseReference\n",
					"    ,salutation\n",
					"    ,FirstName\n",
					"    ,lastName\n",
					"    ,addressLine1\n",
					"    ,addressLine2\n",
					"    ,addressTown\n",
					"    ,addressCounty\n",
					"    ,postcode\n",
					"    ,addressCountry\n",
					"    ,organisation\n",
					"    ,organisationType\n",
					"    ,role\n",
					"    ,telephoneNumber\n",
					"    ,otherPhoneNumber\n",
					"    ,faxNumber\n",
					"    ,emailAddress\n",
					"    ,webAddress\n",
					"    ,serviceUserType\n",
					"    ,sourceSystem\n",
					"    ,sourceSUID\n",
					"    ,ODTSourceSystem\n",
					"    ,ingestionDate\n",
					"    ,NULLIF(ValidTo,'') as ValidTo\n",
					"    ,RowID\n",
					"    ,IsActive\n",
					"\n",
					"FROM\n",
					"    odw_harmonised_db.sb_service_user\n",
					"\n",
					"    union\n",
					"\n",
					"    SELECT\n",
					"    id\n",
					"    ,caseReference\n",
					"    ,salutation\n",
					"    ,FirstName\n",
					"    ,lastName\n",
					"    ,addressLine1\n",
					"    ,addressLine2\n",
					"    ,addressTown\n",
					"    ,addressCounty\n",
					"    ,postcode\n",
					"    ,addressCountry\n",
					"    ,organisation\n",
					"    ,organisationType\n",
					"    ,role\n",
					"    ,telephoneNumber\n",
					"    ,otherPhoneNumber\n",
					"    ,faxNumber\n",
					"    ,emailAddress\n",
					"    ,webAddress\n",
					"    ,serviceUserType\n",
					"    ,sourceSystem\n",
					"    ,sourceSUID\n",
					"    ,ODTSourceSystem\n",
					"    ,ingestionDate\n",
					"    ,ValidTo\n",
					"    ,RowID\n",
					"    ,IsActive\n",
					"\n",
					"FROM\n",
					"    odw_harmonised_db.service_user\n",
					"\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"drop table if exists odw_curated_db.appeal_service_user_curated_mipins;\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.sql(\"\"\"\n",
					"   SELECT\n",
					"    id\n",
					"    ,caseReference\n",
					"    ,salutation\n",
					"    ,FirstName\n",
					"    ,lastName\n",
					"    ,addressLine1\n",
					"    ,addressLine2\n",
					"    ,addressTown\n",
					"    ,addressCounty\n",
					"    ,postcode\n",
					"    ,addressCountry\n",
					"    ,organisation\n",
					"    ,organisationType\n",
					"    ,role\n",
					"    ,telephoneNumber\n",
					"    ,otherPhoneNumber\n",
					"    ,faxNumber\n",
					"    ,emailAddress\n",
					"    ,webAddress\n",
					"    ,serviceUserType\n",
					"    ,sourceSystem\n",
					"    ,sourceSUID\n",
					"    ,ODTSourceSystem\n",
					"    ,ingestionDate\n",
					"    ,ValidTo\n",
					"    ,RowID\n",
					"    ,IsActive\n",
					"    \n",
					"FROM \n",
					"    vw_Appeal_Service_User_curated_mipins\n",
					"    \"\"\")\n",
					"\n",
					"df.write.format(\"delta\").mode(\"Overwrite\").saveAsTable(\"odw_curated_db.appeal_service_user_curated_mipins\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#%%sql\r\n",
					"#select * from odw_curated_db.appeal_service_user_curated_mipins WHERE caseReference='TR0510063' AND ISACTIVE='Y'"
				],
				"execution_count": 17
			}
		]
	}
}