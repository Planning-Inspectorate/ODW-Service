{
	"name": "HIST_employee_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/SAP-HR/HIST"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "01ef03d1-9e60-4f42-8a59-1cd94a2802b7"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.hr_employee_dim \r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    Row_Number() over (order by T1.Pers_No NULLS FIRST) as EmployeeInfoID,\r\n",
					"    T1.Pers_No AS EmployeeID,\r\n",
					"    T1.First_name as FirstName,\r\n",
					"    T1.Last_name as LastName,\r\n",
					"    T1.Gender_Key as Gender,\r\n",
					"    T2.Street_and_House_Number as AddressLine1,\r\n",
					"    T2.`2nd_Address_Line` as AddressLine2,\r\n",
					"    T2.District as AddressLine3,\r\n",
					"    T2.City as City,\r\n",
					"    T2.Region_State_Province_Count as County,\r\n",
					"    T2.Postal_Code as PostCode,\r\n",
					"    T3.Email_Address as EmailAddress,\r\n",
					"    T2.Personal_Mobile as TelephoneNumberPersonal,\r\n",
					"    T2.Work_Mobile as TelephoneNumberWork,\r\n",
					"    T1.FTE,\r\n",
					"    T1.Wk_hrs as WorkHours,\r\n",
					"    T1.Indicator_Part_Time_Employee as PartTimeEmployee,\r\n",
					"    T1.Employment_Status as EmploymentStatus,\r\n",
					"    to_timestamp(T1.Civil_Service_Start) AS CivilServiceStart,\r\n",
					"    to_timestamp(T1.Date_to_Current_Job) AS DateToCurrentJob,\r\n",
					"    to_timestamp(T1.Seniority_Date) AS SeniorityDate,\r\n",
					"    to_timestamp(T1.Org_Start_Date) AS OrgStartDate,\r\n",
					"    to_timestamp(T1.Fix_Term_End_Date) AS FixTermEndDate,\r\n",
					"    to_timestamp(T1.Loan_Start_Date) AS LoanStartDate,\r\n",
					"    to_timestamp(T1.Loan_End_Date) AS LoanEndDate,\r\n",
					"    T1.Assignment_Number as AssignmentNumber,\r\n",
					"    T1.Annual_salary as AnnualSalary, -- T1.Annual_salary\r\n",
					"    T1.curr as Currency,\r\n",
					"    T1.Reason_For_Action AS ReasonForAction,\r\n",
					"    to_timestamp(Date_to_Subst_Grade) as DateToSubstantiveGrade,\r\n",
					"    T4.SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from) AS IngestionDate,\r\n",
					"    NULL as ValidTo,\r\n",
					"    md5(concat( IFNULL(T1.Pers_No,'.'),IFNULL(T1.First_name,'.'),IFNULL(T1.Last_name,'.'), IFNULL(T1.Gender_Key, '.'), IFNULL(T2.Street_and_House_Number, '.'),IFNULL(T2.District, '.'),\r\n",
					"                IFNULL(T2.City, '.'),IFNULL(T2.Region_State_Province_Count, '.'),IFNULL(T2.Postal_Code, '.'),IFNULL(T3.Email_Address, '.'),IFNULL(T2.Personal_Mobile, '.'), IFNULL(T2.Work_Mobile, '.'),\r\n",
					"                IFNULL(T1.FTE,'.'),IFNULL(T1.Wk_hrs,'.'),IFNULL(T1.Indicator_Part_Time_Employee,'.'),T1.Employment_Status,IFNULL(T1.Civil_Service_Start, '.'),IFNULL(T1.Date_to_Current_Job, '.'),\r\n",
					"                IFNULL(T1.Seniority_Date, '.'),IFNULL(T1.Org_Start_Date, '.'),IFNULL(T1.Fix_Term_End_Date, '.'),IFNULL(T1.Loan_Start_Date, '.'),IFNULL(T1.Loan_End_Date, '.'),IFNULL(T1.Payroll_Area,'.'),\r\n",
					"                IFNULL(T1.Assignment_Number, '.'), IFNULL(T1.Employee_Group,'.'),IFNULL(T1.curr,'.'), IFNULL(T1.Date_to_Subst_Grade,'.'))) as RowID, \r\n",
					"    'Y' as IsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.vw_saphr_historic T1\r\n",
					"LEFT JOIN odw_standardised_db.vw_addresses T2 ON T1.Pers_No = T2.Staff_Number\r\n",
					"LEFT JOIN odw_standardised_db.vw_email T3 ON T1.Pers_No = T3.Staff_Number\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T4 ON \"SAP HR\" = T4.Description\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- CREATE OR REPLACE TEMPORARY VIEW employee_dim_from_leavers\n",
					"\n",
					"--     AS\n",
					"\n",
					"-- SELECT DISTINCT\n",
					"--     Pers_No,\n",
					"--     Last_name,\n",
					"--     First_name,\n",
					"--     Loc,\n",
					"--     Location,\n",
					"--     PS_group,\n",
					"--     Pay_Band_Description,\n",
					"--     Org_unit,\n",
					"--     Organizational_Unit,\n",
					"--     PA,\n",
					"--     Personnel_Area,\n",
					"--     Personnel_Subarea,\n",
					"--     WorkC,\n",
					"--     Work_Contract,\n",
					"--     to_timestamp(Org_Start_Date) AS Org_Start_Date,\n",
					"--     Employee_No,\n",
					"--     Position,\n",
					"--     Position_1,\n",
					"--     Annual_salary,\n",
					"--     Curr,\n",
					"--     User_ID,\n",
					"--     Email_Address,\n",
					"--     Pers_No_1,\n",
					"--     Name_of_Manager_OM,\n",
					"--     expected_from\n",
					"\n",
					"-- FROM odw_standardised_db.vw_leavers\n",
					"-- WHERE Pers_No NOT IN (SELECT EmployeeID FROM odw_harmonised_db.hr_employee_dim)"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- INSERT INTO odw_harmonised_db.hr_employee_dim \n",
					"\n",
					"-- SELECT \n",
					"--     ROW_NUMBER() OVER (ORDER BY EmployeeInfoID NULLS LAST) AS EmployeeInfoID, \n",
					"--     EmployeeID, \n",
					"--     FirstName,\n",
					"--     LastName,\n",
					"--     Gender,\n",
					"--     AddressLine1,\n",
					"--     AddressLine2,\n",
					"--     AddressLine3,\n",
					"--     City,\n",
					"--     County,\n",
					"--     PostCode,\n",
					"--     EmailAddress,\n",
					"--     TelephoneNumberPersonal,\n",
					"--     TelephoneNumberWork,\n",
					"--     FTE,\n",
					"--     WorkHours,\n",
					"--     PartTimeEmployee,\n",
					"--     EmploymentStatus,\n",
					"--     CivilServiceStart,\n",
					"--     DateToCurrentJob,\n",
					"--     SeniorityDate,\n",
					"--     OrgStartDate,\n",
					"--     FixTermEndDate,\n",
					"--     LoanStartDate,\n",
					"--     LoanEndDate,\n",
					"--     AssignmentNumber,\n",
					"--     AnnualSalary,\n",
					"--     Currency,\n",
					"--     ReasonForAction,\n",
					"--     DateToSubstantiveGrade,\n",
					"--     SourceSystemID,\n",
					"--     IngestionDate,\n",
					"--     ValidTo,\n",
					"--     RowID,\n",
					"--     IsActive\n",
					"-- FROM odw_standardised_db.vw_leavers;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql \n",
					"\n",
					"-- SELECT COUNT(*) FROM odw_standardised_db.vw_saphr_historic;\n",
					"-- SELECT COUNT(*) FROM odw_harmonised_db.hr_employee_dim;\n",
					"\n",
					"-- SELECT * FROM odw_standardised_db.vw_saphr_historic;\n",
					"\n",
					"-- SELECT * FROM odw_standardised_db.vw_leavers;"
				],
				"execution_count": 1
			}
		]
	}
}