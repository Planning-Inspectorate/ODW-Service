{
	"name": "casework_contacts_organisation_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "36130865-f4b8-4d84-8a95-9b8558ed00ad"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_contacts_organisation_dim_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_contacts_organisation_dim_new table\r\n",
					"-- Gets modified or new from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_contacts_organisation_dim_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.ID IS NULL\r\n",
					"        THEN T3.ContactsOrganisationID\r\n",
					"        ELSE NULL\r\n",
					"    END                             AS ContactsOrganisationID,\r\n",
					"    T1.ID                           AS ContactID,\r\n",
					"    T1.name                         AS Name,\r\n",
					"    T1.organisationtypeid           AS OrganisationTypeID,\r\n",
					"    T10.LPAID                       AS LPAID,\r\n",
					"    T1.pobox                        AS POBox,\r\n",
					"    T1.address1                     AS Address1,\r\n",
					"    T1.address2                     AS Address2,\r\n",
					"    T1.city                         AS City,\r\n",
					"    T1.county                       AS County,\r\n",
					"    T1.postcode                     AS PostCode,\r\n",
					"    T1.country                      AS Country,\r\n",
					"    T1.telephoneoffice              AS TelephoneOffice,\r\n",
					"    T1.fax                          AS Fax,\r\n",
					"    T1.email                        AS Email,\r\n",
					"    T1.lastupdatedbyid              AS LastUpdatedByID,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)  AS IngestionDate,\r\n",
					"    NULL                            AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.ID,'.'),\r\n",
					"            IFNULL(T1.name,'.'),\r\n",
					"            IFNULL(T1.organisationtypeid,'.'),\r\n",
					"            IFNULL(T10.LPAID,'.'),\r\n",
					"            IFNULL(T1.pobox,'.'),\r\n",
					"            IFNULL(T1.address1,'.'),\r\n",
					"            IFNULL(T1.address2,'.'),\r\n",
					"            IFNULL(T1.city,'.'),\r\n",
					"            IFNULL(T1.county,'.'),\r\n",
					"            IFNULL(T1.postcode,'.'),\r\n",
					"            IFNULL(T1.country,'.'),\r\n",
					"            IFNULL(T1.telephoneoffice,'.'),\r\n",
					"            IFNULL(T1.fax,'.'),\r\n",
					"            IFNULL(T1.email,'.'),\r\n",
					"            IFNULL(T1.lastupdatedbyid,'.')\r\n",
					"        )\r\n",
					"    )                               AS RowID, -- this hash should contain all the defining fields, so needs to be done\r\n",
					"    'Y'                             AS IsActive,\r\n",
					"    T3.IsActive                     AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.horizon_contacts_organisation T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_local_planning_authority_fact T10 ON T1.lpacode = T10.LPACode AND T10.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_contacts_organisation_dim T3 ON T1.ID = T3.ContactID AND T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    (CASE\r\n",
					"        WHEN T1.ID = T3.ContactID AND md5(\r\n",
					"            concat(\r\n",
					"                IFNULL(T1.ID,'.'),\r\n",
					"                IFNULL(T1.name,'.'),\r\n",
					"                IFNULL(T1.organisationtypeid,'.'),\r\n",
					"                IFNULL(T10.LPAID,'.'),\r\n",
					"                IFNULL(T1.pobox,'.'),\r\n",
					"                IFNULL(T1.address1,'.'),\r\n",
					"                IFNULL(T1.address2,'.'),\r\n",
					"                IFNULL(T1.city,'.'),\r\n",
					"                IFNULL(T1.county,'.'),\r\n",
					"                IFNULL(T1.postcode,'.'),\r\n",
					"                IFNULL(T1.country,'.'),\r\n",
					"                IFNULL(T1.telephoneoffice,'.'),\r\n",
					"                IFNULL(T1.fax,'.'),\r\n",
					"                IFNULL(T1.email,'.'),\r\n",
					"                IFNULL(T1.lastupdatedbyid,'.')\r\n",
					"            )) <> T3.RowID  -- same record, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.ContactID IS NULL -- new record\r\n",
					"        THEN 'Y'\r\n",
					"    ELSE 'N'\r\n",
					"    END  = 'Y' )\r\n",
					";"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_contacts_organisation_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_contacts_organisation_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"Select \r\n",
					"    ContactsOrganisationID,\r\n",
					"    ContactID,\r\n",
					"    Name,\r\n",
					"    OrganisationTypeID,\r\n",
					"    LPAID,\r\n",
					"    POBox,\r\n",
					"    Address1,\r\n",
					"    Address2,\r\n",
					"    City,\r\n",
					"    County,\r\n",
					"    PostCode,\r\n",
					"    Country,\r\n",
					"    TelephoneOffice,\r\n",
					"    Fax,\r\n",
					"    Email,\r\n",
					"    LastUpdatedByID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_contacts_organisation_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    ContactsOrganisationID,\r\n",
					"    ContactID,\r\n",
					"    Name,\r\n",
					"    OrganisationTypeID,\r\n",
					"    LPAID,\r\n",
					"    POBox,\r\n",
					"    Address1,\r\n",
					"    Address2,\r\n",
					"    City,\r\n",
					"    County,\r\n",
					"    PostCode,\r\n",
					"    Country,\r\n",
					"    TelephoneOffice,\r\n",
					"    Fax,\r\n",
					"    Email,\r\n",
					"    LastUpdatedByID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_contacts_organisation_dim\r\n",
					"WHERE ContactID IN (SELECT ContactID FROM casework_contacts_organisation_dim_new WHERE ContactsOrganisationID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_contacts_organisation_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_contacts_organisation_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_contacts_organisation_dim AS Target\r\n",
					"USING casework_contacts_organisation_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.ContactsOrganisationID = Target.ContactsOrganisationID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(date_sub(Source.IngestionDate,1)),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;  "
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_contacts_organisation_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_contacts_organisation_dim\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.casework_contacts_organisation_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY ContactsOrganisationID NULLS LAST) AS ContactsOrganisationID,\r\n",
					"    ContactID,\r\n",
					"    Name,\r\n",
					"    OrganisationTypeID,\r\n",
					"    LPAID,\r\n",
					"    POBox,\r\n",
					"    Address1,\r\n",
					"    Address2,\r\n",
					"    City,\r\n",
					"    County,\r\n",
					"    PostCode,\r\n",
					"    Country,\r\n",
					"    TelephoneOffice,\r\n",
					"    Fax,\r\n",
					"    Email,\r\n",
					"    LastUpdatedByID,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.casework_contacts_organisation_dim;\r\n",
					""
				],
				"execution_count": 6
			}
		]
	}
}