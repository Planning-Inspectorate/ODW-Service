{
	"name": "aie_document_data",
	"properties": {
		"folder": {
			"name": "odw-harmonised/DocumentTree"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2e7c1ba4-4277-4f65-a29d-740de0d5878a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View aie_document_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"/* Need to create a view of both net new and changed records. For this feed the PK is a composite key of:\n",
					"\n",
					"- DocumentID\n",
					"- Version\n",
					"- Mime\n",
					"\n",
					"When we're looking for records to process we need to consider three groups:\n",
					"\n",
					"1. Net new records\n",
					"2. Updates to records that we've seen before but have isActive set to 'N' incorrectly\n",
					"3. Updates to records that we've seen before, but are a net new version\n",
					"4. Updates to records that isActive is set to 'Y' but it should be set to 'N' based on the latest data \n",
					"\n",
					"*/\n",
					"CREATE OR REPLACE TEMPORARY VIEW aie_document_data_input\n",
					"AS\n",
					"WITH Latest\n",
					"AS\n",
					"(\n",
					"    SELECT\n",
					"        MAX(expected_from) AS LatestDate\n",
					"    FROM \n",
					"        odw_standardised_db.aie_document_data\n",
					"\n",
					")\n",
					"--1. net new records\n",
					"SELECT\n",
					"    CAST(NULL AS INT) AS AIEDocumentDataID\n",
					"    ,standard.documentid AS DocumentID\n",
					"    ,standard.caseref AS CaseReference\n",
					"    ,standard.documentreference AS DocumentReference\n",
					"    ,standard.version AS Version\n",
					"    ,standard.examinationrefno AS ExaminationRefNo\n",
					"    ,standard.filename AS FileName\n",
					"    ,standard.originalfilename AS OriginalFileName\n",
					"    ,standard.size AS Size\n",
					"    ,standard.mime AS Mime\n",
					"    ,standard.documenturi AS DocumentURI\n",
					"    ,standard.path AS Path\n",
					"    ,standard.viruscheckstatus AS VirusCheckStatus\n",
					"    ,standard.filemd5 AS FileMD5\n",
					"    ,IFNULL(standard.datecreated,'00/00/0000 00:00:00')\tAS DateCreated\n",
					"    ,standard.lastmodified AS LastModified\n",
					"    ,standard.casetype AS CaseType\n",
					"    ,standard.documentstatus AS DocumentStatus\n",
					"    ,standard.redactedstatus AS RedactedStatus\n",
					"    ,standard.publishedstatus AS PublishedStatus\n",
					"    ,standard.datepublished AS DatePublished\n",
					"    ,standard.documenttype AS DocumentType\t\n",
					"    ,standard.securityclassification AS SecurityClassification\n",
					"    ,standard.sourcesystem AS SourceSystem\n",
					"    ,standard.origin AS Origin\n",
					"    ,standard.owner AS Owner\n",
					"    ,standard.author AS Author\n",
					"    ,standard.representative AS Representative\n",
					"    ,standard.description AS Description\n",
					"    ,standard.stage AS Stage\n",
					"    ,standard.filter1 AS Filter1\n",
					"    ,standard.filter2 AS Filter2\n",
					"    ,\"0\" AS Migrated\n",
					"    ,\"Horizon\" AS ODTSourceSystem\n",
					"    ,source_system.SourceSystemID AS SourceSystemID\n",
					"    ,to_timestamp(standard.expected_from) AS IngestionDate\n",
					"    ,NULL AS ValidTo\n",
					"    ,md5(\n",
					"        concat(\n",
					"            IFNULL(standard.documentid,'.'),\n",
					"            IFNULL(standard.caseref,'.'),\n",
					"            IFNULL(standard.documentreference,'.'),\n",
					"            IFNULL(standard.version,'.'),\n",
					"            IFNULL(standard.examinationrefno,'.'),\n",
					"            IFNULL(standard.filename,'.'),\n",
					"            IFNULL(standard.originalfilename,'.'),\n",
					"            IFNULL(standard.size,'.'),\n",
					"            IFNULL(standard.mime,'.'),\n",
					"            IFNULL(standard.documenturi,'.'),\n",
					"            IFNULL(standard.path,'.'),\n",
					"            IFNULL(standard.viruscheckstatus,'.'),\n",
					"            IFNULL(standard.filemd5,'.'),\n",
					"            IFNULL(standard.datecreated,'.'),\n",
					"            IFNULL(standard.lastmodified,'.'),\n",
					"            IFNULL(standard.casetype,'.'),\n",
					"            IFNULL(standard.documentstatus,'.'),\n",
					"            IFNULL(standard.redactedstatus,'.'),\n",
					"            IFNULL(standard.publishedstatus,'.'),\n",
					"            IFNULL(standard.datepublished,'.'),\n",
					"            IFNULL(standard.documenttype,'.'),\n",
					"            IFNULL(standard.securityclassification,'.'),\n",
					"            IFNULL(standard.sourcesystem,'.'),\n",
					"            IFNULL(standard.origin,'.'),\n",
					"            IFNULL(standard.owner,'.'),\n",
					"            IFNULL(standard.author,'.'),\n",
					"            IFNULL(standard.representative,'.'),\n",
					"            IFNULL(standard.description,'.'),\n",
					"            IFNULL(standard.stage\t,'.'),\n",
					"            IFNULL(standard.filter1,'.'),\n",
					"            IFNULL(standard.filter2,'.')\n",
					"        )) AS RowID -- this hash should contain all the defining fields\n",
					"    ,'Y' AS IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.main_sourcesystem_fact AS source_system\n",
					"    INNER JOIN Latest\n",
					"        ON source_system.Description = \"DocumentTree\"\n",
					"        AND source_system.IsActive = 'Y'\n",
					"    INNER JOIN odw_standardised_db.aie_document_data AS standard\n",
					"        ON Latest.LatestDate = standard.expected_from\n",
					"    LEFT OUTER JOIN odw_harmonised_db.aie_document_data AS Target\n",
					"        ON standard.documentID = Target.documentID\n",
					"        AND standard.Version = Target.Version\n",
					"        AND standard.Mime = Target.Mime\n",
					"WHERE\n",
					"    Target.documentID IS NULL\n",
					"UNION\n",
					"--2. Updates to records that exist but are incorrectly set to 'N' for isActive\n",
					"SELECT\n",
					"    CAST(NULL AS INT) AS AIEDocumentDataID\n",
					"    ,standard.documentid AS DocumentID\n",
					"    ,standard.caseref AS CaseReference\n",
					"    ,standard.documentreference AS DocumentReference\n",
					"    ,standard.version AS Version\n",
					"    ,standard.examinationrefno AS ExaminationRefNo\n",
					"    ,standard.filename AS FileName\n",
					"    ,standard.originalfilename AS OriginalFileName\n",
					"    ,standard.size AS Size\n",
					"    ,standard.mime AS Mime\n",
					"    ,standard.documenturi AS DocumentURI\n",
					"    ,standard.path AS Path\n",
					"    ,standard.viruscheckstatus AS VirusCheckStatus\n",
					"    ,standard.filemd5 AS FileMD5\n",
					"    ,IFNULL(standard.datecreated,'00/00/0000 00:00:00')\tAS DateCreated\n",
					"    ,standard.lastmodified AS LastModified\n",
					"    ,standard.casetype AS CaseType\n",
					"    ,standard.documentstatus AS DocumentStatus\n",
					"    ,standard.redactedstatus AS RedactedStatus\n",
					"    ,standard.publishedstatus AS PublishedStatus\n",
					"    ,standard.datepublished AS DatePublished\n",
					"    ,standard.documenttype AS DocumentType\t\n",
					"    ,standard.securityclassification AS SecurityClassification\n",
					"    ,standard.sourcesystem AS SourceSystem\n",
					"    ,standard.origin AS Origin\n",
					"    ,standard.owner AS Owner\n",
					"    ,standard.author AS Author\n",
					"    ,standard.representative AS Representative\n",
					"    ,standard.description AS Description\n",
					"    ,standard.stage AS Stage\n",
					"    ,standard.filter1 AS Filter1\n",
					"    ,standard.filter2 AS Filter2\n",
					"    ,\"0\" AS Migrated\n",
					"    ,\"Horizon\" AS ODTSourceSystem\n",
					"    ,source_system.SourceSystemID AS SourceSystemID\n",
					"    ,to_timestamp(standard.expected_from) AS IngestionDate\n",
					"    ,NULL AS ValidTo\n",
					"    ,md5(\n",
					"        concat(\n",
					"            IFNULL(standard.documentid,'.'),\n",
					"            IFNULL(standard.caseref,'.'),\n",
					"            IFNULL(standard.documentreference,'.'),\n",
					"            IFNULL(standard.version,'.'),\n",
					"            IFNULL(standard.examinationrefno,'.'),\n",
					"            IFNULL(standard.filename,'.'),\n",
					"            IFNULL(standard.originalfilename,'.'),\n",
					"            IFNULL(standard.size,'.'),\n",
					"            IFNULL(standard.mime,'.'),\n",
					"            IFNULL(standard.documenturi,'.'),\n",
					"            IFNULL(standard.path,'.'),\n",
					"            IFNULL(standard.viruscheckstatus,'.'),\n",
					"            IFNULL(standard.filemd5,'.'),\n",
					"            IFNULL(standard.datecreated,'.'),\n",
					"            IFNULL(standard.lastmodified,'.'),\n",
					"            IFNULL(standard.casetype,'.'),\n",
					"            IFNULL(standard.documentstatus,'.'),\n",
					"            IFNULL(standard.redactedstatus,'.'),\n",
					"            IFNULL(standard.publishedstatus,'.'),\n",
					"            IFNULL(standard.datepublished,'.'),\n",
					"            IFNULL(standard.documenttype,'.'),\n",
					"            IFNULL(standard.securityclassification,'.'),\n",
					"            IFNULL(standard.sourcesystem,'.'),\n",
					"            IFNULL(standard.origin,'.'),\n",
					"            IFNULL(standard.owner,'.'),\n",
					"            IFNULL(standard.author,'.'),\n",
					"            IFNULL(standard.representative,'.'),\n",
					"            IFNULL(standard.description,'.'),\n",
					"            IFNULL(standard.stage\t,'.'),\n",
					"            IFNULL(standard.filter1,'.'),\n",
					"            IFNULL(standard.filter2,'.')\n",
					"        )) AS RowID -- this hash should contain all the defining fields\n",
					"    ,'Y' AS IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.main_sourcesystem_fact AS source_system\n",
					"    INNER JOIN Latest\n",
					"        ON source_system.Description = \"DocumentTree\"\n",
					"        AND source_system.IsActive = 'Y'\n",
					"    INNER JOIN odw_standardised_db.aie_document_data AS standard\n",
					"        ON Latest.LatestDate = standard.expected_from\n",
					"    INNER JOIN odw_harmonised_db.aie_document_data AS Target\n",
					"        ON standard.documentID = Target.documentID\n",
					"        AND standard.Version = Target.Version\n",
					"        AND standard.Mime = Target.Mime\n",
					"        AND Target.IsActive = 'N'\n",
					"        AND md5(\n",
					"                concat(\n",
					"                    IFNULL(standard.documentid,'.'),\n",
					"                    IFNULL(standard.caseref,'.'),\n",
					"                    IFNULL(standard.documentreference,'.'),\n",
					"                    IFNULL(standard.version,'.'),\n",
					"                    IFNULL(standard.examinationrefno,'.'),\n",
					"                    IFNULL(standard.filename,'.'),\n",
					"                    IFNULL(standard.originalfilename,'.'),\n",
					"                    IFNULL(standard.size,'.'),\n",
					"                    IFNULL(standard.mime,'.'),\n",
					"                    IFNULL(standard.documenturi,'.'),\n",
					"                    IFNULL(standard.path,'.'),\n",
					"                    IFNULL(standard.viruscheckstatus,'.'),\n",
					"                    IFNULL(standard.filemd5,'.'),\n",
					"                    IFNULL(standard.datecreated,'.'),\n",
					"                    IFNULL(standard.lastmodified,'.'),\n",
					"                    IFNULL(standard.casetype,'.'),\n",
					"                    IFNULL(standard.documentstatus,'.'),\n",
					"                    IFNULL(standard.redactedstatus,'.'),\n",
					"                    IFNULL(standard.publishedstatus,'.'),\n",
					"                    IFNULL(standard.datepublished,'.'),\n",
					"                    IFNULL(standard.documenttype,'.'),\n",
					"                    IFNULL(standard.securityclassification,'.'),\n",
					"                    IFNULL(standard.sourcesystem,'.'),\n",
					"                    IFNULL(standard.origin,'.'),\n",
					"                    IFNULL(standard.owner,'.'),\n",
					"                    IFNULL(standard.author,'.'),\n",
					"                    IFNULL(standard.representative,'.'),\n",
					"                    IFNULL(standard.description,'.'),\n",
					"                    IFNULL(standard.stage\t,'.'),\n",
					"                    IFNULL(standard.filter1,'.'),\n",
					"                    IFNULL(standard.filter2,'.')\n",
					"                )) = Target.RowID\n",
					"UNION\n",
					"--3. Existing records with a new update\n",
					"SELECT\n",
					"    CAST(NULL AS INT) AS AIEDocumentDataID\n",
					"    ,standard.documentid AS DocumentID\n",
					"    ,standard.caseref AS CaseReference\n",
					"    ,standard.documentreference AS DocumentReference\n",
					"    ,standard.version AS Version\n",
					"    ,standard.examinationrefno AS ExaminationRefNo\n",
					"    ,standard.filename AS FileName\n",
					"    ,standard.originalfilename AS OriginalFileName\n",
					"    ,standard.size AS Size\n",
					"    ,standard.mime AS Mime\n",
					"    ,standard.documenturi AS DocumentURI\n",
					"    ,standard.path AS Path\n",
					"    ,standard.viruscheckstatus AS VirusCheckStatus\n",
					"    ,standard.filemd5 AS FileMD5\n",
					"    ,IFNULL(standard.datecreated,'00/00/0000 00:00:00')\tAS DateCreated\n",
					"    ,standard.lastmodified AS LastModified\n",
					"    ,standard.casetype AS CaseType\n",
					"    ,standard.documentstatus AS DocumentStatus\n",
					"    ,standard.redactedstatus AS RedactedStatus\n",
					"    ,standard.publishedstatus AS PublishedStatus\n",
					"    ,standard.datepublished AS DatePublished\n",
					"    ,standard.documenttype AS DocumentType\t\n",
					"    ,standard.securityclassification AS SecurityClassification\n",
					"    ,standard.sourcesystem AS SourceSystem\n",
					"    ,standard.origin AS Origin\n",
					"    ,standard.owner AS Owner\n",
					"    ,standard.author AS Author\n",
					"    ,standard.representative AS Representative\n",
					"    ,standard.description AS Description\n",
					"    ,standard.stage AS Stage\n",
					"    ,standard.filter1 AS Filter1\n",
					"    ,standard.filter2 AS Filter2\n",
					"    ,\"0\" AS Migrated\n",
					"    ,\"Horizon\" AS ODTSourceSystem\n",
					"    ,source_system.SourceSystemID AS SourceSystemID\n",
					"    ,to_timestamp(standard.expected_from) AS IngestionDate\n",
					"    ,NULL AS ValidTo\n",
					"    ,md5(\n",
					"        concat(\n",
					"            IFNULL(standard.documentid,'.'),\n",
					"            IFNULL(standard.caseref,'.'),\n",
					"            IFNULL(standard.documentreference,'.'),\n",
					"            IFNULL(standard.version,'.'),\n",
					"            IFNULL(standard.examinationrefno,'.'),\n",
					"            IFNULL(standard.filename,'.'),\n",
					"            IFNULL(standard.originalfilename,'.'),\n",
					"            IFNULL(standard.size,'.'),\n",
					"            IFNULL(standard.mime,'.'),\n",
					"            IFNULL(standard.documenturi,'.'),\n",
					"            IFNULL(standard.path,'.'),\n",
					"            IFNULL(standard.viruscheckstatus,'.'),\n",
					"            IFNULL(standard.filemd5,'.'),\n",
					"            IFNULL(standard.datecreated,'.'),\n",
					"            IFNULL(standard.lastmodified,'.'),\n",
					"            IFNULL(standard.casetype,'.'),\n",
					"            IFNULL(standard.documentstatus,'.'),\n",
					"            IFNULL(standard.redactedstatus,'.'),\n",
					"            IFNULL(standard.publishedstatus,'.'),\n",
					"            IFNULL(standard.datepublished,'.'),\n",
					"            IFNULL(standard.documenttype,'.'),\n",
					"            IFNULL(standard.securityclassification,'.'),\n",
					"            IFNULL(standard.sourcesystem,'.'),\n",
					"            IFNULL(standard.origin,'.'),\n",
					"            IFNULL(standard.owner,'.'),\n",
					"            IFNULL(standard.author,'.'),\n",
					"            IFNULL(standard.representative,'.'),\n",
					"            IFNULL(standard.description,'.'),\n",
					"            IFNULL(standard.stage\t,'.'),\n",
					"            IFNULL(standard.filter1,'.'),\n",
					"            IFNULL(standard.filter2,'.')\n",
					"        )) AS RowID -- this hash should contain all the defining fields\n",
					"    ,'Y' AS IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.main_sourcesystem_fact AS source_system\n",
					"    INNER JOIN Latest\n",
					"        ON source_system.Description = \"DocumentTree\"\n",
					"        AND source_system.IsActive = 'Y'\n",
					"    INNER JOIN odw_standardised_db.aie_document_data AS standard\n",
					"        ON Latest.LatestDate = standard.expected_from\n",
					"    INNER JOIN odw_harmonised_db.aie_document_data AS Target\n",
					"        ON standard.documentID = Target.documentID\n",
					"        AND standard.Version = Target.Version\n",
					"        AND standard.Mime = Target.Mime\n",
					"        AND md5(\n",
					"                concat(\n",
					"                    IFNULL(standard.documentid,'.'),\n",
					"                    IFNULL(standard.caseref,'.'),\n",
					"                    IFNULL(standard.documentreference,'.'),\n",
					"                    IFNULL(standard.version,'.'),\n",
					"                    IFNULL(standard.examinationrefno,'.'),\n",
					"                    IFNULL(standard.filename,'.'),\n",
					"                    IFNULL(standard.originalfilename,'.'),\n",
					"                    IFNULL(standard.size,'.'),\n",
					"                    IFNULL(standard.mime,'.'),\n",
					"                    IFNULL(standard.documenturi,'.'),\n",
					"                    IFNULL(standard.path,'.'),\n",
					"                    IFNULL(standard.viruscheckstatus,'.'),\n",
					"                    IFNULL(standard.filemd5,'.'),\n",
					"                    IFNULL(standard.datecreated,'.'),\n",
					"                    IFNULL(standard.lastmodified,'.'),\n",
					"                    IFNULL(standard.casetype,'.'),\n",
					"                    IFNULL(standard.documentstatus,'.'),\n",
					"                    IFNULL(standard.redactedstatus,'.'),\n",
					"                    IFNULL(standard.publishedstatus,'.'),\n",
					"                    IFNULL(standard.datepublished,'.'),\n",
					"                    IFNULL(standard.documenttype,'.'),\n",
					"                    IFNULL(standard.securityclassification,'.'),\n",
					"                    IFNULL(standard.sourcesystem,'.'),\n",
					"                    IFNULL(standard.origin,'.'),\n",
					"                    IFNULL(standard.owner,'.'),\n",
					"                    IFNULL(standard.author,'.'),\n",
					"                    IFNULL(standard.representative,'.'),\n",
					"                    IFNULL(standard.description,'.'),\n",
					"                    IFNULL(standard.stage\t,'.'),\n",
					"                    IFNULL(standard.filter1,'.'),\n",
					"                    IFNULL(standard.filter2,'.')\n",
					"                )) <> Target.RowID\n",
					"UNION\n",
					"-- 4. Old records that need to have isActive set to 'N'\n",
					"SELECT\n",
					"    Target.AIEDocumentDataID\n",
					"    ,Target.DocumentID \n",
					"    ,Target.CaseReference\n",
					"    ,Target.DocumentReference\n",
					"    ,Target.Version\n",
					"    ,Target.ExaminationRefNo\n",
					"    ,Target.FileName\n",
					"    ,Target.OriginalFileName\n",
					"    ,Target.Size\n",
					"    ,Target.Mime\n",
					"    ,Target.DocumentURI\n",
					"    ,Target.Path\n",
					"    ,Target.VirusCheckStatus\n",
					"    ,Target.FileMD5\n",
					"    ,Target.DateCreated\n",
					"    ,Target.LastModified\n",
					"    ,Target.CaseType\n",
					"    ,Target.DocumentStatus\n",
					"    ,Target.RedactedStatus\n",
					"    ,Target.PublishedStatus\n",
					"    ,Target.DatePublished\n",
					"    ,Target.DocumentType\n",
					"    ,Target.SecurityClassification\n",
					"    ,Target.SourceSystem\n",
					"    ,Target.Origin\n",
					"    ,Target.Owner\n",
					"    ,Target.Author\n",
					"    ,Target.Representative\n",
					"    ,Target.Description \n",
					"    ,Target.Stage \n",
					"    ,Target.Filter1\n",
					"    ,Target.Filter2\n",
					"    ,Target.Migrated\n",
					"    ,Target. ODTSourceSystem\n",
					"    ,Target.SourceSystemID\n",
					"    ,Target.IngestionDate\n",
					"    ,date_sub(to_timestamp(standard.expected_from),1) AS ValidTo\n",
					"    ,Target.RowID -- this hash should contain all the defining fields\n",
					"    ,'N' AS IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.main_sourcesystem_fact AS source_system\n",
					"    INNER JOIN Latest\n",
					"        ON source_system.Description = \"DocumentTree\"\n",
					"        AND source_system.IsActive = 'Y'\n",
					"    INNER JOIN odw_standardised_db.aie_document_data AS standard\n",
					"        ON Latest.LatestDate = standard.expected_from\n",
					"    INNER JOIN odw_harmonised_db.aie_document_data AS Target\n",
					"        ON standard.documentID = Target.documentID\n",
					"        AND standard.Version = Target.Version\n",
					"        AND standard.Mime = Target.Mime\n",
					"        AND md5(\n",
					"                concat(\n",
					"                    IFNULL(standard.documentid,'.'),\n",
					"                    IFNULL(standard.caseref,'.'),\n",
					"                    IFNULL(standard.documentreference,'.'),\n",
					"                    IFNULL(standard.version,'.'),\n",
					"                    IFNULL(standard.examinationrefno,'.'),\n",
					"                    IFNULL(standard.filename,'.'),\n",
					"                    IFNULL(standard.originalfilename,'.'),\n",
					"                    IFNULL(standard.size,'.'),\n",
					"                    IFNULL(standard.mime,'.'),\n",
					"                    IFNULL(standard.documenturi,'.'),\n",
					"                    IFNULL(standard.path,'.'),\n",
					"                    IFNULL(standard.viruscheckstatus,'.'),\n",
					"                    IFNULL(standard.filemd5,'.'),\n",
					"                    IFNULL(standard.datecreated,'.'),\n",
					"                    IFNULL(standard.lastmodified,'.'),\n",
					"                    IFNULL(standard.casetype,'.'),\n",
					"                    IFNULL(standard.documentstatus,'.'),\n",
					"                    IFNULL(standard.redactedstatus,'.'),\n",
					"                    IFNULL(standard.publishedstatus,'.'),\n",
					"                    IFNULL(standard.datepublished,'.'),\n",
					"                    IFNULL(standard.documenttype,'.'),\n",
					"                    IFNULL(standard.securityclassification,'.'),\n",
					"                    IFNULL(standard.sourcesystem,'.'),\n",
					"                    IFNULL(standard.origin,'.'),\n",
					"                    IFNULL(standard.owner,'.'),\n",
					"                    IFNULL(standard.author,'.'),\n",
					"                    IFNULL(standard.representative,'.'),\n",
					"                    IFNULL(standard.description,'.'),\n",
					"                    IFNULL(standard.stage\t,'.'),\n",
					"                    IFNULL(standard.filter1,'.'),\n",
					"                    IFNULL(standard.filter2,'.')\n",
					"                )) <> Target.RowID"
				],
				"execution_count": 17
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View aie_document_data_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.aie_document_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"-- merge into dim table\n",
					"\n",
					"MERGE INTO odw_harmonised_db.aie_document_data AS Target\n",
					"USING aie_document_data_input AS Source\n",
					"    ON Source.DocumentID = Target.DocumentID \n",
					"    AND Source.Version = Target.Version \n",
					"    AND Source.Mime = Target.Mime \n",
					"    AND Source.RowID = Target.RowID\n",
					"-- For Updates existing rows\n",
					"WHEN MATCHED THEN \n",
					"    UPDATE \n",
					"    SET\n",
					"        Target.ValidTo = Source.ValidTo,\n",
					"        Target.IsActive = Source.IsActive\n",
					"-- Insert completely new rows\n",
					"WHEN NOT MATCHED \n",
					"    THEN INSERT (\n",
					"        AIEDocumentDataID,\n",
					"        DocumentID,\n",
					"        CaseReference,\n",
					"        DocumentReference,\n",
					"        Version,\n",
					"        ExaminationRefNo,\n",
					"        FileName,\n",
					"        OriginalFileName,\n",
					"        Size,\n",
					"        Mime,\n",
					"        DocumentURI,\n",
					"        Path,\n",
					"        VirusCheckStatus,\n",
					"        FileMD5,\n",
					"        DateCreated,\n",
					"        LastModified,\n",
					"        CaseType,\n",
					"        DocumentStatus,\n",
					"        RedactedStatus,\n",
					"        PublishedStatus,\n",
					"        DatePublished,\n",
					"        DocumentType,\n",
					"        SecurityClassification,\n",
					"        SourceSystem,\n",
					"        Origin,\n",
					"        Owner,\n",
					"        Author,\n",
					"        Representative,\n",
					"        Description,\n",
					"        Stage,\n",
					"        Filter1,\n",
					"        Filter2,\n",
					"        Migrated,\n",
					"        ODTSourceSystem,\n",
					"        SourceSystemID,\n",
					"        IngestionDate,\n",
					"        ValidTo,\n",
					"        RowID,\n",
					"        IsActive)\n",
					"    VALUES (\n",
					"        Source.AIEDocumentDataID,\n",
					"        Source.DocumentID,\n",
					"        Source.CaseReference,\n",
					"        Source.DocumentReference,\n",
					"        Source.Version,\n",
					"        Source.ExaminationRefNo,\n",
					"        Source.FileName,\n",
					"        Source.OriginalFileName,\n",
					"        Source.Size,\n",
					"        Source.Mime,\n",
					"        Source.DocumentURI,\n",
					"        Source.Path,\n",
					"        Source.VirusCheckStatus,\n",
					"        Source.FileMD5,\n",
					"        Source.DateCreated,\n",
					"        Source.LastModified,\n",
					"        Source.CaseType,\n",
					"        Source.DocumentStatus,\n",
					"        Source.RedactedStatus,\n",
					"        Source.PublishedStatus,\n",
					"        Source.DatePublished,\n",
					"        Source.DocumentType,\n",
					"        Source.SecurityClassification,\n",
					"        Source.SourceSystem,\n",
					"        Source.Origin,\n",
					"        Source.Owner,\n",
					"        Source.Author,\n",
					"        Source.Representative,\n",
					"        Source.Description,\n",
					"        Source.Stage,\n",
					"        Source.Filter1,\n",
					"        Source.Filter2,\n",
					"        Source.Migrated,\n",
					"        Source.ODTSourceSystem,\n",
					"        Source.SourceSystemID,\n",
					"        Source.IngestionDate,\n",
					"        Source.ValidTo,\n",
					"        Source.RowID,\n",
					"        Source.IsActive)\n",
					"     ;   "
				],
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.aie_document_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"-- Insert new aie_document_data\n",
					"\n",
					"INSERT OVERWRITE odw_harmonised_db.aie_document_data\n",
					"\n",
					"SELECT \n",
					"    ROW_NUMBER() OVER (ORDER BY AIEDocumentDataID NULLS LAST) AS AIEDocumentDataID,\n",
					"    DocumentID,\n",
					"    CaseReference,\n",
					"    DocumentReference,\n",
					"    Version,\n",
					"    ExaminationRefNo,\n",
					"    FileName,\n",
					"    OriginalFileName,\n",
					"    Size,\n",
					"    Mime,\n",
					"    DocumentURI,\n",
					"    Path,\n",
					"    VirusCheckStatus,\n",
					"    FileMD5,\n",
					"    DateCreated,\n",
					"    LastModified,\n",
					"    CaseType,\n",
					"    DocumentStatus,\n",
					"    RedactedStatus,\n",
					"    PublishedStatus,\n",
					"    DatePublished,\n",
					"    DocumentType,\n",
					"    SecurityClassification,\n",
					"    SourceSystem,\n",
					"    Origin,\n",
					"    Owner,\n",
					"    Author,\n",
					"    Representative,\n",
					"    Description,\n",
					"    Stage,\n",
					"    Filter1,\n",
					"    Filter2,\n",
					"    Migrated,\n",
					"    ODTSourceSystem,\n",
					"    SourceSystemID,\n",
					"    IngestionDate,\n",
					"    ValidTo,\n",
					"    RowID,\n",
					"    IsActive\n",
					"FROM odw_harmonised_db.aie_document_data;\n",
					""
				],
				"execution_count": 20
			}
		]
	}
}