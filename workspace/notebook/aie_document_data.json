{
	"name": "aie_document_data",
	"properties": {
		"folder": {
			"name": "odw-harmonised/DocumentTree"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodwpr",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "570d4921-e6be-4949-9147-65ac7afdd61d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodwpr",
				"name": "pinssynspodwpr",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodwpr",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View aie_document_data is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build aie_document_data table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW aie_document_data_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN T1.documentid IS NULL\r\n",
					"        THEN T3.AIEDocumentDataID\r\n",
					"        ELSE NULL\r\n",
					"    END                             AS AIEDocumentDataID,\r\n",
					"    T1.documentid\t                AS DocumentID,\r\n",
					"    T1.caseref\t                    AS CaseReference,\r\n",
					"    T1.documentreference\t        AS DocumentReference,\r\n",
					"    T1.version\t                    AS Version,\r\n",
					"    T1.examinationrefno\t            AS ExaminationRefNo,\r\n",
					"    T1.filename\t                    AS FileName,\r\n",
					"    T1.originalfilename\t            AS OriginalFileName,\r\n",
					"    T1.size\t                        AS Size,\r\n",
					"    T1.mime\t                        AS Mime,\r\n",
					"    T1.documenturi\t                AS DocumentURI,\r\n",
					"    T1.path\t                        AS Path,\r\n",
					"    T1.viruscheckstatus\t            AS VirusCheckStatus,\r\n",
					"    T1.filemd5\t                    AS FileMD5,\r\n",
					"    T1.datecreated\t                AS DateCreated,\r\n",
					"    T1.lastmodified\t                AS LastModified,\r\n",
					"    T1.casetype\t                    AS CaseType,\r\n",
					"    T1.documentstatus\t            AS DocumentStatus,\r\n",
					"    T1.redactedstatus\t            AS RedactedStatus,\r\n",
					"    T1.publishedstatus\t            AS PublishedStatus,\r\n",
					"    T1.datepublished\t            AS DatePublished,\r\n",
					"    T1.documenttype\t                AS DocumentType\t,\r\n",
					"    T1.securityclassification       AS SecurityClassification,\r\n",
					"    T1.sourcesystem\t                AS SourceSystem,\r\n",
					"    T1.origin\t                    AS Origin,\r\n",
					"    T1.owner\t                    AS Owner,\r\n",
					"    T1.author\t                    AS Author,\r\n",
					"    T1.representative\t            AS Representative,\r\n",
					"    T1.description\t                AS Description,\r\n",
					"    T1.stage\t                    AS Stage,\r\n",
					"    T1.filter1\t                    AS Filter1,\r\n",
					"    T1.filter2\t                    AS Filter2,\r\n",
					"    \"0\"                             AS Migrated,\r\n",
					"    \"Horizon\"                       AS ODTSourceSystem,\r\n",
					"    T2.SourceSystemID               AS SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)  AS IngestionDate,\r\n",
					"    NULL                            AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.documentid,'.'),\r\n",
					"            IFNULL(T1.caseref,'.'),\r\n",
					"            IFNULL(T1.documentreference,'.'),\r\n",
					"            IFNULL(T1.version,'.'),\r\n",
					"            IFNULL(T1.examinationrefno,'.'),\r\n",
					"            IFNULL(T1.filename,'.'),\r\n",
					"            IFNULL(T1.originalfilename,'.'),\r\n",
					"            IFNULL(T1.size,'.'),\r\n",
					"            IFNULL(T1.mime,'.'),\r\n",
					"            IFNULL(T1.documenturi,'.'),\r\n",
					"            IFNULL(T1.path,'.'),\r\n",
					"            IFNULL(T1.viruscheckstatus,'.'),\r\n",
					"            IFNULL(T1.filemd5,'.'),\r\n",
					"            IFNULL(T1.datecreated,'.'),\r\n",
					"            IFNULL(T1.lastmodified,'.'),\r\n",
					"            IFNULL(T1.casetype,'.'),\r\n",
					"            IFNULL(T1.documentstatus,'.'),\r\n",
					"            IFNULL(T1.redactedstatus,'.'),\r\n",
					"            IFNULL(T1.publishedstatus,'.'),\r\n",
					"            IFNULL(T1.datepublished,'.'),\r\n",
					"            IFNULL(T1.documenttype,'.'),\r\n",
					"            IFNULL(T1.securityclassification,'.'),\r\n",
					"            IFNULL(T1.sourcesystem,'.'),\r\n",
					"            IFNULL(T1.origin,'.'),\r\n",
					"            IFNULL(T1.owner,'.'),\r\n",
					"            IFNULL(T1.author,'.'),\r\n",
					"            IFNULL(T1.representative,'.'),\r\n",
					"            IFNULL(T1.description,'.'),\r\n",
					"            IFNULL(T1.stage\t,'.'),\r\n",
					"            IFNULL(T1.filter1,'.'),\r\n",
					"            IFNULL(T1.filter2,'.')\r\n",
					"        ))                          AS RowID, -- this hash should contain all the defining fields\r\n",
					"    'Y'                             AS IsActive,\r\n",
					"    T3.IsActive                     AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.aie_document_data T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 \r\n",
					"    ON \"DocumentTree\" = T2.Description AND \r\n",
					"        T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.aie_document_data T3 \r\n",
					"    ON  T1.documentid = T3.DocumentID AND \r\n",
					"        T1.datecreated = T3.DateCreated AND\r\n",
					"        T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    (CASE\r\n",
					"        WHEN T1.documentid = T3.DocumentID AND\r\n",
					"        T1.datecreated = T3.DateCreated AND\r\n",
					"        md5(\r\n",
					"            concat(\r\n",
					"                IFNULL(T1.documentid,'.'),\r\n",
					"                IFNULL(T1.caseref,'.'),\r\n",
					"                IFNULL(T1.documentreference,'.'),\r\n",
					"                IFNULL(T1.version,'.'),\r\n",
					"                IFNULL(T1.examinationrefno,'.'),\r\n",
					"                IFNULL(T1.filename,'.'),\r\n",
					"                IFNULL(T1.originalfilename,'.'),\r\n",
					"                IFNULL(T1.size,'.'),\r\n",
					"                IFNULL(T1.mime,'.'),\r\n",
					"                IFNULL(T1.documenturi,'.'),\r\n",
					"                IFNULL(T1.path,'.'),\r\n",
					"                IFNULL(T1.viruscheckstatus,'.'),\r\n",
					"                IFNULL(T1.filemd5,'.'),\r\n",
					"                IFNULL(T1.datecreated,'.'),\r\n",
					"                IFNULL(T1.lastmodified,'.'),\r\n",
					"                IFNULL(T1.casetype,'.'),\r\n",
					"                IFNULL(T1.documentstatus,'.'),\r\n",
					"                IFNULL(T1.redactedstatus,'.'),\r\n",
					"                IFNULL(T1.publishedstatus,'.'),\r\n",
					"                IFNULL(T1.datepublished,'.'),\r\n",
					"                IFNULL(T1.documenttype,'.'),\r\n",
					"                IFNULL(T1.securityclassification,'.'),\r\n",
					"                IFNULL(T1.sourcesystem,'.'),\r\n",
					"                IFNULL(T1.origin,'.'),\r\n",
					"                IFNULL(T1.owner,'.'),\r\n",
					"                IFNULL(T1.author,'.'),\r\n",
					"                IFNULL(T1.representative,'.'),\r\n",
					"                IFNULL(T1.description,'.'),\r\n",
					"                IFNULL(T1.stage\t,'.'),\r\n",
					"                IFNULL(T1.filter1,'.'),\r\n",
					"                IFNULL(T1.filter2,'.')\r\n",
					"            )) <> T3.RowID  -- same record, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T1.documentid NOT IN (SELECT DISTINCT(DocumentID) FROM odw_harmonised_db.aie_document_data)\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END  = 'Y' )\r\n",
					"    AND T1.documentid IS NOT NULL\r\n",
					"    AND T1.expected_from = (SELECT MAX(expected_from) FROM odw_standardised_db.aie_document_data)\r\n",
					";"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT count(*) FROM odw_standardised_db.aie_document_data;\n",
					"SELECT count(*) FROM aie_document_data_new;\n",
					"SELECT count(*) FROM odw_harmonised_db.aie_document_data;\n",
					"\n",
					"SELECT * FROM aie_document_data_new WHERE DocumentID = '15325199';\n",
					"SELECT * FROM odw_harmonised_db.aie_document_data WHERE DocumentID = '15325199';"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View aie_document_data_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW aie_document_data_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    AIEDocumentDataID,\r\n",
					"    DocumentID,\r\n",
					"    CaseReference,\r\n",
					"    DocumentReference,\r\n",
					"    Version,\r\n",
					"    ExaminationRefNo,\r\n",
					"    FileName,\r\n",
					"    OriginalFileName,\r\n",
					"    Size,\r\n",
					"    Mime,\r\n",
					"    DocumentURI,\r\n",
					"    Path,\r\n",
					"    VirusCheckStatus,\r\n",
					"    FileMD5,\r\n",
					"    DateCreated,\r\n",
					"    LastModified,\r\n",
					"    CaseType,\r\n",
					"    DocumentStatus,\r\n",
					"    RedactedStatus,\r\n",
					"    PublishedStatus,\r\n",
					"    DatePublished,\r\n",
					"    DocumentType,\r\n",
					"    SecurityClassification,\r\n",
					"    SourceSystem,\r\n",
					"    Origin,\r\n",
					"    Owner,\r\n",
					"    Author,\r\n",
					"    Representative,\r\n",
					"    Description,\r\n",
					"    Stage,\r\n",
					"    Filter1,\r\n",
					"    Filter2,\r\n",
					"    Migrated,\r\n",
					"    ODTSourceSystem,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"\r\n",
					"From aie_document_data_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    AIEDocumentDataID,\r\n",
					"    DocumentID,\r\n",
					"    CaseReference,\r\n",
					"    DocumentReference,\r\n",
					"    Version,\r\n",
					"    ExaminationRefNo,\r\n",
					"    FileName,\r\n",
					"    OriginalFileName,\r\n",
					"    Size,\r\n",
					"    Mime,\r\n",
					"    DocumentURI,\r\n",
					"    Path,\r\n",
					"    VirusCheckStatus,\r\n",
					"    FileMD5,\r\n",
					"    DateCreated,\r\n",
					"    LastModified,\r\n",
					"    CaseType,\r\n",
					"    DocumentStatus,\r\n",
					"    RedactedStatus,\r\n",
					"    PublishedStatus,\r\n",
					"    DatePublished,\r\n",
					"    DocumentType,\r\n",
					"    SecurityClassification,\r\n",
					"    SourceSystem,\r\n",
					"    Origin,\r\n",
					"    Owner,\r\n",
					"    Author,\r\n",
					"    Representative,\r\n",
					"    Description,\r\n",
					"    Stage,\r\n",
					"    Filter1,\r\n",
					"    Filter2,\r\n",
					"    Migrated,\r\n",
					"    ODTSourceSystem,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.aie_document_data\r\n",
					"WHERE DocumentID IN \r\n",
					"    (SELECT DocumentID \r\n",
					"    FROM aie_document_data_new \r\n",
					"    WHERE AIEDocumentDataID IS NULL)\r\n",
					"AND DateCreated IN\r\n",
					"    (SELECT DateCreated \r\n",
					"    FROM aie_document_data_new \r\n",
					"    WHERE DateCreated IS NULL)\r\n",
					"AND IsActive = 'Y'; \r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM aie_document_data_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW aie_document_data_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    AIEDocumentDataID,\n",
					"    DocumentID,\n",
					"    CaseReference,\n",
					"    DocumentReference,\n",
					"    Version,\n",
					"    ExaminationRefNo,\n",
					"    FileName,\n",
					"    OriginalFileName,\n",
					"    Size,\n",
					"    Mime,\n",
					"    DocumentURI,\n",
					"    Path,\n",
					"    VirusCheckStatus,\n",
					"    FileMD5,\n",
					"    DateCreated,\n",
					"    LastModified,\n",
					"    CaseType,\n",
					"    DocumentStatus,\n",
					"    RedactedStatus,\n",
					"    PublishedStatus,\n",
					"    DatePublished,\n",
					"    DocumentType,\n",
					"    SecurityClassification,\n",
					"    SourceSystem,\n",
					"    Origin,\n",
					"    Owner,\n",
					"    Author,\n",
					"    Representative,\n",
					"    Description,\n",
					"    Stage,\n",
					"    Filter1,\n",
					"    Filter2,\n",
					"    Migrated,\n",
					"    ODTSourceSystem,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM aie_document_data_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View aie_document_data_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.aie_document_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.aie_document_data  AS Target\r\n",
					"USING aie_document_data_changed_rows_final      AS Source\r\n",
					"\r\n",
					"ON Source.DocumentID = Target.DocumentID AND\r\n",
					"        Source.DateCreated = Target.DateCreated AND\r\n",
					"        Target.IsActive = 'Y'\r\n",
					"\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (\r\n",
					"        AIEDocumentDataID,\r\n",
					"        DocumentID,\r\n",
					"        CaseReference,\r\n",
					"        DocumentReference,\r\n",
					"        Version,\r\n",
					"        ExaminationRefNo,\r\n",
					"        FileName,\r\n",
					"        OriginalFileName,\r\n",
					"        Size,\r\n",
					"        Mime,\r\n",
					"        DocumentURI,\r\n",
					"        Path,\r\n",
					"        VirusCheckStatus,\r\n",
					"        FileMD5,\r\n",
					"        DateCreated,\r\n",
					"        LastModified,\r\n",
					"        CaseType,\r\n",
					"        DocumentStatus,\r\n",
					"        RedactedStatus,\r\n",
					"        PublishedStatus,\r\n",
					"        DatePublished,\r\n",
					"        DocumentType,\r\n",
					"        SecurityClassification,\r\n",
					"        SourceSystem,\r\n",
					"        Origin,\r\n",
					"        Owner,\r\n",
					"        Author,\r\n",
					"        Representative,\r\n",
					"        Description,\r\n",
					"        Stage,\r\n",
					"        Filter1,\r\n",
					"        Filter2,\r\n",
					"        Migrated,\r\n",
					"        ODTSourceSystem,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)\r\n",
					"    VALUES (\r\n",
					"        Source.AIEDocumentDataID,\r\n",
					"        Source.DocumentID,\r\n",
					"        Source.CaseReference,\r\n",
					"        Source.DocumentReference,\r\n",
					"        Source.Version,\r\n",
					"        Source.ExaminationRefNo,\r\n",
					"        Source.FileName,\r\n",
					"        Source.OriginalFileName,\r\n",
					"        Source.Size,\r\n",
					"        Source.Mime,\r\n",
					"        Source.DocumentURI,\r\n",
					"        Source.Path,\r\n",
					"        Source.VirusCheckStatus,\r\n",
					"        Source.FileMD5,\r\n",
					"        Source.DateCreated,\r\n",
					"        Source.LastModified,\r\n",
					"        Source.CaseType,\r\n",
					"        Source.DocumentStatus,\r\n",
					"        Source.RedactedStatus,\r\n",
					"        Source.PublishedStatus,\r\n",
					"        Source.DatePublished,\r\n",
					"        Source.DocumentType,\r\n",
					"        Source.SecurityClassification,\r\n",
					"        Source.SourceSystem,\r\n",
					"        Source.Origin,\r\n",
					"        Source.Owner,\r\n",
					"        Source.Author,\r\n",
					"        Source.Representative,\r\n",
					"        Source.Description,\r\n",
					"        Source.Stage,\r\n",
					"        Source.Filter1,\r\n",
					"        Source.Filter2,\r\n",
					"        Source.Migrated,\r\n",
					"        Source.ODTSourceSystem,\r\n",
					"        Source.SourceSystemID,\r\n",
					"        Source.IngestionDate,\r\n",
					"        Source.ValidTo,\r\n",
					"        Source.RowID,\r\n",
					"        Source.IsActive)\r\n",
					"     ;   "
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.aie_document_data is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new aie_document_data\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.aie_document_data\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY AIEDocumentDataID NULLS LAST) AS AIEDocumentDataID,\r\n",
					"    DocumentID,\r\n",
					"    CaseReference,\r\n",
					"    DocumentReference,\r\n",
					"    Version,\r\n",
					"    ExaminationRefNo,\r\n",
					"    FileName,\r\n",
					"    OriginalFileName,\r\n",
					"    Size,\r\n",
					"    Mime,\r\n",
					"    DocumentURI,\r\n",
					"    Path,\r\n",
					"    VirusCheckStatus,\r\n",
					"    FileMD5,\r\n",
					"    DateCreated,\r\n",
					"    LastModified,\r\n",
					"    CaseType,\r\n",
					"    DocumentStatus,\r\n",
					"    RedactedStatus,\r\n",
					"    PublishedStatus,\r\n",
					"    DatePublished,\r\n",
					"    DocumentType,\r\n",
					"    SecurityClassification,\r\n",
					"    SourceSystem,\r\n",
					"    Origin,\r\n",
					"    Owner,\r\n",
					"    Author,\r\n",
					"    Representative,\r\n",
					"    Description,\r\n",
					"    Stage,\r\n",
					"    Filter1,\r\n",
					"    Filter2,\r\n",
					"    Migrated,\r\n",
					"    ODTSourceSystem,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.aie_document_data;\r\n",
					""
				],
				"execution_count": 8
			}
		]
	}
}