{
	"name": "vw_fact_absence_all",
	"properties": {
		"folder": {
			"name": "odw-curated/curatedviews"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f6a9b20b-24b9-48af-b0a0-6850ceaad1f9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### The purpose of this notebook is to read data from Harmoised layer and build a view & table for Power BI use.\n",
					"\n",
					"**Author** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   **Created Date** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; **Description**  \n",
					"Prathap Adicherla &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;01-April-2025 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fact Absence view :\n",
					"\n",
					"Combining sickness-related absences (with additional sickness details like duration and classification) with non-sickness absences\n",
					"\n",
					"Calculating standardized leave metrics (Leave_ONS) based on work schedules\n",
					"\n",
					"Providing a comprehensive dataset for absence analysis, including type, duration, and work schedule adjustments\n",
					";"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf, col, lit, when, coalesce, concat, sum, avg, max, min, count, countDistinct, date_format, to_date, datediff, months_between, year, month,  hour, minute, second, expr, asc, desc\n",
					"from pyspark.sql.types import DateType, TimestampType, StringType, IntegerType, FloatType, DoubleType, BooleanType, StructType, StructField, ArrayType, MapType\n",
					"from pyspark.sql.window import Window\n",
					"from pyspark.sql.functions import row_number, rank, dense_rank, lag, lead, ntile\n",
					"from pyspark.sql import SQLContext\n",
					"from pyspark.sql import DataFrame\n",
					"from pyspark.sql import functions as F\n",
					"from pyspark.sql.avro.functions import from_avro, to_avro\n",
					"from pyspark.sql.streaming import DataStreamReader, DataStreamWriter\n",
					"from pyspark.sql.utils import AnalysisException\n",
					"from pyspark.sql.catalog import Catalog\n",
					"from pyspark.sql.column import Column\n",
					"from pyspark.sql.group import GroupedData\n",
					"from pyspark.sql.pandas.functions import pandas_udf\n",
					"\n",
					"from datetime import datetime, timedelta\n",
					"import pandas as pd\n",
					"import numpy as np"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"\n",
					"\n",
					"CREATE VIEW IF NOT EXISTS odw_curated_db.vw_fact_absence_all\n",
					"AS\n",
					"\n",
					"SELECT \n",
					"    faa.absencedate,\n",
					"    faa.absencehours,\n",
					"    faa.staffnumber,\n",
					"    faa.WorkScheduleRule,\n",
					"    faa.AbsType,\n",
					"    faa.SicknessGroup,\n",
					"    faa.AttendanceorAbsenceType,\n",
					"    faa.Leave,\n",
					" CASE DAYOFWEEK(absencedate)\n",
					"        WHEN 2 THEN ws.Mo/7.4  -- Monday\n",
					"        WHEN 3 THEN ws.Tu/7.4   -- Tuesday\n",
					"        WHEN 4 THEN ws.We/7.4   -- Wednesday\n",
					"        WHEN 5 THEN ws.Th/7.4   -- Thursday\n",
					"        WHEN 6 THEN ws.Fr/7.4   -- Friday\n",
					"        ELSE NULL\n",
					"    END AS Leave_ONS,\n",
					"    faa.PSGroup,\n",
					"    faa.PersonnelArea,\n",
					"    faa.PersonnelSubarea,\n",
					"    fas.sickness_id,\n",
					"    fas.Days AS sicknesslength,\n",
					"    CASE\n",
					"        WHEN fas.Days > 20.0 THEN 'long-term'\n",
					"        ELSE 'short-term'\n",
					"    END AS sicknesslengthtype\n",
					"FROM \n",
					"    odw_harmonised_db.sap_hr_fact_absence_all faa\n",
					"    LEFT JOIN odw_harmonised_db.sap_hr_fact_absence_sickness fas ON faa.staffnumber = fas.StaffNumber\n",
					"    LEFT JOIN odw_standardised_db.work_schedules ws ON faa.WorkScheduleRule = ws.WorkScheduleRule\n",
					"WHERE \n",
					"    faa.AttendanceorAbsenceType = 'Sickness'\n",
					"    AND \n",
					"    faa.absencedate BETWEEN fas.sickness_start AND fas.sickness_end\n",
					"\n",
					"UNION\n",
					"\n",
					"SELECT \n",
					"    faa.absencedate,\n",
					"    faa.absencehours,\n",
					"    faa.staffnumber,\n",
					"    faa.WorkScheduleRule,\n",
					"    faa.AbsType,\n",
					"    faa.SicknessGroup,\n",
					"    faa.AttendanceorAbsenceType,\n",
					"    faa.Leave,\n",
					" CASE DAYOFWEEK(absencedate)\n",
					"        WHEN 2 THEN ws.Mo/7.4  -- Monday\n",
					"        WHEN 3 THEN ws.Tu/7.4   -- Tuesday\n",
					"        WHEN 4 THEN ws.We/7.4   -- Wednesday\n",
					"        WHEN 5 THEN ws.Th/7.4   -- Thursday\n",
					"        WHEN 6 THEN ws.Fr/7.4   -- Friday\n",
					"        ELSE NULL\n",
					"    END AS Leave_ONS,\n",
					"    faa.PSGroup,\n",
					"    faa.PersonnelArea,\n",
					"    faa.PersonnelSubarea,\n",
					"    NULL AS sickness_id,\n",
					"    NULL AS sicknesslength,\n",
					"    NULL AS sicknesslengthtype\n",
					"FROM \n",
					"    odw_harmonised_db.sap_hr_fact_absence_all faa\n",
					"    LEFT JOIN odw_standardised_db.work_schedules ws ON faa.WorkScheduleRule = ws.WorkScheduleRule\n",
					"WHERE \n",
					"    faa.AttendanceorAbsenceType <> 'Sickness'\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"create or replace table odw_curated_db.pbi_fact_absence_all\n",
					"using delta\n",
					"as\n",
					"SELECT * FROM odw_curated_db.vw_fact_absence_all"
				],
				"execution_count": 4
			}
		]
	}
}