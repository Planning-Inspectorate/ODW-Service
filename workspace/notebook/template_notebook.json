{
	"name": "template_notebook",
	"properties": {
		"folder": {
			"name": "archive"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4c0fea7e-8522-48a6-83bc-0eb66c2cbd58"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 32,
				"extraHeader": null,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\n",
					"storage_account=mssparkutils.notebook.run('/utils/py_utils_get_storage_account')"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"raw_storage_container = 'abfss://odw-raw@' + storage_account\r\n",
					"raw_storage_source_folder = 'sap-load-tables'\r\n",
					"raw_storage_source_name = 'sap-pins-email'\r\n",
					"\r\n",
					"workspace_storage_container = 'abfss://odw-workspace@' + storage_account\r\n",
					"workspace_storage_source_folder = 'test'\r\n",
					"workspace_storage_source_name = 'test-sap-pins-email'\r\n",
					"\r\n",
					"standardised_storage_container = 'abfss://odw-standardised@' + storage_account\r\n",
					"standardised_storage_source_folder = 'test'\r\n",
					"standardised_storage_source_name = 'test-sap-pins-email'\r\n",
					"\r\n",
					"sourceColumnNames=\"Staff_Number,Nickname,Last_name,Email_Address\"\r\n",
					"\r\n",
					"delta_lake_table_name = \"test_sap_pins_email\"\r\n",
					"delta_lake_database_name = 'odw_standardised_db'\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"sourceColumnNamesList = sourceColumnNames.split (\",\")\r\n",
					"sourceStructString = StructType()\r\n",
					"for sourceColumn in sourceColumnNamesList:\r\n",
					"    sourceStructString.add(StructField(sourceColumn ,StringType(), True))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"raw_storage_file_path = raw_storage_container +'/' + raw_storage_source_folder + '/' + raw_storage_source_name\r\n",
					"print(raw_storage_file_path)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"sap_pins_email_DF=spark.read.option(\"delimiter\",\"|\").option(\"header\",\"true\").schema(sourceStructString).csv(raw_storage_file_path)\r\n",
					"display(sap_pins_email_DF)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"workspace_storage_full_file_path = workspace_storage_container +'/' + workspace_storage_source_folder + '/' + workspace_storage_source_name\r\n",
					"sap_pins_email_DF.write.option(\"header\", \"true\").format(\"parquet\").mode('overwrite').save(workspace_storage_full_file_path)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from delta.tables import DeltaTable\r\n",
					"standardised_storage_delta_table_path =  standardised_storage_container +'/' + standardised_storage_source_folder + '/' + standardised_storage_source_name\r\n",
					"sourceParquetDF = spark.read.option(\"inferSchema\",\"true\").format('parquet').option(\"recursiveFileLookup\", \"true\").load(workspace_storage_full_file_path)\r\n",
					"sourceParquetDF.write.format('delta').save(standardised_storage_delta_table_path)\r\n",
					"spark.sql(\"CREATE TABLE {0}.{1} USING DELTA LOCATION '{2}'\".format(delta_lake_database_name,delta_lake_table_name,standardised_storage_delta_table_path))\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_standardised_db.test_sap_pins_email"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}