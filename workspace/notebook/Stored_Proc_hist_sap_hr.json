{
	"name": "Stored_Proc_hist_sap_hr",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "cbdc37ad-d2c2-4bd3-82d9-5ce41f92602c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"--delete month end data if already loaded, based on source file name\r\n",
					"-- delete from [Hist].[SAP_HR]\r\n",
					"-- where Report_MonthEnd_Date in\r\n",
					"-- (select Report_MonthEnd_Date\r\n",
					"-- from load.SAP_HR\r\n",
					"-- group by Report_MonthEnd_Date);\r\n",
					"\r\n",
					"declare @file_date date\r\n",
					"set @file_date = (select top 1 (convert(date, substring([file_name], 19, 8), 108)) from sap_hr.leave_entitlement);\r\n",
					"\r\n",
					"with staff_cost as\r\n",
					"(\r\n",
					"\tselect distinct\r\n",
					"\t\th.Pers#No# as staff_number,\r\n",
					"\t\th.[PS group] as grade,\r\n",
					"\t\th.[Annual salary] as salary,\r\n",
					"\t\tcast(cast(h.[Annual salary] as float)/(365.0*7.4) as float) as hourly_rate,\r\n",
					"\t\tcast(case sign(datediff(dd, cast(le.[Ded# from] as date), @file_date))\r\n",
					"\t\t\t\twhen 1 then le.[Ded# from]\r\n",
					"\t\t\t\twhen 0 then le.[Ded# from]\r\n",
					"\t\t\t\telse dateadd(year, -1, le.[Ded# from])\r\n",
					"\t\t\tend as date) as leave_start_date,\r\n",
					"\t\t(convert(date, substring(le.[file_name], 19, 8), 108)) as date_from_file_name,\r\n",
					"\t\tle.[Number]*abs((((datediff(day, cast(case sign(datediff(dd, cast(le.[Ded# from] as date), @file_date))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\twhen 1 then le.[Ded# from]\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\telse dateadd(year, -1, le.[Ded# from])\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\tend as date), \r\n",
					"\t\t\t\t\t\t\t\t(convert(date, substring(le.[file_name], 19, 8), 108))))/364.25)%1)) as expected_leave_taken_hrs,\r\n",
					"\r\n",
					"\t\t\tle.[Number]*(1 - abs((((datediff(day, cast(case sign(datediff(dd, cast(le.[Ded# from] as date), @file_date))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\twhen 1 then le.[Ded# from]\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\telse dateadd(year, -1, le.[Ded# from])\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\tend as date), \r\n",
					"\t\t\t\t\t\t\t\t(convert(date, substring(le.[file_name], 19, 8), 108))))/364.25)%1))) as expected_leave_hours_remaining ,\r\n",
					"\r\n",
					"\t\t\t[Number] as leave_allowance,\r\n",
					"\t\t\tabs(((datediff(day, cast(case sign(datediff(dd, cast(le.[Ded# from] as date), @file_date))\r\n",
					"\t\t\t\t\t\t\t\t\t\twhen 1 then le.[Ded# from]\r\n",
					"\t\t\t\t\t\t\t\t\t\telse dateadd(year, -1, le.[Ded# from])\r\n",
					"\t\t\t\t\t\t\t\t\t\tend as date), \r\n",
					"\t\t\t\t\t\t\t(convert(date, substring(le.[file_name], 19, 8), 108))))/364.25)%1) as percent_leave_year_passed,\r\n",
					"\t\t\t(1 - abs(((datediff(day, cast(case sign(datediff(dd, cast(le.[Ded# from] as date), @file_date))\r\n",
					"\t\t\t\t\t\t\t\t\t\twhen 1 then le.[Ded# from]\r\n",
					"\t\t\t\t\t\t\t\t\t\telse dateadd(year, -1, le.[Ded# from])\r\n",
					"\t\t\t\t\t\t\t\t\t\tend as date), \r\n",
					"\t\t\t\t\t\t\t(convert(date, substring(le.[file_name], 19, 8), 108))))/364.25)%1)) as percent_leave_year_remaining,\r\n",
					"\t\t\th.[Contract Type]\r\n",
					"\tfrom \r\n",
					"\t\tload.sap_hr h\r\n",
					"\t\t\tleft join sap_hr.leave_entitlement le on h.Pers#No# = case left(cast(le.[Staff Number] as varchar(10)), 1)\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen 4 then '50' + cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen 5 then '00' + cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\r\n",
					"\twhere\r\n",
					"\t\tle.[Absence Quota Type] = 'Annual Leave / P&P'\r\n",
					")\r\n",
					",carried_over as\r\n",
					"(\r\n",
					"\tselect distinct\r\n",
					"\t\th.Pers#No# as staff_number,\r\n",
					"\t\tcase sign([Number] - 148)\r\n",
					"\t\t\t\twhen 1 then 148\r\n",
					"\t\t\t\twhen 0 then 148\r\n",
					"\t\t\t\telse [Number]\r\n",
					"\t\t\tend as carried_over_hours\r\n",
					"\tfrom \r\n",
					"\t\tload.sap_hr h\r\n",
					"\t\t\tleft join sap_hr.leave_entitlement le on h.Pers#No# = case left(cast(le.[Staff Number] as varchar(10)), 1)\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen 4 then '50' + cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen 5 then '00' + cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse cast(le.[Staff Number] as varchar(10))\r\n",
					"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\r\n",
					"\twhere\r\n",
					"\t\tle.[Absence Quota Type] = 'Brought Forward'\r\n",
					")\r\n",
					",leave_taken as\r\n",
					"(\r\n",
					"\tselect\r\n",
					"\t\th.Pers#No# as staff_number,\r\n",
					"\t\tsum(f.absence_hours) as leave_hours_taken\r\n",
					"\tfrom \r\n",
					"\t\tload.sap_hr h \r\n",
					"\t\t\tleft join sap_hr.fact_absence_all f on h.Pers#No# = f.staff_number\r\n",
					"\t\t\tleft join staff_cost l on f.staff_number = l.staff_number\r\n",
					"\t\t\tleft join carried_over co on f.staff_number = co.staff_number\r\n",
					"\twhere \r\n",
					"\t\tf.[Attendance or Absence Type] IN ('PT Annual / P&P Leave', 'FT Annual / Priv Leave')\r\n",
					"\t\tand \r\n",
					"\t\tf.[absence_date] between l.leave_start_date and @file_date\r\n",
					"\tgroup by \r\n",
					"\t\th.Pers#No#\r\n",
					")\r\n",
					"\r\n",
					"insert into [Hist].[SAP_HR]\r\n",
					"SELECT \r\n",
					"\th.[Pers#No#]\r\n",
					"\t,[First name]\r\n",
					"\t,[Last name]\r\n",
					"\t,[Employee No#]\r\n",
					"\t,[CoCd]\r\n",
					"\t,[Company Code]\r\n",
					"\t,[PA]\r\n",
					"\t,[Personnel Area]\r\n",
					"\t,[PSubarea]\r\n",
					"\t,[Personnel Subarea]\r\n",
					"\t,[Org#unit]\r\n",
					"\t,[Organizational Unit]\r\n",
					"\t,[Organizational key]\r\n",
					"\t,[Organizational Key1]\r\n",
					"\t,[WorkC]\r\n",
					"\t,[Work Contract]\r\n",
					"\t,[CT]\r\n",
					"\t,h.[Contract Type]\r\n",
					"\t,[PS group]\r\n",
					"\t,[Pay Band Description]\r\n",
					"\t,h.[FTE]\r\n",
					"\t,[Wk#hrs#]\r\n",
					"\t,[Indicator Part-Time Employee]\r\n",
					"\t,[S]\r\n",
					"\t,[Employment Status]\r\n",
					"\t,[Gender Key]\r\n",
					"\t,[TRA Start Date]\r\n",
					"\t,[TRA End Date]\r\n",
					"\t,[TRA Status]\r\n",
					"\t,[TRA Grade]\r\n",
					"\t,[Prev#PersNo#]\r\n",
					"\t,[ActR]\r\n",
					"\t,[Reason for Action]\r\n",
					"\t,[Position]\r\n",
					"\t,[Position1]\r\n",
					"\t,[Cost Ctr]\r\n",
					"\t,[Cost Centre]\r\n",
					"\t,[Civil Service Start]\r\n",
					"\t,[Date to Current Job]\r\n",
					"\t,[Seniority Date]\r\n",
					"\t,[Date to Subst# Grade]\r\n",
					"\t,[Pers#No#1]\r\n",
					"\t,[Name of Manager (OM)]\r\n",
					"\t,[Manager Position]\r\n",
					"\t,[Manager Position Text]\r\n",
					"\t,[Counter Sign Manager]\r\n",
					"\t,[Loc#]\r\n",
					"\t,[Location]\r\n",
					"\t,[Org Start Date]\r\n",
					"\t,[Fix Term End Date]\r\n",
					"\t,[Loan Start Date]\r\n",
					"\t,[Loan End Date]\r\n",
					"\t,[EEGrp]\r\n",
					"\t,[Employee Group]\r\n",
					"\t,[Annual salary]\r\n",
					"\t,[Curr#]\r\n",
					"\t,[NI number]\r\n",
					"\t,[Birth date]\r\n",
					"\t,[Age of employee]\r\n",
					"\t,[EO]\r\n",
					"\t,[Ethnic origin]\r\n",
					"\t,[NID]\r\n",
					"\t,[Rel]\r\n",
					"\t,[Religious Denomination Key]\r\n",
					"\t,[SxO]\r\n",
					"\t,[Wage Type]\r\n",
					"\t,[Employee Subgroup]\r\n",
					"\t,[LOA Abs Type]\r\n",
					"\t,[LOA Absence Type Text]\r\n",
					"\t,[Scheme reference]\r\n",
					"\t,[Pension Scheme Name]\r\n",
					"\t,[Disability Code]\r\n",
					"\t,[Disability Text]\r\n",
					"\t,[Disability Code Description]\r\n",
					"\t,[PArea]\r\n",
					"\t,[Payroll Area]\r\n",
					"\t,[Assignment Number]\r\n",
					"\t,[FTE(2)]\r\n",
					"\t,[Report_MonthEnd_Date]\r\n",
					"\t,isnull(sc.leave_allowance, 0) + isnull(co.carried_over_hours, 0) as leave_entitlement_hrs\r\n",
					"\t,isnull(lt.leave_hours_taken, 0) as leave_taken_hrs\r\n",
					"\t,round((isnull(sc.leave_allowance, 0) + isnull(co.carried_over_hours, 0) - isnull(sc.expected_leave_hours_remaining, 0)  - isnull(lt.leave_hours_taken, 0)), 2) as leave_remaining_hours\r\n",
					"\t,isnull(round(sc.expected_leave_hours_remaining, 2), 0) as leave_remaining_prorata_hours\r\n",
					"\t--,isnull(round((isnull(sc.leave_allowance, 0) + isnull(co.carried_over_hours, 0) - isnull(sc.expected_leave_hours_remaining, 0)  - isnull(lt.leave_hours_taken, 0)) * (sc.hourly_rate) * (1 + p.Total), 2),0.0) as cost_untaken_al\r\n",
					"from load.SAP_HR h\r\n",
					"\tleft join staff_cost sc on h.Pers#No# = sc.staff_number\r\n",
					"\tleft join carried_over co on sc.staff_number = co.staff_number\r\n",
					"\tleft join leave_taken lt on sc.staff_number = lt.staff_number\r\n",
					"\tleft join bis.pension_ernic_rates p on sc.grade = p.Grade\r\n",
					"where \r\n",
					"\tright(cast(Report_MonthEnd_Date as varchar(10)),5) in ('01-31','02-28','02-29','03-31','04-30','05-31','06-30','07-31','08-31','09-30','10-31','11-30','12-31')"
				],
				"execution_count": 1
			}
		]
	}
}