{
	"name": "zendesk_insert_new_data_into_standerdised_from_raw",
	"properties": {
		"description": "zendesk_insert_new_data_into_standerdised_from_raw",
		"folder": {
			"name": "odw-raw"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "04e46092-8372-47b1-8bae-4cd36b22d654"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from collections.abc import Mapping\r\n",
					"from itertools import chain\r\n",
					"from operator import add\r\n",
					"#ignore FutureWarning messages \r\n",
					"import warnings\r\n",
					"warnings.filterwarnings(\"ignore\", message=\"iteritems is deprecated\")\r\n",
					"from notebookutils import mssparkutils\r\n",
					"from pprint import pprint as pp\r\n",
					"import json\r\n",
					"import pyspark.sql.functions as F \r\n",
					"import pandas as pd\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"spark = SparkSession.builder.getOrCreate()\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"### mount the data lake storage in Synapse to the Synapse File Mount API\r\n",
					"jobId = mssparkutils.env.getJobId()\r\n",
					"storage_acc_name = spark.sparkContext.environment.get('dataLakeAccountName', 'get')\r\n",
					"mssparkutils.fs.unmount(\"/zendesk_new_items\") \r\n",
					"mssparkutils.fs.mount( \r\n",
					"\"abfss://odw-raw@\"+storage_acc_name+\".dfs.core.windows.net/ZenDesk/created/\",\r\n",
					"\"/zendesk_new_items\", \r\n",
					"{\"linkedService\":\"ls_storage\"} \r\n",
					")   "
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from datetime import date\r\n",
					"# dd/mm/YY\r\n",
					"\r\n",
					"today = date.today()\r\n",
					"todaysdate = today.strftime(\"%Y%m%d\")\r\n",
					"print(todaysdate)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql.types import StructType, StructField, StringType\r\n",
					"# schema = StructType([StructField(\"foo\", StringType(), True)])\r\n",
					"def created_tickets():\r\n",
					"    \r\n",
					"\r\n",
					"    with open(f\"/synfs/{jobId}/zendesk_new_items/created_24hours_\"+\"20230724\"+\".json\", 'r',encoding=\"utf-8-sig\") as json_file:\r\n",
					"        zendesk_list = json.load(json_file)\r\n",
					"        zendesk_dict=zendesk_list[0]\r\n",
					"        result = zendesk_dict[\"results\"]\r\n",
					"        # pddf = pd.DataFrame(data=result)\r\n",
					"        # print(pddf.dtypes)\r\n",
					"        #clear int 64 data types\r\n",
					"        pddf=pd.DataFrame(result)\r\n",
					"        pddf=pddf.applymap(str)\r\n",
					"        pddf = pddf.dropna(axis='columns', how='all') # Drops columns with all NA values\r\n",
					"        # print(pddf.dtypes)\r\n",
					"        df = spark.createDataFrame(pddf)\r\n",
					"        # Insert created data into the table\r\n",
					"        return df\r\n",
					"        \r\n",
					"created_tickets()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Insert created data into the table\r\n",
					"table_name = \"odw_standardised_db.zendesk_system_extract\"\r\n",
					"created_tickets().write.insertInto(table_name, overwrite=False)\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_name = \"odw_standardised_db.zendesk_system_extract\"\r\n",
					"        df.write.insertInto(table_name, overwrite=False)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT COUNT(brand_id) from odw_standardised_db.zendesk_system_extract GROUP by brand_id"
				],
				"execution_count": null
			}
		]
	}
}