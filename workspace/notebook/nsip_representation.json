{
	"name": "nsip_representation",
	"properties": {
		"description": "Creation of the Relevant Representation Curated layer for use by ODT",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a9f9696f-b4a1-4917-9658-1f9abb223cec"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_relevant_representation is created"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### **NOTE**: The curated layer needs to be joined with Service User but since that's not available right now, we're ignoring the two columns. This NEEDS to be fixed once the Service User curated layer is available"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"jupyter": {
						"outputs_hidden": false
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_nsip_representation\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT DISTINCT\r\n",
					"    RR.representationId\r\n",
					"    ,RR.referenceId\r\n",
					"    ,RR.examinationLibraryRef\r\n",
					"    ,COALESCE(RR.caseRef, '') AS caseRef\r\n",
					"    ,RR.caseId\r\n",
					"    ,CASE\r\n",
					"        WHEN RR.status = 'New' OR RR.status = 'In Progress' THEN \r\n",
					"            'awaiting_review'\r\n",
					"    WHEN RR.status = 'Complete' THEN \r\n",
					"        'valid'\r\n",
					"    WHEN RR.status = 'Do Not Publish' THEN \r\n",
					"        'invalid'\r\n",
					"    ELSE \r\n",
					"        LOWER(RR.status)\r\n",
					"    END AS status\r\n",
					"    ,COALESCE(RR.originalRepresentation, '') AS originalRepresentation\r\n",
					"    ,RR.redacted\r\n",
					"    ,RR.redactedRepresentation\r\n",
					"    ,RR.redactedBy\r\n",
					"    ,RR.redactedNotes\r\n",
					"    ,CASE\r\n",
					"        WHEN RR.representationFrom = 'An Organisation' THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN RR.representationFrom = 'Members of the Public/Businesses'THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN RR.representationFrom = 'Another Individual or Organisation' THEN \r\n",
					"            'AGENT'\r\n",
					"        WHEN RR.representationFrom = 'Myself' THEN \r\n",
					"            'PERSON'\r\n",
					"        ELSE \r\n",
					"            RR.representationFrom\r\n",
					"    END AS representationFrom   \r\n",
					"    -- ,CASE \r\n",
					"    --     WHEN SU.serviceUserType = 'RepresentationContact' THEN \r\n",
					"    --         RR.NSIPRepresentaionID\r\n",
					"    --     ELSE \r\n",
					"    --         ''\r\n",
					"    -- END AS representedId\r\n",
					"    -- ,CASE \r\n",
					"    --     WHEN SU2.serviceUserType = 'Agent'THEN \r\n",
					"    --         RR.agentcontactid\r\n",
					"    --     ELSE \r\n",
					"    --         ''\r\n",
					"    -- END AS representativeId\r\n",
					"    , '' AS representedId\r\n",
					"    , '' AS representativeId\r\n",
					"    ,CASE\r\n",
					"        WHEN RR.registerFor = 'An Organisation' THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN RR.registerFor = 'Members of the Public/Businesses' THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN RR.registerFor = 'Another Individual or Organisation' THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN RR.registerFor = 'Myself' THEN \r\n",
					"            'PERSON'\r\n",
					"        ELSE \r\n",
					"            RR.registerFor\r\n",
					"    END AS registerFor\r\n",
					"    ,CASE\r\n",
					"        WHEN RR.representationType = 'Other Statutory Consultees' THEN \r\n",
					"            'Statutory Consultees'\r\n",
					"        ELSE \r\n",
					"            RR.representationType\r\n",
					"    END AS representationType\r\n",
					"    ,RR.dateReceived\r\n",
					"    ,RR.attachmentIds\r\n",
					"FROM \r\n",
					"    odw_harmonised_db.nsip_representation AS RR\r\n",
					"    -- LEFT OUTER JOIN odw_curated_db.nsip_service_user  AS SU\r\n",
					"    --     ON SU.ID = RR.representationId\r\n",
					"    -- LEFT OUTER JOIN odw_curated_db.nsip_service_user  AS SU2\r\n",
					"    --     ON SU2.ID = RR.agentcontactid\r\n",
					"    WHERE RR.IsActive = 'Y'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.nsip_service_user is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"spark = SparkSession.builder.getOrCreate()\r\n",
					"view_df = spark.sql('SELECT * FROM odw_curated_db.vw_nsip_representation')\r\n",
					"view_df.write.mode(\"overwrite\").saveAsTable('odw_curated_db.nsip_representation')"
				],
				"execution_count": 3
			}
		]
	}
}