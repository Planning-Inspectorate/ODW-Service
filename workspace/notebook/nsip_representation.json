{
	"name": "nsip_representation",
	"properties": {
		"description": "Creation of the Relevant Representation Curated layer for use by ODT",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "03016ff3-43ba-46b4-a850-80a3a0c58f53"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_relevant_representation is created"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### **NOTE**: The curated layer needs to be joined with Service User but since that's not available right now, we're ignoring the two columns. This NEEDS to be fixed once the Service User curated layer is available\n",
					"\n",
					"Columns from Service User are representedId, and representativeId"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"REFRESH TABLE odw_harmonised_db.curated_service_user"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"jupyter": {
						"outputs_hidden": false
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Need to fix this view so that it uses odw_harmonised_db.curated_service_user_URI for it's matching to service user\r\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_nsip_representation\r\n",
					"AS\r\n",
					"WITH Represented\r\n",
					"AS\r\n",
					"(\r\n",
					"    SELECT\r\n",
					"        row_number() OVER (PARTITION BY NSIPRepresentaionID ORDER BY representedId ASC) AS ID\r\n",
					"        ,Organisation\r\n",
					"        ,representedId\r\n",
					"        ,NSIPRepresentaionID\r\n",
					"    FROM\r\n",
					"        (SELECT DISTINCT\r\n",
					"            Service_represented.Organisation IS NOT NULL AS Organisation\r\n",
					"            ,Service_represented.ID AS representedId\r\n",
					"            ,Representative.NSIPRepresentaionID\r\n",
					"        FROM\r\n",
					"            odw_harmonised_db.curated_service_user AS Service_represented\r\n",
					"            INNER JOIN odw_harmonised_db.curated_service_user_URI AS Represented_URI\r\n",
					"                ON Service_represented.ID = Represented_URI.ServiceUserID\r\n",
					"                AND Represented_URI.Entity = 'Relevant Representation'\r\n",
					"            INNER JOIN odw_harmonised_db.nsip_representation AS Representative\r\n",
					"                ON Represented_URI.SourceSystemUID = Representative.representedId\r\n",
					"                AND Represented_URI.CaseReference = Representative.caseRef\r\n",
					"        ) AS dedupe\r\n",
					"),\r\n",
					"Representative\r\n",
					"AS\r\n",
					"(\r\n",
					"    SELECT\r\n",
					"        row_number() OVER (PARTITION BY NSIPRepresentaionID ORDER BY representativeId asc) AS ID\r\n",
					"        ,Organisation\r\n",
					"        ,representativeId\r\n",
					"        ,NSIPRepresentaionID\r\n",
					"    FROM\r\n",
					"        (\r\n",
					"            SELECT DISTINCT\r\n",
					"                Service_represented.Organisation IS NOT NULL AS Organisation\r\n",
					"                ,Service_represented.ID AS representativeId\r\n",
					"                ,Representative.NSIPRepresentaionID\r\n",
					"            FROM\r\n",
					"                odw_harmonised_db.curated_service_user AS Service_represented\r\n",
					"                INNER JOIN odw_harmonised_db.curated_service_user_URI AS Representative_URI\r\n",
					"                    ON Service_represented.ID = Representative_URI.ServiceUserID\r\n",
					"                    AND Representative_URI.Entity = 'Relevant Representation'\r\n",
					"                INNER JOIN odw_harmonised_db.nsip_representation AS Representative\r\n",
					"                    ON Representative_URI.CaseReference = Representative.caseRef\r\n",
					"                    AND Representative.representativeId = Representative_URI.SourceSystemUID\r\n",
					"        ) AS dedupe\r\n",
					"\r\n",
					")\r\n",
					"SELECT DISTINCT\r\n",
					"    relRep.representationId\r\n",
					"    ,relRep.referenceId\r\n",
					"    ,relRep.examinationLibraryRef\r\n",
					"    ,COALESCE(relRep.caseRef, '') AS caseRef\r\n",
					"    ,relRep.caseId\r\n",
					"    ,CASE\r\n",
					"        WHEN relRep.status = 'New' OR relRep.status = 'In Progress' THEN\r\n",
					"            'awaiting_review'\r\n",
					"        WHEN relRep.status = 'Complete' THEN\r\n",
					"            'valid'\r\n",
					"        WHEN relRep.status = 'Do Not Publish' THEN\r\n",
					"            'invalid'\r\n",
					"        ELSE \r\n",
					"            LOWER(relRep.status)\r\n",
					"    END AS status\r\n",
					"    ,COALESCE(relRep.originalRepresentation, '') AS originalRepresentation\r\n",
					"    ,relRep.redacted\r\n",
					"    ,relRep.redactedRepresentation\r\n",
					"    ,relRep.redactedBy\r\n",
					"    ,relRep.redactedNotes\r\n",
					"    ,CASE\r\n",
					"        WHEN relRep.representationFrom = 'Agent' THEN\r\n",
					"            'AGENT'\r\n",
					"        WHEN relRep.representationFrom = 'An Organisation' THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.representationFrom = 'Members of the Public/Businesses' and Representative.Organisation IS NOT NULL THEN\r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.representationFrom = 'Members of the Public/Businesses' THEN\r\n",
					"            'PERSON'\r\n",
					"        WHEN relRep.representationFrom = 'Another Individual or Organisation' and Representative.Organisation IS NOT NULL THEN\r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.representationFrom = 'Another Individual or Organisation' THEN\r\n",
					"            'PERSON'\r\n",
					"        WHEN relRep.representationFrom = 'Myself' THEN\r\n",
					"            'PERSON'\r\n",
					"        ELSE\r\n",
					"            relRep.representationFrom\r\n",
					"    END AS representationFrom\r\n",
					"    ,Represented.representedId\r\n",
					"    ,Representative.representativeId\r\n",
					"    ,CASE\r\n",
					"        WHEN relRep.registerFor = 'An Organisation' THEN\r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.registerFor = 'Members of the Public/Businesses' and Represented.Organisation IS NOT NULL THEN\r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.registerFor = 'Members of the Public/Businesses'THEN\r\n",
					"            'PERSON'\r\n",
					"        WHEN relRep.registerFor = 'Another Individual or Organisation' and Represented.Organisation IS NOT NULL THEN \r\n",
					"            'ORGANISATION'\r\n",
					"        WHEN relRep.registerFor = 'Another Individual or Organisation' THEN\r\n",
					"            'PERSON'\r\n",
					"        WHEN relRep.registerFor = 'Myself' THEN\r\n",
					"            'PERSON'\r\n",
					"        ELSE\r\n",
					"            relRep.registerFor\r\n",
					"    END AS registerFor\r\n",
					"    ,CASE\r\n",
					"        WHEN relRep.representationType = 'Other Statutory Consultees' THEN\r\n",
					"            'Statutory Consultees'\r\n",
					"        ELSE\r\n",
					"            relRep.representationType\r\n",
					"        END AS representationType\r\n",
					"        ,relRep.dateReceived\r\n",
					"        ,relRep.attachmentIds\r\n",
					"FROM\r\n",
					"    Represented\r\n",
					"    INNER JOIN odw_harmonised_db.nsip_representation AS relRep\r\n",
					"        ON Represented.NSIPRepresentaionID = relRep.NSIPRepresentaionID\r\n",
					"        --AND Represented.ID = 1\r\n",
					"    LEFT OUTER JOIN Representative\r\n",
					"        ON relRep.NSIPRepresentaionID = Representative.NSIPRepresentaionID\r\n",
					"        --AND Representative.ID = 1"
				],
				"execution_count": 55
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.nsip_service_user is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"spark = SparkSession.builder.getOrCreate()\r\n",
					"view_df = spark.sql('SELECT * FROM odw_curated_db.vw_nsip_representation')\r\n",
					"view_df.write.mode('overwrite').saveAsTable('odw_curated_db.nsip_representation')"
				],
				"execution_count": 56
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}