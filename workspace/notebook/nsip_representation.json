{
	"name": "nsip_representation",
	"properties": {
		"description": "Creation of the Relevant Representation Curated layer for use by ODT",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3fe7dcec-91c1-45e1-a2b6-26fd2628ba3c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## View odw_curated_db.vw_relevant_representation is created"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### **NOTE**: The curated layer needs to be joined with Service User but since that's not available right now, we're ignoring the two columns. This NEEDS to be fixed once the Service User curated layer is available\n",
					"\n",
					"Columns from Service User are representedId, and representativeId"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"REFRESH TABLE odw_harmonised_db.curated_service_user"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_rep_curated\n",
					"AS\n",
					"SELECT DISTINCT\n",
					"    RR.representationId\n",
					"    ,RR.referenceId\n",
					"    ,RR.examinationLibraryRef\n",
					"    ,project.CaseReference\n",
					"    ,RR.caseId\n",
					"    ,RR.status\n",
					"    ,RR.originalRepresentation\n",
					"    ,RR.redacted\n",
					"    ,RR.redactedRepresentation\n",
					"    ,RR.redactedBy\n",
					"    ,RR.redactedNotes\n",
					"    ,RR.representationFrom\n",
					"    ,RR.representedId\n",
					"    ,RR.representativeId\n",
					"    ,RR.registerFor\n",
					"    ,RR.representationType\n",
					"    ,RR.dateReceived\n",
					"    ,RR.attachmentIds\n",
					"FROM \n",
					"    odw_curated_db.nsip_project AS project -- Enforce referenctial integrity\n",
					"    INNER JOIN odw_harmonised_db.nsip_representation AS RR\n",
					"        ON project.caseId = RR.caseid\n",
					"WHERE\n",
					"    RR.ISActive = 'Y'"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"jupyter": {
						"outputs_hidden": false
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_nsip_representation\n",
					"AS\n",
					"SELECT DISTINCT\n",
					"    RR.representationId\n",
					"    ,RR.referenceId\n",
					"    ,RR.examinationLibraryRef\n",
					"    ,RR.CaseReference AS caseRef\n",
					"    ,RR.caseId\n",
					"    ,CASE\n",
					"        WHEN RR.status = 'New' OR RR.status = 'In Progress' THEN\n",
					"            'awaiting_review'\n",
					"        WHEN RR.status = 'Complete' THEN\n",
					"            'valid'\n",
					"        WHEN RR.status = 'Do Not Publish' THEN\n",
					"            'invalid'\n",
					"        ELSE \n",
					"            LOWER(RR.status)\n",
					"    END AS status\n",
					"    ,COALESCE(RR.originalRepresentation, '') AS originalRepresentation\n",
					"    ,RR.redacted\n",
					"    ,RR.redactedRepresentation\n",
					"    ,RR.redactedBy\n",
					"    ,RR.redactedNotes\n",
					"    ,CASE\n",
					"        WHEN su2.serviceUserType = 'Agent' THEN\n",
					"            'AGENT'\n",
					"        WHEN RR.representationFrom = 'An Organisation' THEN \n",
					"            'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Members of the Public/Businesses' and SU2.Organisation IS NOT NULL THEN\n",
					"            'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Members of the Public/Businesses' THEN\n",
					"            'PERSON'\n",
					"        WHEN RR.representationFrom = 'Another Individual or Organisation' and SU2.Organisation IS NOT NULL THEN\n",
					"             'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Another Individual or Organisation' THEN\n",
					"            'PERSON'\n",
					"        WHEN RR.representationFrom = 'Myself' THEN\n",
					"            'PERSON'\n",
					"        ELSE\n",
					"            RR.representationFrom\n",
					"    END AS representationFrom\n",
					"    ,COALESCE(SU2.Id, '')AS representedId\n",
					"    ,COALESCE(SU.Id, '') AS representativeId\n",
					"    ,CASE\n",
					"        WHEN RR.representationFrom = 'An Organisation' THEN\n",
					"            'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Members of the Public/Businesses' and SU.Organisation IS NOT NULL THEN\n",
					"            'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Members of the Public/Businesses'THEN\n",
					"            'PERSON'\n",
					"        WHEN RR.representationFrom = 'Another Individual or Organisation' and SU.Organisation IS NOT NULL THEN \n",
					"            'ORGANISATION'\n",
					"        WHEN RR.representationFrom = 'Another Individual or Organisation' THEN\n",
					"            'PERSON'\n",
					"        WHEN RR.representationFrom = 'Myself' THEN\n",
					"            'PERSON'\n",
					"        ELSE\n",
					"            RR.registerFor\n",
					"    END AS registerFor\n",
					"    ,CASE\n",
					"        WHEN RR.representationType = 'Other Statutory Consultees' THEN\n",
					"            'Statutory Consultees'\n",
					"        ELSE\n",
					"            RR.representationType\n",
					"        END AS representationType\n",
					"        ,RR.dateReceived\n",
					"        ,RR.attachmentIds\n",
					"FROM \n",
					"    odw_harmonised_db.curated_service_user AS SU2 \n",
					"    INNER JOIN vw_rep_curated AS RR\n",
					"        ON SU2.sourceSUID = RR.representedId\n",
					"        AND SU2.serviceUserType = 'RepresentationContact'\n",
					"    LEFT OUTER JOIN odw_harmonised_db.curated_service_user AS SU\n",
					"        ON SU.sourceSUID = RR.representativeId\n",
					"        AND SU.serviceUserType IN ('Agent')"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Table odw_curated_db.nsip_service_user is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"spark = SparkSession.builder.getOrCreate()\n",
					"view_df = spark.sql('SELECT * FROM vw_nsip_representation')\n",
					"view_df.write.mode('overwrite').saveAsTable('odw_curated_db.nsip_representation')"
				],
				"execution_count": 11
			}
		]
	}
}