{
	"name": "stg",
	"properties": {
		"folder": {
			"name": "Delta_Identities"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "792c9dcf-bba2-4c2e-9ee3-76b40fbee89e"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"use DATABASE odw_standardised_db"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Step 1: Create the table with column mapping enabled\r\n",
					"CREATE TABLE fact_absence_all_adf (\r\n",
					"    absence_date TIMESTAMP NOT NULL,\r\n",
					"    absence_hours FLOAT,\r\n",
					"    staff_number STRING NOT NULL,\r\n",
					"    `Work Schedule Rule` STRING,\r\n",
					"    `Abs Type` STRING,\r\n",
					"    `Sickness Group` STRING,\r\n",
					"    `Attendance or Absence Type` STRING,\r\n",
					"    Leave FLOAT,\r\n",
					"    `PS Group` STRING,\r\n",
					"    `Personnel Area` STRING,\r\n",
					"    `Personnel Subarea` STRING\r\n",
					"    )\r\n",
					"TBLPROPERTIES (\r\n",
					"    'delta.columnMapping.mode' = 'name',  -- Enable column mapping\r\n",
					"    'delta.minReaderVersion' = '2',       -- Required for column mapping\r\n",
					"    'delta.minWriterVersion' = '5',       -- Required for column mapping\r\n",
					"    'delta.autoOptimize.optimizeWrite' = 'true',\r\n",
					"    'delta.autoOptimize.autoCompact' = 'true'\r\n",
					");"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TABLE Stage_SAP_HR_PC (\r\n",
					"    `Ref Number` STRING,\r\n",
					"    `Ethnic origin` STRING,\r\n",
					"    `Religious Denomination Key` STRING,\r\n",
					"    `SxO` STRING,\r\n",
					"    `Disability Text` STRING,\r\n",
					"    `file_name` STRING,\r\n",
					"    `load_date` DATE,\r\n",
					"    `Grade` STRING\r\n",
					")\r\n",
					"USING DELTA\r\n",
					"TBLPROPERTIES (\r\n",
					"    'delta.columnMapping.mode' = 'name',  -- Enable column mapping for special characters\r\n",
					"    'delta.minReaderVersion' = '2',       -- Required for column mapping\r\n",
					"    'delta.minWriterVersion' = '5',       -- Required for column mapping\r\n",
					"    'delta.autoOptimize.optimizeWrite' = 'true',\r\n",
					"    'delta.autoOptimize.autoCompact' = 'true'\r\n",
					");"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}