{
	"name": "s62a",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e197462f-6bcc-4e64-a600-2099305f1b62"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql import DataFrame"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE VIEW odw_curated_db.vw_s62a\r\n",
					"\r\n",
					"AS\r\n",
					"\r\n",
					"SELECT \r\n",
					"    C.Name as name\r\n",
					"    ,C.casereference as caseReference      \r\n",
					"    ,C1.ApplicationType as applicationType\r\n",
					"    ,C1.ApplicationValidated as applicationValidated\r\n",
					"    ,C1.Description as description\r\n",
					"    ,C1.LPA as lpa\r\n",
					"    ,C1.PermissionSought as permissionSought\r\n",
					"    ,C1.ProcedureType as procedureType\r\n",
					"    ,C1.Status as status\r\n",
					"    ,C2.ApplicantName as applicantName\r\n",
					"    ,C2.SiteAddress as siteAddress\r\n",
					"    ,C2.SitePostcode as sitePostcode\r\n",
					"    ,C2.SiteGridReference as siteGridReference\r\n",
					"    ,C2.AgentName as agentName\r\n",
					"    ,C2.AgentAddress as agentAddress\r\n",
					"    ,C3.DateReceived as dateReceived\r\n",
					"    ,C3.DateValid as dateValid\r\n",
					"    ,C3.ConsultationStartDate as consultationStatDate\r\n",
					"    ,C3.ConsultationEndDate as consultationEndDate\r\n",
					"    ,C3.TargetDecisionDate as targetDecisionDate\r\n",
					"    ,C3.DecisionDate as decisionDate\r\n",
					"    ,C3.DecisionType as decisionType\r\n",
					"    ,C4.AppointedPerson as appointedPerson\r\n",
					"    ,C4.CaseAdministrator as caseAdministrator\r\n",
					"    ,C4.CaseLeader as caseLeader\r\n",
					"    ,C4.CaseOfficer as caseOfficer\r\n",
					"    ,C4.EIAOfficer as eiaOfficer\r\n",
					"    ,C4.LegalOfficer as legalOfficer\r\n",
					"FROM odw_harmonised_db.s62a_view_cases_dim C \r\n",
					"    left join odw_harmonised_db.s62a_view_case_basic_data_dim C1 on C.CaseDataID = C1.CaseDataID AND C1.IsActive = 'Y'\r\n",
					"    left join odw_harmonised_db.s62a_view_case_extended_data_dim C2 on C.CaseDataID = C2.CaseDataID AND C2.IsActive = 'Y'\r\n",
					"    left join odw_harmonised_db.s62a_view_case_dates_dim C3 on C.CaseDataID = C3.CaseDataID AND C3.IsActive = 'Y'\r\n",
					"    left join odw_harmonised_db.s62a_view_case_officers_dim C4 on C.CaseDataID = C4.CaseDataID AND C4.IsActive = 'Y'\r\n",
					"WHERE C.IsActive = 'Y'\r\n",
					""
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"spark = SparkSession.builder.getOrCreate()\r\n",
					"view_df = spark.sql(\"SELECT * FROM odw_curated_db.vw_s62a\")\r\n",
					"view_df.write.mode(\"overwrite\").saveAsTable(\"odw_curated_db.s62a\")"
				],
				"execution_count": null
			}
		]
	}
}