{
	"name": "casework_local_plans_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "temppool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "5",
				"spark.autotune.trackingId": "3790804c-63da-4130-b8f4-b01ec2453d72"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/temppool",
				"name": "temppool",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/temppool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_local_plans_dim is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_local_plans_grouped\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"SELECT hz_ref,\r\n",
					"    ldf_no,\r\n",
					"    region,\r\n",
					"    lpa,\r\n",
					"    title,\r\n",
					"    dpd_type,\r\n",
					"    grade,\r\n",
					"    actual_publication_date_reg_19,\r\n",
					"    actual_publication_notes,\r\n",
					"    actual_submission_date_reg_22,\r\n",
					"    actual_submission_notes,\r\n",
					"    five_year_supply_of_land,\r\n",
					"    inspector_s,\r\n",
					"    mentor_named_contact,\r\n",
					"    programme_officer,\r\n",
					"    date_of_appointment,\r\n",
					"    date_of_appointment_notes,\r\n",
					"    actual_hearing_start_date,\r\n",
					"    actual_hearing_start_notes,\r\n",
					"    hearings_close_date,\r\n",
					"    hearings_close_notes,\r\n",
					"    prep_days,\r\n",
					"    hearing_days,\r\n",
					"    sv_days,\r\n",
					"    travel_days,\r\n",
					"    reptg_days,\r\n",
					"    total_days,\r\n",
					"    days_ldf_ref,\r\n",
					"    date_given_to_lpa_for_receipt_of_fact_check,\r\n",
					"    date_given_to_lpa_for_receipt_of_fact_check_notes,\r\n",
					"    draft_report_sent_to_qa_group_date,\r\n",
					"    draft_report_sent_to_qa_group_notes,\r\n",
					"    qa_panel,\r\n",
					"    fact_check_report_received_from_insp_date,\r\n",
					"    fact_check_report_received_from_insp_notes,\r\n",
					"    fact_check_report_dispatch_date,\r\n",
					"    fact_check_report_dispatch_notes,\r\n",
					"    final_report_issued_date,\r\n",
					"    final_report_issued_notes,\r\n",
					"    adoption_date,\r\n",
					"    adoption_notes,\r\n",
					"    withdrawn_date,\r\n",
					"    withdrawn_notes,\r\n",
					"    status,\r\n",
					"    total_weeks,\r\n",
					"    hearing_close_to_final_report,\r\n",
					"    notes,\r\n",
					"    lpa_lookup,\r\n",
					"    submission_date,\r\n",
					"    reports_issued\r\n",
					"\r\n",
					"FROM odw_standardised_db.casework_local_plans\r\n",
					"Where hz_ref is not null\r\n",
					"GROUP BY hz_ref,\r\n",
					"    ldf_no,\r\n",
					"    region,\r\n",
					"    lpa,\r\n",
					"    title,\r\n",
					"    dpd_type,\r\n",
					"    grade,\r\n",
					"    actual_publication_date_reg_19,\r\n",
					"    actual_publication_notes,\r\n",
					"    actual_submission_date_reg_22,\r\n",
					"    actual_submission_notes,\r\n",
					"    five_year_supply_of_land,\r\n",
					"    inspector_s,\r\n",
					"    mentor_named_contact,\r\n",
					"    programme_officer,\r\n",
					"    date_of_appointment,\r\n",
					"    date_of_appointment_notes,\r\n",
					"    actual_hearing_start_date,\r\n",
					"    actual_hearing_start_notes,\r\n",
					"    hearings_close_date,\r\n",
					"    hearings_close_notes,\r\n",
					"    prep_days,\r\n",
					"    hearing_days,\r\n",
					"     sv_days,\r\n",
					"    travel_days,\r\n",
					"    reptg_days,\r\n",
					"    total_days,\r\n",
					"    days_ldf_ref,\r\n",
					"    date_given_to_lpa_for_receipt_of_fact_check,\r\n",
					"    date_given_to_lpa_for_receipt_of_fact_check_notes,\r\n",
					"    draft_report_sent_to_qa_group_date,\r\n",
					"    draft_report_sent_to_qa_group_notes,\r\n",
					"    qa_panel,\r\n",
					"    fact_check_report_received_from_insp_date,\r\n",
					"    fact_check_report_received_from_insp_notes,\r\n",
					"    fact_check_report_dispatch_date,\r\n",
					"    fact_check_report_dispatch_notes,\r\n",
					"    final_report_issued_date,\r\n",
					"    final_report_issued_notes,\r\n",
					"    adoption_date,\r\n",
					"    adoption_notes,\r\n",
					"    withdrawn_date,\r\n",
					"    withdrawn_notes,\r\n",
					"    status,\r\n",
					"    total_weeks,\r\n",
					"    hearing_close_to_final_report,\r\n",
					"    notes,\r\n",
					"    lpa_lookup,\r\n",
					"    submission_date,\r\n",
					"    reports_issued"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_local_plans_dim table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_local_plans_dim_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.hz_ref IS NULL\r\n",
					"        THEN T3.LocalPlansID\r\n",
					"        ELSE NULL\r\n",
					"    END as LocalPlansID,\r\n",
					"    T1.hz_ref AS HZRef,\r\n",
					"    T1.ldf_no AS LDFNo,\r\n",
					"    T1.region AS Region,\r\n",
					"    T1.lpa AS LPA,\r\n",
					"    T1.title AS Title,\r\n",
					"    T1.dpd_type AS DPDType,\r\n",
					"    T1.grade AS Grade,\r\n",
					"    T1.actual_publication_date_reg_19 AS ActualPublicationDateReg19,\r\n",
					"    T1.actual_publication_notes AS ActualPublicationNotes,\r\n",
					"    T1.actual_submission_date_reg_22 AS ActualSubmissionDateReg22,\r\n",
					"    T1.actual_submission_notes AS ActualSubmissionNotes,\r\n",
					"    T1.five_year_supply_of_land AS FiveYearSupplyOfLand,\r\n",
					"    T1.inspector_s AS InspectorS,\r\n",
					"    T1.mentor_named_contact AS MentorOrNamedContact,\r\n",
					"    T1.programme_officer AS ProgrammeOfficer,\r\n",
					"    T1.date_of_appointment AS DateOfAppointment,\r\n",
					"    T1.date_of_appointment_notes AS DateOfAppointmentNotes,\r\n",
					"    T1.actual_hearing_start_date AS ActualHearingStartDate,\r\n",
					"    T1.actual_hearing_start_notes AS ActualHearingStartNotes,\r\n",
					"    T1.hearings_close_date AS HearingsCloseDate,\r\n",
					"    T1.hearings_close_notes AS HearingsCloseNotes,\r\n",
					"    T1.prep_days AS PrepDays,\r\n",
					"    T1.hearing_days AS HearingDays,\r\n",
					"    T1.sv_days AS SVDays,\r\n",
					"    T1.travel_days AS TravelDays,\r\n",
					"    T1.reptg_days AS ReptgDays,\r\n",
					"    T1.total_days AS TotalDays,\r\n",
					"    T1.days_ldf_ref AS DaysLDFRef,\r\n",
					"    T1.date_given_to_lpa_for_receipt_of_fact_check AS DateGivenToLPAForReceiptOfFactCheck,\r\n",
					"    T1.date_given_to_lpa_for_receipt_of_fact_check_notes AS DateGivenToLPAForReceiptOfFactCheckNotes,\r\n",
					"    T1.draft_report_sent_to_qa_group_date AS DraftReportSentToQAGroupDate,\r\n",
					"    T1.draft_report_sent_to_qa_group_notes AS DraftReportSentToQAGroupNotes,\r\n",
					"    T1.qa_panel AS QAPanel,\r\n",
					"    T1.fact_check_report_received_from_insp_date AS FactCheckReportReceivedFromINSPDate,\r\n",
					"    T1.fact_check_report_received_from_insp_notes AS FactCheckReportReceivedFromINSPNotes,\r\n",
					"    T1.fact_check_report_dispatch_date AS FactCheckReportDispatchDate,\r\n",
					"    T1.fact_check_report_dispatch_notes AS FactCheckReportDispatchNotes,\r\n",
					"    T1.final_report_issued_date AS FinalReportIssuedDate,\r\n",
					"    T1.final_report_issued_notes AS FinalReportIssuedNotes,\r\n",
					"    T1.adoption_date AS AdoptionDate,\r\n",
					"    T1.adoption_notes AS AdoptionNotes,\r\n",
					"    T1.withdrawn_date AS WithdrawnDate,\r\n",
					"    T1.withdrawn_notes AS WithdrawnNotes,\r\n",
					"    T1.status AS Status,\r\n",
					"    T1.total_weeks AS TotalWeeks,\r\n",
					"    T1.hearing_close_to_final_report AS HearingClosetoFinalReport,\r\n",
					"    T1.notes AS Notes,\r\n",
					"    T1.lpa_lookup AS LPALookup,\r\n",
					"    T1.submission_date AS SubmissionDate,\r\n",
					"    T1.reports_issued AS ReportsIssued,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo,\r\n",
					"    md5(concat(IFNULL(T1.hz_ref,'.'), IFNULL(T1.ldf_no,'.'), IFNULL(T1.region,'.'),IFNULL(T1.lpa,'.'),IFNULL(T1.title,'.'),IFNULL(T1.dpd_type,'.'),IFNULL(T1.grade,'.'),IFNULL(T1.actual_publication_date_reg_19,'.'),IFNULL(T1.actual_publication_notes,'.'),IFNULL(T1.actual_submission_date_reg_22,'.'),IFNULL(T1.actual_submission_notes,'.'),IFNULL(T1.five_year_supply_of_land,'.'),IFNULL(T1.inspector_s,'.'),IFNULL(T1.mentor_named_contact,'.'),IFNULL(T1.programme_officer,'.'),IFNULL(T1.date_of_appointment,'.'),IFNULL(T1.date_of_appointment_notes,'.'),IFNULL(T1.actual_hearing_start_date,'.'),IFNULL(T1.actual_hearing_start_notes,'.'),IFNULL(T1.hearings_close_date,'.'),IFNULL(T1.hearings_close_notes,'.'),IFNULL(T1.prep_days,'.'),IFNULL(T1.hearing_days,'.'),IFNULL(T1.sv_days,'.'),IFNULL(T1.travel_days,'.'),IFNULL(T1.reptg_days,'.'),IFNULL(T1.total_days,'.'),IFNULL(T1.days_ldf_ref,'.'),IFNULL(T1.date_given_to_lpa_for_receipt_of_fact_check,'.'),IFNULL(T1.status,'.'),IFNULL(T1.total_weeks,'.'),IFNULL(T1.hearing_close_to_final_report,'.'),IFNULL(T1.notes,'.'),IFNULL(T1.lpa_lookup,'.'),IFNULL(T1.submission_date,'.'),IFNULL(T1.reports_issued,'.'))) as RowID, -- this hash should contain all the defining fields, so needs to be done\r\n",
					"    'Y' as IsActive,\r\n",
					"    CASE\r\n",
					"        WHEN T1.hz_ref = T3.HZRef AND  md5(concat(IFNULL(T1.hz_ref,'.'), IFNULL(T1.ldf_no,'.'), IFNULL(T1.region,'.'),IFNULL(T1.lpa,'.'),IFNULL(T1.title,'.'),IFNULL(T1.dpd_type,'.'),IFNULL(T1.grade,'.'),IFNULL(T1.actual_publication_date_reg_19,'.'),IFNULL(T1.actual_publication_notes,'.'),IFNULL(T1.actual_submission_date_reg_22,'.'),IFNULL(T1.actual_submission_notes,'.'),IFNULL(T1.five_year_supply_of_land,'.'),IFNULL(T1.inspector_s,'.'),IFNULL(T1.mentor_named_contact,'.'),IFNULL(T1.programme_officer,'.'),IFNULL(T1.date_of_appointment,'.'),IFNULL(T1.date_of_appointment_notes,'.'),IFNULL(T1.actual_hearing_start_date,'.'),IFNULL(T1.actual_hearing_start_notes,'.'),IFNULL(T1.hearings_close_date,'.'),IFNULL(T1.hearings_close_notes,'.'),IFNULL(T1.prep_days,'.'),IFNULL(T1.hearing_days,'.'),IFNULL(T1.sv_days,'.'),IFNULL(T1.travel_days,'.'),IFNULL(T1.reptg_days,'.'),IFNULL(T1.total_days,'.'),IFNULL(T1.days_ldf_ref,'.'),IFNULL(T1.date_given_to_lpa_for_receipt_of_fact_check,'.'),IFNULL(T1.status,'.'),IFNULL(T1.total_weeks,'.'),IFNULL(T1.hearing_close_to_final_report,'.'),IFNULL(T1.notes,'.'),IFNULL(T1.lpa_lookup,'.'),IFNULL(T1.submission_date,'.'),IFNULL(T1.reports_issued,'.'))) <> T3.RowID   -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.HZRef IS NULL -- new AppealRef\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END as NewData,\r\n",
					"    CASE\r\n",
					"        WHEN T1.hz_ref IS NULL\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END AS  DeletedData, \r\n",
					"    T3.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM casework_local_plans_grouped T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_local_plans_dim T3 ON T1.hz_ref = T3.HZRef AND T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    (\r\n",
					"        -- flags new data        \r\n",
					"        (   CASE\r\n",
					"                WHEN T1.hz_ref = T3.HZRef AND md5(concat(IFNULL(T1.hz_ref,'.'), IFNULL(T1.ldf_no,'.'), IFNULL(T1.region,'.'),IFNULL(T1.lpa,'.'),IFNULL(T1.title,'.'),IFNULL(T1.dpd_type,'.'),IFNULL(T1.grade,'.'),IFNULL(T1.actual_publication_date_reg_19,'.'),IFNULL(T1.actual_publication_notes,'.'),IFNULL(T1.actual_submission_date_reg_22,'.'),IFNULL(T1.actual_submission_notes,'.'),IFNULL(T1.five_year_supply_of_land,'.'),IFNULL(T1.inspector_s,'.'),IFNULL(T1.mentor_named_contact,'.'),IFNULL(T1.programme_officer,'.'),IFNULL(T1.date_of_appointment,'.'),IFNULL(T1.date_of_appointment_notes,'.'),IFNULL(T1.actual_hearing_start_date,'.'),IFNULL(T1.actual_hearing_start_notes,'.'),IFNULL(T1.hearings_close_date,'.'),IFNULL(T1.hearings_close_notes,'.'),IFNULL(T1.prep_days,'.'),IFNULL(T1.hearing_days,'.'),IFNULL(T1.sv_days,'.'),IFNULL(T1.travel_days,'.'),IFNULL(T1.reptg_days,'.'),IFNULL(T1.total_days,'.'),IFNULL(T1.days_ldf_ref,'.'),IFNULL(T1.date_given_to_lpa_for_receipt_of_fact_check,'.'),IFNULL(T1.status,'.'),IFNULL(T1.total_weeks,'.'),IFNULL(T1.hearing_close_to_final_report,'.'),IFNULL(T1.notes,'.'),IFNULL(T1.lpa_lookup,'.'),IFNULL(T1.submission_date,'.'),IFNULL(T1.reports_issued,'.'))) <> T3.RowID  -- same employee, changed data\r\n",
					"                THEN 'Y'\r\n",
					"                WHEN T3.HZRef IS NULL -- new PositionCode\r\n",
					"                THEN 'Y'\r\n",
					"            ELSE 'N'\r\n",
					"            END  = 'Y' ) OR\r\n",
					"        \r\n",
					"        -- flags deleted data\r\n",
					"        (   CASE\r\n",
					"                WHEN T1.hz_ref IS NULL\r\n",
					"                THEN 'Y'\r\n",
					"                ELSE 'N'\r\n",
					"            END = 'Y' )\r\n",
					"    );\r\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Source_Number = spark.sql(\"SELECT COUNT(*) AS Source_Number FROM pins_casework_all_appeals_grouped\")\r\n",
					"# Current_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Current_Number FROM odw_harmonised_db.casework_local_plans_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS New_Data_Number FROM casework_local_plans_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Deleted_Data_Number FROM casework_local_plans_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Source_Number_Pandas = Source_Number.toPandas()\r\n",
					"# Current_Number_Pandas =  Current_Number.toPandas()\r\n",
					"# New_Data_Number_Pandas = New_Data_Number.toPandas()\r\n",
					"# Deleted_Data_Number_Pandas = Deleted_Data_Number.toPandas()\r\n",
					"\r\n",
					"# # checking if new total number of registers matches the previously loaded, plus New ones, minus Deleted ones\r\n",
					"# print(\"SET 1:\")\r\n",
					"# Total_Number = Source_Number_Pandas['Source_Number'].tolist() \r\n",
					"# Current_Loaded_Number = Current_Number_Pandas['Current_Number'].tolist() \r\n",
					"# New_Data_Number = New_Data_Number_Pandas['New_Data_Number'].tolist() \r\n",
					"# Deleted_Data_Number = Deleted_Data_Number_Pandas['Deleted_Data_Number'].tolist() \r\n",
					"\r\n",
					"# if Total_Number[0] != (Current_Loaded_Number[0] + New_Data_Number[0] - Deleted_Data_Number[0]):\r\n",
					"#     raise RuntimeError(\"Loading Number do not match\")\r\n",
					"# else:\r\n",
					"#     print(\"Loading number matches with existing codes plus new, minus deleted!\")\r\n",
					"\r\n",
					"# if New_Data_Number[0] > 1000:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many new codes\")\r\n",
					"# else:\r\n",
					"#     print(\"New data under tolerance levels\")\r\n",
					"\r\n",
					"# if Deleted_Data_Number[0] > 500:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many deleted codes\")\r\n",
					"# else:\r\n",
					"#     print(\"Unused codes under tolerance levels\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Current_Records = spark.sql(\"SELECT DISTINCT RowID AS Current_Records FROM odw_harmonised_db.casework_local_plans_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS New_Data_Records FROM casework_local_plans_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS Deleted_Data_Records FROM casework_local_plans_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Current_Records_Pandas =  Current_Records.toPandas()\r\n",
					"# New_Data_Records_Pandas = New_Data_Records.toPandas()\r\n",
					"# Deleted_Data_Records_Pandas = Deleted_Data_Records.toPandas()\r\n",
					"\r\n",
					"# # checking if a deleted records are correcly flagged, not existing in the new data, but existing inpreviously loaded\r\n",
					"# print(\"TEST 2:\")\r\n",
					"\r\n",
					"# Current_Records = Current_Records_Pandas['Current_Records'].tolist() \r\n",
					"# Deleted_Records = Deleted_Data_Records_Pandas['Deleted_Data_Records'].tolist()\r\n",
					"# New_Records = New_Data_Records_Pandas['New_Data_Records'].tolist()\r\n",
					"\r\n",
					"# print(Current_Records)\r\n",
					"# print(Deleted_Records)\r\n",
					"# print(New_Records)\r\n",
					"\r\n",
					"# for i in Deleted_Records:\r\n",
					"#     if i in Current_Records: \r\n",
					"#         print(i + \" to be deleted is in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Delete do not match\")\r\n",
					"\r\n",
					"# for j in New_Records:\r\n",
					"#     if j not in Current_Records: \r\n",
					"#         print(j + \" to be added is not in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Add do not match\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_local_plans_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_local_plans_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    LocalPlansID,\r\n",
					"    HZRef,\r\n",
					"    LDFNo,\r\n",
					"    Region,\r\n",
					"    LPA,\r\n",
					"    Title,\r\n",
					"    DPDType,\r\n",
					"    Grade,\r\n",
					"    ActualPublicationDateReg19,\r\n",
					"    ActualPublicationNotes,\r\n",
					"    ActualSubmissionDateReg22,\r\n",
					"    ActualSubmissionNotes,\r\n",
					"    FiveYearSupplyOfLand,\r\n",
					"    InspectorS,\r\n",
					"    MentorOrNamedContact,\r\n",
					"    ProgrammeOfficer,\r\n",
					"    DateOfAppointment,\r\n",
					"    DateOfAppointmentNotes,\r\n",
					"    ActualHearingStartDate,\r\n",
					"    ActualHearingStartNotes,\r\n",
					"    HearingsCloseDate,\r\n",
					"    HearingsCloseNotes,\r\n",
					"    PrepDays,\r\n",
					"    HearingDays,\r\n",
					"    SVDays,\r\n",
					"    TravelDays,\r\n",
					"    ReptgDays,\r\n",
					"    TotalDays,\r\n",
					"    DaysLDFRef,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheck,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheckNotes,\r\n",
					"    DraftReportSentToQAGroupDate,\r\n",
					"    DraftReportSentToQAGroupNotes,\r\n",
					"    QAPanel,\r\n",
					"    FactCheckReportReceivedFromINSPDate,\r\n",
					"    FactCheckReportReceivedFromINSPNotes,\r\n",
					"    FactCheckReportDispatchDate,\r\n",
					"    FactCheckReportDispatchNotes,\r\n",
					"    FinalReportIssuedDate,\r\n",
					"    FinalReportIssuedNotes,\r\n",
					"    AdoptionDate,\r\n",
					"    AdoptionNotes,\r\n",
					"    WithdrawnDate,\r\n",
					"    WithdrawnNotes,\r\n",
					"    Status,\r\n",
					"    TotalWeeks,\r\n",
					"    HearingClosetoFinalReport,\r\n",
					"    Notes,\r\n",
					"    LPALookup,\r\n",
					"    SubmissionDate,\r\n",
					"    ReportsIssued,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_local_plans_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    LocalPlansID,\r\n",
					"    HZRef,\r\n",
					"    LDFNo,\r\n",
					"    Region,\r\n",
					"    LPA,\r\n",
					"    Title,\r\n",
					"    DPDType,\r\n",
					"    Grade,\r\n",
					"    ActualPublicationDateReg19,\r\n",
					"    ActualPublicationNotes,\r\n",
					"    ActualSubmissionDateReg22,\r\n",
					"    ActualSubmissionNotes,\r\n",
					"    FiveYearSupplyOfLand,\r\n",
					"    InspectorS,\r\n",
					"    MentorOrNamedContact,\r\n",
					"    ProgrammeOfficer,\r\n",
					"    DateOfAppointment,\r\n",
					"    DateOfAppointmentNotes,\r\n",
					"    ActualHearingStartDate,\r\n",
					"    ActualHearingStartNotes,\r\n",
					"    HearingsCloseDate,\r\n",
					"    HearingsCloseNotes,\r\n",
					"    PrepDays,\r\n",
					"    HearingDays,\r\n",
					"    SVDays,\r\n",
					"    TravelDays,\r\n",
					"    ReptgDays,\r\n",
					"    TotalDays,\r\n",
					"    DaysLDFRef,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheck,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheckNotes,\r\n",
					"    DraftReportSentToQAGroupDate,\r\n",
					"    DraftReportSentToQAGroupNotes,\r\n",
					"    QAPanel,\r\n",
					"    FactCheckReportReceivedFromINSPDate,\r\n",
					"    FactCheckReportReceivedFromINSPNotes,\r\n",
					"    FactCheckReportDispatchDate,\r\n",
					"    FactCheckReportDispatchNotes,\r\n",
					"    FinalReportIssuedDate,\r\n",
					"    FinalReportIssuedNotes,\r\n",
					"    AdoptionDate,\r\n",
					"    AdoptionNotes,\r\n",
					"    WithdrawnDate,\r\n",
					"    WithdrawnNotes,\r\n",
					"    Status,\r\n",
					"    TotalWeeks,\r\n",
					"    HearingClosetoFinalReport,\r\n",
					"    Notes,\r\n",
					"    LPALookup,\r\n",
					"    SubmissionDate,\r\n",
					"    ReportsIssued,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_local_plans_dim\r\n",
					"WHERE HZRef IN (SELECT HZRef FROM casework_local_plans_dim_new WHERE LocalPlansID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_local_plans_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_local_plans_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_local_plans_dim AS Target\r\n",
					"USING casework_local_plans_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.LocalPlansID = Target.LocalPlansID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT * ;  \r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_local_plans_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_local_plans_dim\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.casework_local_plans_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY HZRef NULLS LAST) AS LocalPlansID,\r\n",
					"    HZRef,\r\n",
					"    LDFNo,\r\n",
					"    Region,\r\n",
					"    LPA,\r\n",
					"    Title,\r\n",
					"    DPDType,\r\n",
					"    Grade,\r\n",
					"    ActualPublicationDateReg19,\r\n",
					"    ActualPublicationNotes,\r\n",
					"    ActualSubmissionDateReg22,\r\n",
					"    ActualSubmissionNotes,\r\n",
					"    FiveYearSupplyOfLand,\r\n",
					"    InspectorS,\r\n",
					"    MentorOrNamedContact,\r\n",
					"    ProgrammeOfficer,\r\n",
					"    DateOfAppointment,\r\n",
					"    DateOfAppointmentNotes,\r\n",
					"    ActualHearingStartDate,\r\n",
					"    ActualHearingStartNotes,\r\n",
					"    HearingsCloseDate,\r\n",
					"    HearingsCloseNotes,\r\n",
					"    PrepDays,\r\n",
					"    HearingDays,\r\n",
					"    SVDays,\r\n",
					"    TravelDays,\r\n",
					"    ReptgDays,\r\n",
					"    TotalDays,\r\n",
					"    DaysLDFRef,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheck,\r\n",
					"    DateGivenToLPAForReceiptOfFactCheckNotes,\r\n",
					"    DraftReportSentToQAGroupDate,\r\n",
					"    DraftReportSentToQAGroupNotes,\r\n",
					"    QAPanel,\r\n",
					"    FactCheckReportReceivedFromINSPDate,\r\n",
					"    FactCheckReportReceivedFromINSPNotes,\r\n",
					"    FactCheckReportDispatchDate,\r\n",
					"    FactCheckReportDispatchNotes,\r\n",
					"    FinalReportIssuedDate,\r\n",
					"    FinalReportIssuedNotes,\r\n",
					"    AdoptionDate,\r\n",
					"    AdoptionNotes,\r\n",
					"    WithdrawnDate,\r\n",
					"    WithdrawnNotes,\r\n",
					"    Status,\r\n",
					"    TotalWeeks,\r\n",
					"    HearingClosetoFinalReport,\r\n",
					"    Notes,\r\n",
					"    LPALookup,\r\n",
					"    SubmissionDate,\r\n",
					"    ReportsIssued,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.casework_local_plans_dim;\r\n",
					""
				],
				"execution_count": 7
			}
		]
	}
}