{
	"name": "py_1_raw_to_standardised_scheduling",
	"properties": {
		"folder": {
			"name": "1-odw-raw-to-standardised/Scheduling"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2db8c005-8766-4aed-95f8-722c60e190e9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"jsonconfig = '''{\r\n",
					"    \"definitions\":[\r\n",
					"        {\r\n",
					"        \"SourceID\": 1,\r\n",
					"        \"SourceType\":\"Fileshare\",\r\n",
					"        \"SourceSystem\":\"SAP_HR\",\r\n",
					"        \"Source_Datalake_Root\":\"abfss://odw-raw@pinsstodwdevuks9h80mb.dfs.core.windows.net\",\r\n",
					"        \"FrequencyFolder\":\"Monthly\",\r\n",
					"        \"FolderDateFormat\":\"YYYY-MM\",\r\n",
					"        \"Completion_Start_Date\":\"0 0 1 * *\",\r\n",
					"        \"Completion_End_Date\":\"59 23 7 * *\",\r\n",
					"        \"FilenameFormat\":\"Addresses - YYYYMMDD.xlsx\",\r\n",
					"        \"FilenameDateFormat\":\"YYYYMMDD\",\r\n",
					"        \"ABFSS_RawRoot\":\"\",\r\n",
					"        \"ABFSS_StandardisedRoot\":\"\"\r\n",
					"    }\r\n",
					"    ]\r\n",
					"}\r\n",
					"'''"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"source": [
					"### get the json\r\n",
					"mssparkutils.fs.mount( \r\n",
					"    \"abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/config/scheduling_json/\", \r\n",
					"    \"/scheduling_json\", \r\n",
					"    {\"linkedService\":\"pins-synw-odw-dev-uks\"} \r\n",
					") \r\n",
					"mssparkutils.fs.unmount(\"/scheduling_json\") \r\n",
					"\r\n",
					"import json\r\n",
					"\r\n",
					"### process cron dates\r\n",
					"\r\n",
					"### look into standardised to see if the tables already exist\r\n",
					"\r\n",
					"### check raw for file\r\n",
					"\r\n",
					"### outstanding files table \r\n",
					"\r\n",
					""
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}