{
	"name": "hr_employee_leavers_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/SAP-HR"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4f910cf4-9ea2-48f1-baf4-3b20bb864865"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (sap hr) against the target (odw_harmonised_db.hr_employee_leavers_dim)\n",
					"- **New Data:** where a workc in the source does not exist as an EmployeeID in the target. NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on workc in source and EmployeeID in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an EmployeeID in the target exists but the same workc doesn't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View hr_employee_leavers_dim_new is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_employee_leavers_dim_new\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"SELECT DISTINCT\r\n",
					"    CASE\r\n",
					"        WHEN T3.EmployeeID IS NULL\r\n",
					"        THEN T7.EmployeeLeaversID\r\n",
					"        ELSE NULL\r\n",
					"    END                     AS EmployeeLeaversID,     \r\n",
					"    T1.Pers_No              AS EmployeeID,\r\n",
					"    T1.Pers_No              AS EmployeeNumber,\r\n",
					"    T1.Reason_For_Action    AS ReasonForLeaving, \r\n",
					"    CASE \r\n",
					"        WHEN T1.Org_Start_Date = '00/00/0000'\r\n",
					"        THEN '1900-01-01 00:00:00'\r\n",
					"        ELSE T1.Org_Start_Date\r\n",
					"    END                     AS EmploymentStartDate,\r\n",
					"    T1.Leaving              AS EmploymentEndDate,\r\n",
					"    T1.Act                  AS Act,\r\n",
					"    T1.Action_Type           AS ActionType,\r\n",
					"    T1.ActR                 AS ActR,\r\n",
					"    T1.S                    AS S,\r\n",
					"    T1.User_ID              AS UserID,\r\n",
					"    T1.WorkC                AS WorkC,\r\n",
					"    T2.SourceSystemID       AS SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from) AS IngestionDate,\r\n",
					"    NULL                    AS ValidTo,\r\n",
					"    md5(concat(\r\n",
					"        IFNULL(T3.EmployeeID,'.'),\r\n",
					"        IFNULL(T1.Reason_For_Action,'.'),\r\n",
					"        IFNULL(T1.Act,'.'),\r\n",
					"        IFNULL(T1.ActR,'.'),\r\n",
					"        IFNULL(T1.S,'.'),\r\n",
					"        IFNULL(T1.User_ID,'.'))) as RowID,\r\n",
					"    'Y' as IsActive,\r\n",
					"    T7.IsActive as HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.vw_leavers T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.hr_employee_fact T3 ON T1.Pers_No = T3.PersNumber AND T3.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.hr_employee_leavers_dim T7 ON   T3.EmployeeID = T7.EmployeeID AND \r\n",
					"                                                        CAST(T1.Leaving AS DATE) = CAST(T7.EmploymentEndDate AS DATE) AND \r\n",
					"                                                        T7.IsActive = 'Y'\r\n",
					"\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    (CASE\r\n",
					"        WHEN T3.EmployeeID = T7.EmployeeID AND \r\n",
					"            CAST(T1.Leaving AS DATE) = CAST(T7.EmploymentEndDate AS DATE) AND\r\n",
					"            md5(concat(\r\n",
					"                IFNULL(T3.EmployeeID,'.'),\r\n",
					"                IFNULL(T1.Reason_For_Action,'.'),\r\n",
					"                IFNULL(T1.Act,'.'),\r\n",
					"                IFNULL(T1.ActR,'.'),\r\n",
					"                IFNULL(T1.S,'.'),\r\n",
					"                IFNULL(T1.User_ID,'.'))) <> T7.RowID  -- same employee, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T7.EmployeeID  IS NULL -- new employee\r\n",
					"        THEN 'Y'\r\n",
					"        ELSE 'N'\r\n",
					"    END  = 'Y')\r\n",
					";"
				],
				"execution_count": 44
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **hr_employee_leavers_dim_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View hr_employee_leavers_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_employee_leavers_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"SELECT \r\n",
					"    EmployeeLeaversID,\r\n",
					"    EmployeeID,\r\n",
					"    ReasonForLeaving, \r\n",
					"    EmploymentStartDate,\r\n",
					"    EmploymentEndDate,\r\n",
					"    Act,\r\n",
					"    ActionType,\r\n",
					"    ActR,\r\n",
					"    S,\r\n",
					"    UserID,\r\n",
					"    WorkC,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"From hr_employee_leavers_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"SELECT\r\n",
					"    T1.EmployeeLeaversID,\r\n",
					"    T1.EmployeeID,\r\n",
					"    T1.ReasonForLeaving, \r\n",
					"    T1.EmploymentStartDate,\r\n",
					"    T1.EmploymentEndDate,\r\n",
					"    T1.Act,\r\n",
					"    T1.ActionType,\r\n",
					"    T1.ActR,\r\n",
					"    T1.S,\r\n",
					"    T1.UserID,\r\n",
					"    T1.WorkC,\r\n",
					"    T1.SourceSystemID,\r\n",
					"    T1.IngestionDate,\r\n",
					"    T1.ValidTo,\r\n",
					"    T1.RowID,\r\n",
					"    T1.IsActive\r\n",
					"FROM odw_harmonised_db.hr_employee_leavers_dim T1\r\n",
					"WHERE EmployeeID IN (SELECT EmployeeID FROM hr_employee_leavers_dim_new WHERE EmployeeLeaversID IS NULL) AND IsActive = 'Y';"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW Loading_month\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT DISTINCT\n",
					"    IngestionDate AS IngestionDate,\n",
					"    to_timestamp(date_sub(IngestionDate,1)) AS ClosingDate,\n",
					"    'Y' AS IsActive\n",
					"\n",
					"FROM hr_employee_leavers_dim_new;\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_employee_leavers_dim_changed_rows_final\n",
					"\n",
					"    AS\n",
					"\n",
					"SELECT \n",
					"    T1.EmployeeLeaversID,\n",
					"    T1.EmployeeID,\n",
					"    T1.ReasonForLeaving, \n",
					"    T1.EmploymentStartDate,\n",
					"    T1.EmploymentEndDate,\n",
					"    T1.Act,\n",
					"    T1.ActionType,\n",
					"    T1.ActR,\n",
					"    T1.S,\n",
					"    T1.UserID,\n",
					"    T1.WorkC,\n",
					"    T1.SourceSystemID,\n",
					"    T1.IngestionDate,\n",
					"    T1.ValidTo,\n",
					"    T1.RowID,\n",
					"    T1.IsActive,\n",
					"    T2.ClosingDate\n",
					"FROM hr_employee_leavers_dim_changed_rows T1\n",
					"FULL JOIN Loading_month T2 ON T1.IsActive = T2.IsActive"
				],
				"execution_count": 47
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View hr_employee_leavers_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the Business Key (i.e. workc from SAPHR), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the business key, insert rows\n",
					"## Table odw_harmonised.hr_employee_leavers_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- merge into fact table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.hr_employee_leavers_dim AS Target\r\n",
					"USING hr_employee_leavers_dim_changed_rows_final AS Source\r\n",
					"\r\n",
					"ON Source.EmployeeLeaversID = Target.EmployeeLeaversID AND Target.IsActive = 'Y'\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\r\n",
					"    Target.IsActive = 'N'\r\n",
					"\r\n",
					"-- Insert completely new rows\r\n",
					"WHEN NOT MATCHED \r\n",
					"    THEN INSERT (EmployeeLeaversID,\r\n",
					"        EmployeeID,\r\n",
					"        ReasonForLeaving, \r\n",
					"        EmploymentStartDate,\r\n",
					"        EmploymentEndDate,\r\n",
					"        Act,\r\n",
					"        ActionType,\r\n",
					"        ActR,\r\n",
					"        S,\r\n",
					"        UserID,\r\n",
					"        WorkC,\r\n",
					"        SourceSystemID,\r\n",
					"        IngestionDate,\r\n",
					"        ValidTo,\r\n",
					"        RowID,\r\n",
					"        IsActive)  \r\n",
					"        VALUES (Source.EmployeeLeaversID,\r\n",
					"        Source.EmployeeID,\r\n",
					"        Source.ReasonForLeaving, \r\n",
					"        Source.EmploymentStartDate,\r\n",
					"        Source.EmploymentEndDate,\r\n",
					"        Source.Act,\r\n",
					"        Source.ActionType,\r\n",
					"        Source.ActR,\r\n",
					"        Source.S,\r\n",
					"        Source.UserID,\r\n",
					"        Source.WorkC,\r\n",
					"        Source.SourceSystemID, \r\n",
					"        Source.IngestionDate, \r\n",
					"        Source.ValidTo, \r\n",
					"        Source.RowID, \r\n",
					"        Source.IsActive) ;  \r\n",
					""
				],
				"execution_count": 48
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised.hr_employee_leavers_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Insert new ContractID\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.hr_employee_leavers_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY EmployeeLeaversID NULLS LAST) AS EmployeeLeaversID,\r\n",
					"    EmployeeID,\r\n",
					"    ReasonForLeaving, \r\n",
					"    EmploymentStartDate,\r\n",
					"    EmploymentEndDate,\r\n",
					"    Act,\r\n",
					"    ActionType,\r\n",
					"    ActR,\r\n",
					"    S,\r\n",
					"    UserID,\r\n",
					"    WorkC,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM odw_harmonised_db.hr_employee_leavers_dim;\r\n",
					""
				],
				"execution_count": 49
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Setting the leavers EmployeeID that are active in , hr_employee_fact and hr_record_ract to IsActive = 'N'"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"CREATE OR REPLACE TEMPORARY VIEW hr_employee_leavers_leaving_this_month\n",
					"\n",
					"AS\n",
					"\n",
					"SELECT  DISTINCT\n",
					"\n",
					"    *\n",
					"\n",
					"FROM hr_employee_leavers_dim_changed_rows_final\n",
					"\n",
					"WHERE SUBSTRING(EmploymentENDDate, 0, 7) = (SELECT SUBSTRING(MAX(EXPECTED_FROM), 0, 7) FROM odw_standardised_db.vw_leavers)\n",
					"AND EmployeeLeaversID IS NULL"
				],
				"execution_count": 50
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- merge into fact table\n",
					"\n",
					"MERGE INTO odw_harmonised_db.hr_employee_dim AS Target\n",
					"USING hr_employee_leavers_leaving_this_month AS Source\n",
					"\n",
					"ON Source.EmployeeID = Target.EmployeeID AND Target.IsActive = 'Y'\n",
					"\n",
					"-- For Updates existing rows\n",
					"\n",
					"WHEN MATCHED\n",
					"    THEN \n",
					"    UPDATE SET\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\n",
					"    Target.IsActive = 'N'"
				],
				"execution_count": 51
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- merge into fact table\n",
					"\n",
					"MERGE INTO odw_harmonised_db.hr_employee_fact AS Target\n",
					"USING hr_employee_leavers_leaving_this_month AS Source\n",
					"\n",
					"ON Source.EmployeeID = Target.EmployeeID AND Target.IsActive = 'Y'\n",
					"\n",
					"-- For Updates existing rows\n",
					"\n",
					"WHEN MATCHED\n",
					"    THEN \n",
					"    UPDATE SET\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\n",
					"    Target.IsActive = 'N'"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- merge into fact table\n",
					"\n",
					"MERGE INTO odw_harmonised_db.hr_record_fact AS Target\n",
					"USING hr_employee_leavers_leaving_this_month AS Source\n",
					"\n",
					"ON Source.EmployeeID = Target.EmployeeID AND Target.IsActive = 'Y'\n",
					"\n",
					"-- For Updates existing rows\n",
					"\n",
					"WHEN MATCHED\n",
					"    THEN \n",
					"    UPDATE SET\n",
					"    Target.ValidTo = to_timestamp(ClosingDate),\n",
					"    Target.IsActive = 'N'"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\n",
					"SELECT * FROM odw_harmonised_db.hr_employee_leavers_dim WHERE EmployeeID LIKE '%500483' ORDER BY IngestionDate;"
				],
				"execution_count": null
			}
		]
	}
}