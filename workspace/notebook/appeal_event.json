{
	"name": "appeal_event",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "7a7e8399-6e99-4a9e-8da4-3539e30afc74"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_Appeal_event \r\n",
					"AS\r\n",
					"SELECT\r\n",
					"    eventId\r\n",
					"    ,caseReference\r\n",
					"    ,eventType\r\n",
					"    ,eventName\r\n",
					"    ,eventStatus\r\n",
					"    ,isUrgent\r\n",
					"    ,CAST(REPLACE(eventPublished, 'None', NULL) AS Boolean) AS eventPublished\r\n",
					"    ,eventStartDateTime\r\n",
					"    ,CAST(REPLACE(eventEndDateTime, 'None', NULL) AS Timestamp) AS eventEndDateTime\r\n",
					"    ,CAST(REPLACE(NotificationOfSiteVisit, 'None', NULL) AS String) AS NotificationOfSiteVisit\r\n",
					"    ,addressLine1\r\n",
					"    ,addressLine2\r\n",
					"    ,addressTown\r\n",
					"    ,addressCounty\r\n",
					"    ,addressPostcode\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.sb_appeal_event\r\n",
					"WHERE\r\n",
					"    IsActive = 'Y'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"INSERT OVERWRITE odw_curated_db.Appeal_event\r\n",
					"SELECT\r\n",
					"     eventId\r\n",
					"    ,caseReference\r\n",
					"    ,eventType\r\n",
					"    ,eventName\r\n",
					"    ,eventStatus\r\n",
					"    ,isUrgent\r\n",
					"    ,eventPublished\r\n",
					"    ,eventStartDateTime\r\n",
					"    ,eventEndDateTime\r\n",
					"    ,NotificationOfSiteVisit\r\n",
					"    ,addressLine1\r\n",
					"    ,addressLine2\r\n",
					"    ,addressTown\r\n",
					"    ,addressCounty\r\n",
					"    ,addressPostcode\r\n",
					"FROM\r\n",
					"    vw_Appeal_event"
				],
				"execution_count": 3
			}
		]
	}
}