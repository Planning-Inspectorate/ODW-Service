{
	"name": "appeal_event",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "97e18e9f-d500-4488-96ed-b595d3526f54"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE VIEW odw_harmonised_db.vw_Appeals_Event_Unified \r\n",
					"AS\r\n",
					"SELECT \r\n",
					"    CONCAT(casenumber, '-',eventId) AS eventId\r\n",
					"    ,caseNumber\r\n",
					"    ,caseReference\r\n",
					"    ,eventType\r\n",
					"    ,eventName\r\n",
					"    ,eventStatus\r\n",
					"    ,isUrgent\r\n",
					"    ,eventPublished\r\n",
					"    ,eventStartDateTime\r\n",
					"    ,eventEndDateTime\r\n",
					"    ,notificationOfSiteVisit\r\n",
					"    ,dateEventRequested\r\n",
					"    ,actualDuration\r\n",
					"    ,eventAddressLine1 AS addressLine1\r\n",
					"    ,eventAddressLine2 AS addressLine2\r\n",
					"    ,eventAddressTown AS addressTown\r\n",
					"    ,eventAddressCounty AS addressCounty\r\n",
					"    ,eventAddressPostcode AS addressPostcode\r\n",
					"    ,Migrated\r\n",
					"    ,IngestionDate\r\n",
					"    ,ValidTo\r\n",
					"    ,RowID\r\n",
					"    ,IsActive\r\n",
					"    ,ODTSourceSystem\r\n",
					"    ,SourceSystemID\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.horizon_appeals_event\r\n",
					"UNION ALL -- Using union all as current plan is to not migrate history.\r\n",
					"SELECT\r\n",
					"    eventId\r\n",
					"    ,caseReference AS caseNumber\r\n",
					"    ,caseReference\r\n",
					"    ,eventType\r\n",
					"    ,eventName\r\n",
					"    ,eventStatus\r\n",
					"    ,isUrgent\r\n",
					"    ,CAST(REPLACE(eventPublished, 'None', NULL) AS Boolean) AS eventPublished\r\n",
					"    ,eventStartDateTime\r\n",
					"    ,CAST(REPLACE(eventEndDateTime, 'None', NULL) AS Timestamp) AS eventPublished\r\n",
					"    ,CAST(REPLACE(NotificationOfSiteVisit, 'None', NULL) AS String) AS NotificationOfSiteVisit\r\n",
					"    ,NULL AS dateEventRequested\r\n",
					"    ,NULL AS EventDuration\r\n",
					"    ,addressLine1\r\n",
					"    ,addressLine2\r\n",
					"    ,addressTown\r\n",
					"    ,addressCounty\r\n",
					"    ,addressPostcode\r\n",
					"    ,Migrated\r\n",
					"    ,IngestionDate\r\n",
					"    ,CAST(REPLACE(ValidTo, 'None', NULL) AS String) AS ValidTo\r\n",
					"    ,RowID\r\n",
					"    ,IsActive\r\n",
					"    ,ODTSourceSystem\r\n",
					"    ,SourceSystemID\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.appeals_event"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_Appeals_Event_EntraDeDupe\r\n",
					"AS\r\n",
					"SELECT DISTINCT\r\n",
					"    vw_Appeals_Event_Unified.eventId\r\n",
					"    ,CASE WHEN NumberSystems > 1 THEN 'ODT' ELSE ODTSourceSystem END AS ODTSourceSystem\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.vw_Appeals_Event_Unified AS vw_Appeals_Event_Unified\r\n",
					"    INNER JOIN (\r\n",
					"                SELECT\r\n",
					"                    eventId\r\n",
					"                    ,COUNT(DISTINCT ODTSourceSystem) AS NumberSystems --Check if we have more than one dupe across source systems, if so we need to prioritise service bus as that will be the master\r\n",
					"                FROM\r\n",
					"                   odw_harmonised_db.vw_Appeals_Event_Unified\r\n",
					"                GROUP BY\r\n",
					"                    eventId) AS Intra_dupes\r\n",
					"        ON vw_Appeals_Event_Unified.EventId = Intra_dupes.EventId"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_Appeals_Event_Input\r\n",
					"AS\r\n",
					"SELECT\r\n",
					"    raw.*\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.vw_Appeals_Event_Unified AS raw\r\n",
					"    INNER JOIN (\r\n",
					"                SELECT\r\n",
					"                    raw.eventId\r\n",
					"                    ,raw.ODTSourceSystem\r\n",
					"                    ,MAX(IngestionDate) AS LastLoaded\r\n",
					"                FROM\r\n",
					"                    odw_harmonised_db.vw_Appeals_Event_Unified AS raw\r\n",
					"                    INNER JOIN vw_Appeals_Event_EntraDeDupe AS EntraDeDupe\r\n",
					"                        ON raw.EventId = EntraDeDupe.EventID\r\n",
					"                        AND raw.ODTSourceSystem = EntraDeDupe.ODTSourceSystem\r\n",
					"                GROUP BY\r\n",
					"                    raw.eventId\r\n",
					"                    ,raw.ODTSourceSystem) AS InterDupe\r\n",
					"        ON raw.EventId = InterDupe.EventID\r\n",
					"        AND raw.ODTSourceSystem = InterDupe.ODTSourceSystem\r\n",
					"        AND raw.IngestionDate = InterDupe.LastLoaded\r\n",
					"    "
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"if not spark.catalog.tableExists('appeals_event', dbName='odw_curated_db'):\r\n",
					"    df = spark.sql(\"SELECT * FROM vw_Appeals_Event_Input LIMIT 0\")\r\n",
					"    df.write.mode(\"Overwrite\").format(\"delta\").partitionBy(\"IsActive\").saveAsTable(\"odw_curated_db.appeals_event\")"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW vw_Appeals_Event_Upsert\r\n",
					"AS\r\n",
					"SELECT -- Bring in net new records\r\n",
					"    Source.eventId\r\n",
					"    ,Source.caseNumber\r\n",
					"    ,Source.caseReference\r\n",
					"    ,Source.eventType\r\n",
					"    ,Source.eventName\r\n",
					"    ,Source.eventStatus\r\n",
					"    ,Source.isUrgent\r\n",
					"    ,Source.eventPublished\r\n",
					"    ,Source.eventStartDateTime\r\n",
					"    ,Source.eventEndDateTime\r\n",
					"    ,Source.notificationOfSiteVisit\r\n",
					"    ,Source.dateEventRequested\r\n",
					"    ,Source.actualDuration\r\n",
					"    ,Source.addressLine1\r\n",
					"    ,Source.addressLine2\r\n",
					"    ,Source.addressTown\r\n",
					"    ,Source.addressCounty\r\n",
					"    ,Source.addressPostcode\r\n",
					"    ,Source.Migrated\r\n",
					"    ,Source.IngestionDate\r\n",
					"    ,Source.ValidTo\r\n",
					"    ,Source.RowID\r\n",
					"    ,Source.IsActive\r\n",
					"    ,Source.ODTSourceSystem\r\n",
					"    ,Source.SourceSystemID\r\n",
					"    ,'Insert' AS Update_mode\r\n",
					"FROM\r\n",
					"    vw_Appeals_Event_Input AS Source\r\n",
					"    LEFT OUTER JOIN odw_curated_db.appeals_event AS Target\r\n",
					"        ON Source.eventId = Target.eventId\r\n",
					"WHERE\r\n",
					"    Target.eventID IS NULL\r\n",
					"UNION ALL\r\n",
					"SELECT -- Bring in records that have updates\r\n",
					"    Source.eventId\r\n",
					"    ,Source.caseNumber\r\n",
					"    ,Source.caseReference\r\n",
					"    ,Source.eventType\r\n",
					"    ,Source.eventName\r\n",
					"    ,Source.eventStatus\r\n",
					"    ,Source.isUrgent\r\n",
					"    ,Source.eventPublished\r\n",
					"    ,Source.eventStartDateTime\r\n",
					"    ,Source.eventEndDateTime\r\n",
					"    ,Source.notificationOfSiteVisit\r\n",
					"    ,Source.dateEventRequested\r\n",
					"    ,Source.actualDuration\r\n",
					"    ,Source.addressLine1\r\n",
					"    ,Source.addressLine2\r\n",
					"    ,Source.addressTown\r\n",
					"    ,Source.addressCounty\r\n",
					"    ,Source.addressPostcode\r\n",
					"    ,Source.Migrated\r\n",
					"    ,Source.IngestionDate\r\n",
					"    ,Source.ValidTo\r\n",
					"    ,Source.RowID\r\n",
					"    ,Source.IsActive\r\n",
					"    ,Source.ODTSourceSystem\r\n",
					"    ,Source.SourceSystemID\r\n",
					"    ,'Update' AS Update_mode\r\n",
					"FROM\r\n",
					"    vw_Appeals_Event_Input AS Source\r\n",
					"    INNER JOIN odw_curated_db.appeals_event AS Target\r\n",
					"        ON Source.eventId = Target.eventId\r\n",
					"        AND Source.RowID <> Target.RowID\r\n",
					"UNION ALL\r\n",
					"SELECT -- Bring in the original record so that we can archive it off\r\n",
					"    Target.eventId\r\n",
					"    ,Target.caseNumber\r\n",
					"    ,Target.caseReference\r\n",
					"    ,Target.eventType\r\n",
					"    ,Target.eventName\r\n",
					"    ,Target.eventStatus\r\n",
					"    ,Target.isUrgent\r\n",
					"    ,Target.eventPublished\r\n",
					"    ,Target.eventStartDateTime\r\n",
					"    ,Target.eventEndDateTime\r\n",
					"    ,Target.notificationOfSiteVisit\r\n",
					"    ,Target.dateEventRequested\r\n",
					"    ,Target.actualDuration\r\n",
					"    ,Target.addressLine1\r\n",
					"    ,Target.addressLine2\r\n",
					"    ,Target.addressTown\r\n",
					"    ,Target.addressCounty\r\n",
					"    ,Target.addressPostcode\r\n",
					"    ,Target.Migrated\r\n",
					"    ,Target.IngestionDate\r\n",
					"    ,Source.IngestionDate AS ValidTo\r\n",
					"    ,Target.RowID\r\n",
					"    ,'N' AS IsActive\r\n",
					"    ,Target.ODTSourceSystem\r\n",
					"    ,Target.SourceSystemID\r\n",
					"    ,'Update' AS Update_mode\r\n",
					"FROM\r\n",
					"    vw_Appeals_Event_Input AS Source\r\n",
					"    INNER JOIN odw_curated_db.appeals_event AS Target\r\n",
					"        ON Source.eventId = Target.eventId\r\n",
					"        AND Source.RowID <> Target.RowID"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"MERGE INTO odw_curated_db.appeals_event AS Target -- Merge results into curated\r\n",
					"USING vw_Appeals_Event_Upsert AS Source\r\n",
					"    ON Target.EventID = Source.EventID\r\n",
					"    AND Target.RowID = Source.RowID\r\n",
					"WHEN MATCHED THEN -- De-activate old records\r\n",
					"    UPDATE SET\r\n",
					"        Target.IsActive = Source.IsActive\r\n",
					"        ,Target.ValidTo = Source.ValidTo\r\n",
					"WHEN NOT MATCHED THEN\r\n",
					"    INSERT\r\n",
					"        (\r\n",
					"            eventId\r\n",
					"            ,caseNumber\r\n",
					"            ,caseReference\r\n",
					"            ,eventType\r\n",
					"            ,eventName\r\n",
					"            ,eventStatus\r\n",
					"            ,isUrgent\r\n",
					"            ,eventPublished\r\n",
					"            ,eventStartDateTime\r\n",
					"            ,eventEndDateTime\r\n",
					"            ,notificationOfSiteVisit\r\n",
					"            ,dateEventRequested\r\n",
					"            ,actualDuration\r\n",
					"            ,addressLine1\r\n",
					"            ,addressLine2\r\n",
					"            ,addressTown\r\n",
					"            ,addressCounty\r\n",
					"            ,addressPostcode\r\n",
					"            ,Migrated\r\n",
					"            ,IngestionDate\r\n",
					"            ,ValidTo\r\n",
					"            ,RowID\r\n",
					"            ,IsActive\r\n",
					"            ,ODTSourceSystem\r\n",
					"            ,SourceSystemID\r\n",
					"        )\r\n",
					"    VALUES\r\n",
					"        (\r\n",
					"            Source.eventId\r\n",
					"            ,Source.caseNumber\r\n",
					"            ,Source.caseReference\r\n",
					"            ,Source.eventType\r\n",
					"            ,Source.eventName\r\n",
					"            ,Source.eventStatus\r\n",
					"            ,Source.isUrgent\r\n",
					"            ,Source.eventPublished\r\n",
					"            ,Source.eventStartDateTime\r\n",
					"            ,Source.eventEndDateTime\r\n",
					"            ,Source.notificationOfSiteVisit\r\n",
					"            ,Source.dateEventRequested\r\n",
					"            ,Source.actualDuration\r\n",
					"            ,Source.addressLine1\r\n",
					"            ,Source.addressLine2\r\n",
					"            ,Source.addressTown\r\n",
					"            ,Source.addressCounty\r\n",
					"            ,Source.addressPostcode\r\n",
					"            ,Source.Migrated\r\n",
					"            ,Source.IngestionDate\r\n",
					"            ,Source.ValidTo\r\n",
					"            ,Source.RowID\r\n",
					"            ,Source.IsActive\r\n",
					"            ,Source.ODTSourceSystem\r\n",
					"            ,Source.SourceSystemID\r\n",
					"        )\r\n",
					""
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT\r\n",
					"   *\r\n",
					"FROM\r\n",
					"    odw_curated_db.appeals_event"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT\r\n",
					"   *\r\n",
					"FROM\r\n",
					"    odw_standardised_db.appeals_event"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT\r\n",
					"   *\r\n",
					"FROM\r\n",
					"    odw_harmonised_db.sb_appeals_event"
				],
				"execution_count": 3
			}
		]
	}
}