{
	"name": "SAP_HRv1",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "413ae090-c562-4584-92ad-d78cfd471da5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## SAP_HR_MONTHLY\n",
					"\n",
					"###### Author: Prathap A\n",
					"###### Date: 25/02/2025\n",
					"\n",
					"###### version : 0001\n",
					"###### <u>Description</u>:\n",
					"This template is designed to facilitate the monthly processing and harmonization of SAP HR data. It includes steps for initializing the environment, creating and managing Delta tables, and inserting data into harmonized tables. The template ensures that HR data is accurately transformed, stored, and made available for reporting and analysis."
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Intialisations\n",
					""
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf, col, lit, when, coalesce, concat, sum, avg, max, min, count, countDistinct, date_format, to_date, datediff, months_between, year, month,  hour, minute, second, expr, asc, desc\n",
					"from pyspark.sql.types import DateType, TimestampType, StringType, IntegerType, FloatType, DoubleType, BooleanType, StructType, StructField, ArrayType, MapType\n",
					"from pyspark.sql.window import Window\n",
					"from pyspark.sql.functions import row_number, rank, dense_rank, lag, lead, ntile\n",
					"from pyspark.sql import SQLContext\n",
					"from pyspark.sql import DataFrame\n",
					"from pyspark.sql import functions as F\n",
					"from pyspark.sql.avro.functions import from_avro, to_avro\n",
					"from pyspark.sql.streaming import DataStreamReader, DataStreamWriter\n",
					"from pyspark.sql.utils import AnalysisException\n",
					"from pyspark.sql.catalog import Catalog\n",
					"from pyspark.sql.column import Column\n",
					"from pyspark.sql.group import GroupedData\n",
					"from pyspark.sql.pandas.functions import pandas_udf\n",
					"\n",
					"from datetime import datetime, timedelta\n",
					"import pandas as pd\n",
					"import numpy as np"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT \n",
					"TRY_CAST(to_date(DatetoCurrentJob, 'dd/MM/yyyy') AS DATE) AS DatetoCurrentJob,\n",
					"    TRY_CAST(to_date(SeniorityDate, 'dd/MM/yyyy') AS DATE) AS SeniorityDate,\n",
					"      to_date(SeniorityDate, 'dd/MM/yy') AS SeniorityDate2\n",
					"FROM \n",
					"    odw_standardised_db.sap_hr_history_monthly \n",
					"\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"\n",
					"SELECT \n",
					"    to_date(CivilServiceStart, 'dd/MM/yyyy') AS ParsedCivilServiceStart,\n",
					"     to_date(DatetoCurrentJob, 'dd/MM/yyyy') AS ParsedCivilServiceStart2,\n",
					"     to_date(SeniorityDate, 'dd/MM/yyyy') AS ParsedCivilServiceStart3  ,\n",
					"     DatetoCurrentJob,\n",
					"     SeniorityDate\n",
					"FROM \n",
					"    odw_standardised_db.sap_hr_history_monthly \n",
					"LIMIT 20;"
				],
				"execution_count": 72
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"SELECT \n",
					"    --CivilServiceStart, \n",
					"    SeniorityDate,\n",
					"    to_date(CivilServiceStart, 'dd/MM/yyyy') AS ParsedCivilServiceStart,\n",
					"    TO_DATE(DatetoCurrentJob, 'dd/MM/yyyy') AS DatetoCurrentJob ,\n",
					"    TO_DATE(SeniorityDate, 'dd/MM/yyyy') AS SeniorityDate\n",
					"FROM \n",
					"    odw_standardised_db.sap_hr_history_monthly \n",
					"LIMIT 20;"
				],
				"execution_count": 62
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"SELECT\n",
					"\n",
					"    NULLIF(TRY_CAST(FTE AS FLOAT), '') AS FTE,\n",
					"    NULLIF(TRY_CAST(Wkhrs AS FLOAT), '') AS Wkhrs,\n",
					"  \n",
					"    TRAStartDate  AS TRAStartDate,\n",
					"    TRAEndDate  AS TRAEndDate,\n",
					"   \n",
					"    OrgStartDate  AS OrgStartDate,\n",
					"    FixTermEndDate AS FixTermEndDate,\n",
					"    LoanStartDate AS LoanStartDate,\n",
					"    LoanEndDate  AS LoanEndDate,\n",
					"   \n",
					"    NULLIF(TRY_CAST(Annualsalary AS DOUBLE), '') AS Annualsalary,\n",
					"   \n",
					"   to_date(Birthdate ,'M/d/yy') AS Birthdate,\n",
					"     Ageofemployee,\n",
					"\n",
					"    NULLIF(TRY_CAST(FTE2 AS FLOAT), '') AS FTE2\n",
					"\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					""
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"\n",
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_SAP_HR\n",
					"(\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    FTE,\n",
					"    Wkhrs,\n",
					"    IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CivilServiceStart,\n",
					"    DatetoCurrentJob,\n",
					"    SeniorityDate,\n",
					"    DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    OrgStartDate,\n",
					"    FixTermEndDate,\n",
					"    LoanStartDate,\n",
					"    LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    FTE2,\n",
					"    Report_MonthEnd_Date,\n",
					"    PDAC_ETL_Date,\n",
					"    SourceSystemID,\n",
					"    IngestionDate,\n",
					"    ValidTo,\n",
					"    RowID,\n",
					"    IsActive\n",
					")\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    NULLIF(TRY_CAST(FTE AS FLOAT), '') AS FTE,\n",
					"    NULLIF(TRY_CAST(Wkhrs AS FLOAT), '') AS Wkhrs,\n",
					"    NULLIF(TRY_CAST(IndicatorPartTimeEmployee AS BOOLEAN), '') AS IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate  AS TRAStartDate,\n",
					"    TRAEndDate  AS TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    null  AS CivilServiceStart,\n",
					"    DatetoCurrentJob  AS DatetoCurrentJob,\n",
					"    SeniorityDate  AS SeniorityDate,\n",
					"    null AS DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    null  AS OrgStartDate,\n",
					"    FixTermEndDate AS FixTermEndDate,\n",
					"    LoanStartDate AS LoanStartDate,\n",
					"    LoanEndDate  AS LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    NULLIF(TRY_CAST(Annualsalary AS DOUBLE), '') AS Annualsalary,\n",
					"    Curr,\n",
					"    NULL AS NInumber,\n",
					"    null AS Birthdate,\n",
					"     Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    NULLIF(TRY_CAST(FTE2 AS FLOAT), '') AS FTE2,\n",
					"    NULL AS Report_MonthEnd_Date,\n",
					"    current_timestamp() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    current_date() AS IngestionDate,\n",
					"    current_timestamp() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					"\"\"\")"
				],
				"execution_count": 114
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Into load table"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"\n",
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_SAP_HR\n",
					"(\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    FTE,\n",
					"    Wkhrs,\n",
					"    IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CivilServiceStart,\n",
					"    DatetoCurrentJob,\n",
					"    SeniorityDate,\n",
					"    DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    OrgStartDate,\n",
					"    FixTermEndDate,\n",
					"    LoanStartDate,\n",
					"    LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    FTE2,\n",
					"    Report_MonthEnd_Date,\n",
					"    PDAC_ETL_Date,\n",
					"    SourceSystemID,\n",
					"    IngestionDate,\n",
					"    ValidTo,\n",
					"    RowID,\n",
					"    IsActive\n",
					")\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    NULLIF(cast(FTE AS FLOAT), '') AS FTE,  -- Handle empty strings\n",
					"    NULLIF(cast(Wkhrs AS FLOAT), '') AS Wkhrs,  -- Handle empty strings\n",
					"    NULLIF(cast(IndicatorPartTimeEmployee AS BOOLEAN), '') AS IndicatorPartTimeEmployee,  -- Handle empty strings\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    try_cast(TRAStartDate AS DATE) AS TRAStartDate,\n",
					"    try_cast(TRAEndDate AS DATE) AS TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    try_cast(CivilServiceStart AS DATE) AS CivilServiceStart,\n",
					"    try_cast(DatetoCurrentJob AS DATE) AS DatetoCurrentJob,\n",
					"    try_cast(SeniorityDate AS DATE) AS SeniorityDate,\n",
					"    try_cast(DatetoSubstGrade AS DATE) AS DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    try_cast(OrgStartDate AS DATE) AS OrgStartDate,\n",
					"    try_cast(FixTermEndDate AS DATE) AS FixTermEndDate,\n",
					"    try_cast(LoanStartDate AS DATE) AS LoanStartDate,\n",
					"    try_cast(LoanEndDate AS DATE) AS LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    NULLIF(cast(Annualsalary AS DOUBLE), '') AS Annualsalary,  -- Handle empty strings\n",
					"    Curr,\n",
					"    NULL AS NInumber,\n",
					"    try_cast(Birthdate AS DATE) AS Birthdate,\n",
					"    NULLIF(cast(Ageofemployee AS INT), '') AS Ageofemployee,  -- Handle empty strings\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    NULLIF(cast(FTE2 AS FLOAT), '') AS FTE2,  -- Handle empty strings\n",
					"    NULL AS Report_MonthEnd_Date,\n",
					"    current_timestamp() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    current_date() AS IngestionDate,\n",
					"    current_timestamp() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					"\"\"\")"
				],
				"execution_count": 91
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"UPDATE odw_harmonised_db.load_SAP_HR\n",
					"SET RowID = md5(\n",
					"    concat_ws('|',\n",
					" PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    FTE,\n",
					"    Wkhrs,\n",
					"    IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CivilServiceStart,\n",
					"    DatetoCurrentJob,\n",
					"    SeniorityDate,\n",
					"    DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    OrgStartDate,\n",
					"    FixTermEndDate,\n",
					"    LoanStartDate,\n",
					"    LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    FTE2\n",
					"    )\n",
					")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Step 1: Delete all records from the table (for testing purposes)\n",
					"DELETE FROM odw_harmonised_db.hist_SAP_HR;\n",
					"\n",
					"-- Step 2: Create a temporary table to store Report_MonthEnd_Date values\n",
					"CREATE OR REPLACE TEMPORARY VIEW MonthEndDates AS\n",
					"SELECT Report_MonthEnd_Date\n",
					"FROM odw_harmonised_db.load_SAP_HR\n",
					"GROUP BY Report_MonthEnd_Date;\n",
					"\n",
					"-- Step 3: Extract file date from the source file name\n",
					"CREATE OR REPLACE TEMPORARY VIEW FileDate AS\n",
					"SELECT \n",
					"    to_date('2024-01-31', 'yyyy-MM-dd') AS file_date\n",
					"FROM \n",
					"    odw_standardised_db.leave_entitlement\n",
					"LIMIT 1;\n",
					"\n",
					"-- Step 4: Calculate staff cost\n",
					"CREATE OR REPLACE TEMPORARY VIEW StaffCost AS\n",
					"SELECT DISTINCT\n",
					"    h.PersNo AS staff_number,\n",
					"    h.PSgroup AS grade,\n",
					"    h.Annualsalary AS salary,\n",
					"    CAST(h.Annualsalary AS DOUBLE) / (365.0 * 7.4) AS hourly_rate,\n",
					"    CASE \n",
					"        WHEN datediff(le.Dedfrom, fd.file_date) >= 0 THEN le.Dedfrom\n",
					"        ELSE date_add(le.Dedfrom, -365)\n",
					"    END AS leave_start_date,\n",
					"    to_date(substring(le.file_name, 19, 8), 'yyyyMMdd') AS date_from_file_name,\n",
					"    le.Number * ABS((datediff(\n",
					"        CASE \n",
					"            WHEN datediff(le.Dedfrom, fd.file_date) >= 0 THEN le.Dedfrom\n",
					"            ELSE date_add(le.Dedfrom, -365)\n",
					"        END,\n",
					"        to_date(substring(le.file_name, 19, 8), 'yyyyMMdd')\n",
					"    ) / 364.25) % 1) AS expected_leave_taken_hrs,\n",
					"    le.Number * (1 - ABS((datediff(\n",
					"        CASE \n",
					"            WHEN datediff(le.Dedfrom, fd.file_date) >= 0 THEN le.Dedfrom\n",
					"            ELSE date_add(le.Dedfrom, -365)\n",
					"        END,\n",
					"        to_date(substring(le.file_name, 19, 8), 'yyyyMMdd')\n",
					"    ) / 364.25) % 1)) AS expected_leave_hours_remaining,\n",
					"    le.Number AS leave_allowance,\n",
					"    ABS((datediff(\n",
					"        CASE \n",
					"            WHEN datediff(le.Dedfrom, fd.file_date) >= 0 THEN le.Dedfrom\n",
					"            ELSE date_add(le.Dedfrom, -365)\n",
					"        END,\n",
					"        to_date(substring(le.file_name, 19, 8), 'yyyyMMdd')\n",
					"    ) / 364.25) % 1) AS percent_leave_year_passed,\n",
					"    (1 - ABS((datediff(\n",
					"        CASE \n",
					"            WHEN datediff(le.Dedfrom, fd.file_date) >= 0 THEN le.Dedfrom\n",
					"            ELSE date_add(le.Dedfrom, -365)\n",
					"        END,\n",
					"        to_date(substring(le.file_name, 19, 8), 'yyyyMMdd')\n",
					"    ) / 364.25) % 1)) AS percent_leave_year_remaining,\n",
					"    h.ContractType\n",
					"FROM \n",
					"    odw_harmonised_db.load_SAP_HR h\n",
					"LEFT JOIN \n",
					"    odw_standardised_db.leave_entitlement le \n",
					"ON \n",
					"    h.PersNo = CASE \n",
					"        WHEN LEFT(CAST(le.StaffNumber AS STRING), 1) = '4' THEN CONCAT('50', le.StaffNumber)\n",
					"        WHEN LEFT(CAST(le.StaffNumber AS STRING), 1) = '5' THEN CONCAT('00', le.StaffNumber)\n",
					"        ELSE CAST(le.StaffNumber AS STRING)\n",
					"    END\n",
					"CROSS JOIN \n",
					"    FileDate fd\n",
					"WHERE \n",
					"    le.AbsenceQuotaType = 'Annual Leave / P&P';\n",
					"\n",
					"-- Step 5: Calculate carried-over hours\n",
					"CREATE OR REPLACE TEMPORARY VIEW CarriedOver AS\n",
					"SELECT DISTINCT\n",
					"    h.PersNo AS staff_number,\n",
					"    CASE \n",
					"        WHEN le.Number - 148 >= 0 THEN 148\n",
					"        ELSE le.Number\n",
					"    END AS carried_over_hours\n",
					"FROM \n",
					"    odw_harmonised_db.load_SAP_HR h\n",
					"LEFT JOIN \n",
					"    odw_standardised_db.leave_entitlement le \n",
					"ON \n",
					"    h.PersNo = CASE \n",
					"        WHEN LEFT(CAST(le.StaffNumber AS STRING), 1) = '4' THEN CONCAT('50', le.StaffNumber)\n",
					"        WHEN LEFT(CAST(le.StaffNumber AS STRING), 1) = '5' THEN CONCAT('00', le.StaffNumber)\n",
					"        ELSE CAST(le.StaffNumber AS STRING)\n",
					"    END\n",
					"WHERE \n",
					"    le.AbsenceQuotaType = 'Brought Forward';\n",
					"\n",
					"-- Step 6: Calculate leave taken\n",
					"CREATE OR REPLACE TEMPORARY VIEW LeaveTaken AS\n",
					"SELECT\n",
					"    h.PersNo AS staff_number,\n",
					"    SUM(f.absence_hours) AS leave_hours_taken\n",
					"FROM \n",
					"    odw_harmonised_db.load_SAP_HR h\n",
					"LEFT JOIN \n",
					"    odw_harmonised_db.fact_absence_all f\n",
					"ON \n",
					"    h.PersNo = cast(f.staffnumber as int)\n",
					"LEFT JOIN \n",
					"    StaffCost l \n",
					"ON \n",
					"    cast(f.staffnumber as int) = l.staff_number\n",
					"LEFT JOIN \n",
					"    CarriedOver co \n",
					"ON \n",
					"    cast(f.staffnumber as int) = co.staff_number\n",
					"CROSS JOIN \n",
					"    FileDate fd  -- Add this join to reference fd.file_date\n",
					"WHERE \n",
					"    f.AttendanceorAbsenceType IN ('PT Annual / P&P Leave', 'FT Annual / Priv Leave')\n",
					"    --AND f.absence_date BETWEEN l.leave_start_date AND fd.file_date\n",
					"GROUP BY \n",
					"    h.PersNo;\n",
					"\n",
					"-- Step 7: Insert data into the historical table\n",
					"INSERT INTO odw_harmonised_db.hist_SAP_HR\n",
					"SELECT \n",
					"    h.PersNo,\n",
					"    h.Firstname,\n",
					"    h.Lastname,\n",
					"    h.EmployeeNo,\n",
					"    h.CoCd,\n",
					"    h.CompanyCode,\n",
					"    h.PA,\n",
					"    h.PersonnelArea,\n",
					"    h.PSubarea,\n",
					"    h.PersonnelSubarea,\n",
					"    h.Orgunit,\n",
					"    h.OrganizationalUnit,\n",
					"    h.Organizationalkey,\n",
					"    h.OrganizationalKey1,\n",
					"    h.WorkC,\n",
					"    h.WorkContract,\n",
					"    h.CT,\n",
					"    h.ContractType,\n",
					"    h.PSgroup,\n",
					"    h.PayBandDescription,\n",
					"    h.FTE,\n",
					"    h.Wkhrs,\n",
					"    h.IndicatorPartTimeEmployee,\n",
					"    h.S,\n",
					"    h.EmploymentStatus,\n",
					"    h.GenderKey,\n",
					"    h.TRAStartDate,\n",
					"    h.TRAEndDate,\n",
					"    h.TRAStatus,\n",
					"    h.TRAGrade,\n",
					"    h.PrevPersNo,\n",
					"    h.ActR,\n",
					"    h.ReasonforAction,\n",
					"    h.Position,\n",
					"    h.Position1,\n",
					"    h.CostCtr,\n",
					"    h.CostCentre,\n",
					"    h.CivilServiceStart,\n",
					"    h.DatetoCurrentJob,\n",
					"    h.SeniorityDate,\n",
					"    h.DatetoSubstGrade,\n",
					"    h.PersNo1,\n",
					"    h.NameofManagerOM,\n",
					"    h.ManagerPosition,\n",
					"    h.ManagerPositionText,\n",
					"    h.CounterSignManager,\n",
					"    h.Loc,\n",
					"    h.Location,\n",
					"    h.OrgStartDate,\n",
					"    h.FixTermEndDate,\n",
					"    h.LoanStartDate,\n",
					"    h.LoanEndDate,\n",
					"    h.EEGrp,\n",
					"    h.EmployeeGroup,\n",
					"    h.Annualsalary,\n",
					"    h.Curr,\n",
					"    h.NInumber,\n",
					"    h.Birthdate,\n",
					"    h.Ageofemployee,\n",
					"    h.EO,\n",
					"    h.Ethnicorigin,\n",
					"    h.NID,\n",
					"    h.Rel,\n",
					"    h.ReligiousDenominationKey,\n",
					"    h.SxO,\n",
					"    h.WageType,\n",
					"    h.EmployeeSubgroup,\n",
					"    h.LOAAbsType,\n",
					"    h.LOAAbsenceTypeText,\n",
					"    h.Schemereference,\n",
					"    h.PensionSchemeName,\n",
					"    h.DisabilityCode,\n",
					"    h.DisabilityText,\n",
					"    h.DisabilityCodeDescription,\n",
					"    h.PArea,\n",
					"    h.PayrollArea,\n",
					"    h.AssignmentNumber,\n",
					"    h.FTE2,\n",
					"    h.Report_MonthEnd_Date,\n",
					"    CURRENT_DATE() AS PDAC_ETL_Date,\n",
					"    SourceSystemID,\n",
					"    IngestionDate,\n",
					"    ValidTo,\n",
					"    RowID,\n",
					"    IsActive,\n",
					"    COALESCE(sc.leave_allowance, 0) + COALESCE(co.carried_over_hours, 0) AS leave_entitlement_hrs,\n",
					"    COALESCE(lt.leave_hours_taken, 0) AS leave_taken_hrs,\n",
					"    ROUND((COALESCE(sc.leave_allowance, 0) + COALESCE(co.carried_over_hours, 0) - COALESCE(sc.expected_leave_hours_remaining, 0) - COALESCE(lt.leave_hours_taken, 0)), 2) AS leave_remaining_hours,\n",
					"    COALESCE(ROUND(sc.expected_leave_hours_remaining, 2), 0) AS leave_remaining_prorata_hours\n",
					"\n",
					"FROM \n",
					"    odw_harmonised_db.load_SAP_HR h\n",
					"LEFT JOIN \n",
					"    StaffCost sc \n",
					"ON \n",
					"    h.PersNo = sc.staff_number\n",
					"LEFT JOIN \n",
					"    CarriedOver co \n",
					"ON \n",
					"    sc.staff_number = co.staff_number\n",
					"LEFT JOIN \n",
					"    LeaveTaken lt \n",
					"ON \n",
					"    sc.staff_number = lt.staff_number\n",
					"LEFT JOIN \n",
					"    odw_standardised_db.pension_ernic_rates p\n",
					"ON \n",
					"    sc.grade = p.Grade\n",
					"---WHERE \n",
					"  --  RIGHT(CAST(Report_MonthEnd_Date AS STRING), 5) IN ('01-31', '02-28', '02-29', '03-31', '04-30', '05-31', '06-30', '07-31', '08-31', '09-30', '10-31', '11-30', '12-31');"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"MERGE INTO odw_harmonised_db.fact_absence_all AS target\n",
					"USING (\n",
					"    SELECT \n",
					"        PersNo,\n",
					"        PSGroup,\n",
					"        PersonnelArea,\n",
					"        PersonnelSubarea,\n",
					"        Report_MonthEnd_Date \n",
					"    FROM \n",
					"        odw_harmonised_db.hist_SAP_HR\n",
					") AS source\n",
					"ON cast(target.staffnumber  as int) = source.PersNo\n",
					"--AND target.absence_date >= DATEADD(m, -1, DATEADD(d, 1, source.Report_MonthEnd_Date))\n",
					"WHEN MATCHED THEN\n",
					"    UPDATE SET \n",
					"        target.PSGroup = source.PSGroup,\n",
					"        target.PersonnelArea = source.PersonnelArea,\n",
					"        target.PersonnelSubarea = source.PersonnelSubarea;\n",
					""
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"MERGE INTO odw_harmonised_db.fact_Absence_All AS target\n",
					"USING (\n",
					"    SELECT \n",
					"        a.staffnumber,\n",
					"        p.PSGroup,\n",
					"        p.PersonnelArea,\n",
					"        p.PersonnelSubarea,\n",
					"        p.Report_MonStart_Date,\n",
					"        p.Report_MonthEnd_Date\n",
					"    FROM \n",
					"        odw_harmonised_db.fact_Absence_All a\n",
					"    INNER JOIN (\n",
					"        SELECT \n",
					"            PersNo,\n",
					"            PSGroup,\n",
					"            PersonnelArea,\n",
					"            PersonnelSubarea,\n",
					"            -- Subtract 30 days as an approximation for 1 month\n",
					"            date_sub(Report_MonthEnd_Date, 30) AS Report_MonStart_Date,\n",
					"            Report_MonthEnd_Date \n",
					"        FROM \n",
					"            odw_harmonised_db.Hist_SAP_HR \n",
					"       -- WHERE \n",
					"          --  Report_MonthEnd_Date < (SELECT MAX(Report_MonthEnd_Date) FROM odw_harmonised_db.Hist_SAP_HR)\n",
					"    ) p\n",
					"    ON cast(a.staffnumber as date) = p.PersNo\n",
					"    --AND a.absence_date BETWEEN p.Report_MonStart_Date AND p.Report_MonthEnd_Date\n",
					") AS source\n",
					"ON cast(target.staffnumber  as int) = source.staffnumber\n",
					"WHEN MATCHED THEN\n",
					"    UPDATE SET \n",
					"        target.PSGroup = source.PSGroup,\n",
					"        target.PersonnelArea = source.PersonnelArea,\n",
					"        target.PersonnelSubarea = source.PersonnelSubarea;"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"source": [
					"%%sql\n",
					"\n",
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_SAP_HR\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    null AS FTE,\n",
					"    null AS Wkhrs,\n",
					"    null AS IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    null AS TRAStartDate,\n",
					"    null AS TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    null AS CivilServiceStart,\n",
					"   null AS DatetoCurrentJob,\n",
					"    null AS SeniorityDate,\n",
					"    null AS DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"     null AS OrgStartDate,\n",
					"     null AS  FixTermEndDate,\n",
					"    null AS LoanStartDate,\n",
					"     null AS LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    null AS Annualsalary,\n",
					"    Curr,\n",
					"    NULL AS NInumber,\n",
					"    null AS Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    null AS FTE2,\n",
					"    NULL AS Report_MonthEnd_Date,\n",
					"    current_timestamp() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    current_date() AS IngestionDate,\n",
					"    current_timestamp() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					"\"\"\")"
				],
				"execution_count": 106
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"\n",
					"%%sql\n",
					"\n",
					"INSERT INTO odw_harmonised_db.load_SAP_HR\n",
					"SELECT\n",
					"    null as PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    null as EmployeeNo,\n",
					"    null as CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    null  as Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    null as Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    null as CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    NULL AS FTE,\n",
					"    NULL AS Wkhrs,\n",
					"    NULL AS IndicatorPartTimeEmployee,\n",
					"    null as S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    NULL AS TRAStartDate,\n",
					"    NULL AS TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    null as PrevPersNo,\n",
					"    null as ActR,\n",
					"    ReasonforAction,\n",
					"    null as Position,\n",
					"    null as Position1,\n",
					"    null as CostCtr,\n",
					"    CostCentre,\n",
					"    NULL AS CivilServiceStart,\n",
					"    NULL AS DatetoCurrentJob,\n",
					"    NULL AS SeniorityDate,\n",
					"    NULL AS DatetoSubstGrade,\n",
					"    null as PersNo1,\n",
					"    NameofManagerOM,\n",
					"    NULL AS ManagerPosition, -- Add the missing column here\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    null as Loc,\n",
					"    Location,\n",
					"    NULL AS OrgStartDate,\n",
					"    NULL AS FixTermEndDate,\n",
					"    NULL AS LoanStartDate,\n",
					"    NULL AS LoanEndDate,\n",
					"    null as EEGrp,\n",
					"    EmployeeGroup,\n",
					"    NULL AS Annualsalary,\n",
					"    Curr,\n",
					"    NULL AS NInumber,\n",
					"    NULL AS Birthdate,\n",
					"    Ageofemployee,\n",
					"    null as EO,\n",
					"    null as Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    NULL AS  DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    NULL AS  AssignmentNumber,\n",
					"    NULL AS FTE2,\n",
					"    NULL AS Report_MonthEnd_Date,\n",
					"    CURRENT_TIMESTAMP() AS PDAC_ETL_Date,\n",
					"    'saphr' AS SourceSystemID,\n",
					"    CURRENT_DATE() AS IngestionDate,\n",
					"    CURRENT_TIMESTAMP() AS ValidTo,\n",
					"    NULL AS RowID,\n",
					"    'Y' AS IsActive\n",
					"FROM \n",
					"    odw_standardised_db.sap_hr_history_monthly\n",
					"--WHERE\n",
					"  --  (FTE IS NULL OR FTE = '' OR TRY_CAST(FTE AS FLOAT) IS NOT NULL) AND\n",
					"  --  (Wkhrs IS NULL OR Wkhrs = '' OR TRY_CAST(Wkhrs AS FLOAT) IS NOT NULL) AND\n",
					"  ---  (Annualsalary IS NULL OR Annualsalary = '' OR TRY_CAST(Annualsalary AS DOUBLE) IS NOT NULL);"
				],
				"execution_count": 134
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"\n",
					"DESCRIBE odw_harmonised_db.load_sap_hr;"
				],
				"execution_count": 122
			},
			{
				"cell_type": "code",
				"source": [
					"df_clean = spark.sql(\"\"\"\n",
					"SELECT *,\n",
					"    CASE \n",
					"        WHEN OrgStartDate RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(OrgStartDate AS DATE) \n",
					"    END AS Clean_OrgStartDate,\n",
					"\n",
					"    CASE \n",
					"        WHEN FixTermEndDate RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(FixTermEndDate AS DATE) \n",
					"    END AS Clean_FixTermEndDate,\n",
					"\n",
					"    CASE \n",
					"        WHEN LoanStartDate RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(LoanStartDate AS DATE) \n",
					"    END AS Clean_LoanStartDate,\n",
					"\n",
					"    CASE \n",
					"        WHEN LoanEndDate RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(LoanEndDate AS DATE) \n",
					"    END AS Clean_LoanEndDate,\n",
					"\n",
					"    CASE \n",
					"        WHEN DatetoCurrentJob RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(DatetoCurrentJob AS DATE) \n",
					"    END AS Clean_DatetoCurrentJob,\n",
					"\n",
					"    CASE \n",
					"        WHEN SeniorityDate RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(SeniorityDate AS DATE) \n",
					"    END AS Clean_SeniorityDate,\n",
					"\n",
					"    CASE \n",
					"        WHEN DatetoSubstGrade RLIKE '^(00|0000)' THEN NULL \n",
					"        ELSE CAST(DatetoSubstGrade AS DATE) \n",
					"    END AS Clean_DatetoSubstGrade\n",
					"\n",
					"FROM odw_standardised_db.sap_hr_history_monthly\n",
					"\"\"\")\n",
					"\n",
					"df_clean.createOrReplaceTempView(\"cleaned_data\")\n",
					""
				],
				"execution_count": 87
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_SAP_HR"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"select * from cleaned_data"
				],
				"execution_count": 88
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"describe odw_harmonised_db.load_SAP_HR"
				],
				"execution_count": 89
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}