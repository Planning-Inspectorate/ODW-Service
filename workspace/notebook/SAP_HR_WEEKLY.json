{
	"name": "SAP_HR_WEEKLY",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fcf52f11-1f4d-4c69-b05b-5195fb6b07f2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf\n",
					"from pyspark.sql.types import DateType\n",
					"from datetime import datetime\n",
					"from delta.tables import DeltaTable\n",
					"from pyspark.sql import Window\n",
					"from pyspark.sql.functions import row_number\n",
					"from pyspark.sql.types import StructType, StructField, TimestampType, StringType"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.load_sap_hr_weekly (\n",
					"    PersNo                  STRING,\n",
					"    Firstname               STRING,\n",
					"    Lastname                STRING,\n",
					"    EmployeeNo              STRING,\n",
					"    CoCd                    STRING,\n",
					"    CompanyCode             STRING,\n",
					"    PA                      STRING,\n",
					"    PersonnelArea           STRING,\n",
					"    PSubarea                STRING,\n",
					"    PersonnelSubarea        STRING,\n",
					"    Orgunit                 STRING,\n",
					"    OrganizationalUnit      STRING,\n",
					"    Organizationalkey       STRING,\n",
					"    OrganizationalKey1      STRING,\n",
					"    WorkC                   STRING,\n",
					"    WorkContract            STRING,\n",
					"    CT                      STRING,\n",
					"    ContractType            STRING,\n",
					"    PSgroup                 STRING,\n",
					"    PayBandDescription      STRING,\n",
					"    FTE                     DOUBLE,\n",
					"    Wkhrs                   DOUBLE,\n",
					"    IndicatorPartTimeEmployee BOOLEAN,\n",
					"    S                       STRING,\n",
					"    EmploymentStatus        STRING,\n",
					"    GenderKey               STRING,\n",
					"    TRAStartDate            DATE,\n",
					"    TRAEndDate              DATE,\n",
					"    TRAStatus               STRING,\n",
					"    TRAGrade                STRING,\n",
					"    PrevPersNo              STRING,\n",
					"    ActR                    STRING,\n",
					"    ReasonforAction         STRING,\n",
					"    Position                STRING,\n",
					"    Position1               STRING,\n",
					"    CostCtr                 STRING,\n",
					"    CostCentre              STRING,\n",
					"    CivilServiceStart        DATE,\n",
					"    DatetoCurrentJob        DATE,\n",
					"    SeniorityDate           DATE,\n",
					"    DatetoSubstGrade        DATE,\n",
					"    PersNo1                 STRING,\n",
					"    NameofManagerOM         STRING,\n",
					"    ManagerPosition         STRING,\n",
					"    ManagerPositionText     STRING,\n",
					"    CounterSignManager      STRING,\n",
					"    Loc                      STRING,\n",
					"    Location                STRING,\n",
					"    OrgStartDate            DATE,\n",
					"    FixTermEndDate           DATE,\n",
					"    LoanStartDate           DATE,\n",
					"    LoanEndDate             DATE,\n",
					"    EEGrp                   STRING,\n",
					"    EmployeeGroup           STRING,\n",
					"    Annualsalary            DOUBLE,\n",
					"    Curr                    STRING,\n",
					"    NInumber                STRING,\n",
					"    Birthdate               DATE,\n",
					"    Ageofemployee           INT,\n",
					"    EO                      STRING,\n",
					"    Ethnicorigin            STRING,\n",
					"    NID                     STRING,\n",
					"    Rel                     STRING,\n",
					"    ReligiousDenominationKey STRING,\n",
					"    SxO                     STRING,\n",
					"    WageType                STRING,\n",
					"    EmployeeSubgroup        STRING,\n",
					"    LOAAbsType              STRING,\n",
					"    LOAAbsenceTypeText      STRING,\n",
					"    Schemereference         STRING,\n",
					"    PensionSchemeName       STRING,\n",
					"    DisabilityCode          STRING,\n",
					"    DisabilityText          STRING,\n",
					"    DisabilityCodeDescription STRING,\n",
					"    PArea                   STRING,\n",
					"    PayrollArea             STRING,\n",
					"    AssignmentNumber        STRING,\n",
					"    FTE2                    DOUBLE,\n",
					"    Report_MonthEnd_Date    DATE,\n",
					"    PDAC_ETL_Date            DATE\n",
					"    )\n",
					"USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"\n",
					"\n",
					"spark.sql(\"\"\"\n",
					"INSERT INTO odw_harmonised_db.load_sap_hr_weekly\n",
					"(\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    FTE,\n",
					"    Wkhrs,\n",
					"    IndicatorPartTimeEmployee,\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    TRAStartDate,\n",
					"    TRAEndDate,\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    CivilServiceStart,\n",
					"    DatetoCurrentJob,\n",
					"    SeniorityDate,\n",
					"    DatetoSubstGrade,\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    OrgStartDate,\n",
					"    FixTermEndDate,\n",
					"    LoanStartDate,\n",
					"    LoanEndDate,\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    Annualsalary,\n",
					"    Curr,\n",
					"    NInumber,\n",
					"    Birthdate,\n",
					"    Ageofemployee,\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    FTE2,\n",
					"    Report_MonthEnd_Date,\n",
					"    PDAC_ETL_Date\n",
					")\n",
					"SELECT\n",
					"    PersNo,\n",
					"    Firstname,\n",
					"    Lastname,\n",
					"    EmployeeNo,\n",
					"    CoCd,\n",
					"    CompanyCode,\n",
					"    PA,\n",
					"    PersonnelArea,\n",
					"    PSubarea,\n",
					"    PersonnelSubarea,\n",
					"    Orgunit,\n",
					"    OrganizationalUnit,\n",
					"    Organizationalkey,\n",
					"    OrganizationalKey1,\n",
					"    WorkC,\n",
					"    WorkContract,\n",
					"    CT,\n",
					"    ContractType,\n",
					"    PSgroup,\n",
					"    PayBandDescription,\n",
					"    cast(FTE AS FLOAT),\n",
					"    cast(Wkhrs AS FLOAT),\n",
					"    cast(IndicatorPartTimeEmployee AS BOOLEAN),\n",
					"    S,\n",
					"    EmploymentStatus,\n",
					"    GenderKey,\n",
					"    try_cast(TRAStartDate AS DATE),\n",
					"    try_cast(TRAEndDate AS DATE),\n",
					"    TRAStatus,\n",
					"    TRAGrade,\n",
					"    PrevPersNo,\n",
					"    ActR,\n",
					"    ReasonforAction,\n",
					"    Position,\n",
					"    Position1,\n",
					"    CostCtr,\n",
					"    CostCentre,\n",
					"    try_cast(CivilServiceStart AS DATE),\n",
					"    try_cast(DatetoCurrentJob AS DATE),\n",
					"    try_cast(SeniorityDate AS DATE),\n",
					"    try_cast(DatetoSubstGrade AS DATE),\n",
					"    PersNo1,\n",
					"    NameofManagerOM,\n",
					"    ManagerPosition,\n",
					"    ManagerPositionText,\n",
					"    CounterSignManager,\n",
					"    Loc,\n",
					"    Location,\n",
					"    try_cast(OrgStartDate AS DATE),\n",
					"    try_cast(FixTermEndDate AS DATE),\n",
					"    try_cast(LoanStartDate AS DATE),\n",
					"    try_cast(LoanEndDate AS DATE),\n",
					"    EEGrp,\n",
					"    EmployeeGroup,\n",
					"    cast(Annualsalary AS DOUBLE),\n",
					"    Curr,\n",
					"    NULL AS NInumber,\n",
					"    try_cast(Birthdate AS DATE),\n",
					"    cast(Ageofemployee AS INT),\n",
					"    EO,\n",
					"    Ethnicorigin,\n",
					"    NID,\n",
					"    Rel,\n",
					"    ReligiousDenominationKey,\n",
					"    SxO,\n",
					"    WageType,\n",
					"    EmployeeSubgroup,\n",
					"    LOAAbsType,\n",
					"    LOAAbsenceTypeText,\n",
					"    Schemereference,\n",
					"    PensionSchemeName,\n",
					"    DisabilityCode,\n",
					"    DisabilityText,\n",
					"    DisabilityCodeDescription,\n",
					"    PArea,\n",
					"    PayrollArea,\n",
					"    AssignmentNumber,\n",
					"    cast(FTE2 AS FLOAT),\n",
					"    NULL AS Report_MonthEnd_Date,\n",
					"    current_timestamp() AS PDAC_ETL_Date\n",
					"FROM odw_standardised_db.sap_hr_weekly\n",
					"\"\"\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.sap_employee_hierarchy\n",
					"(\n",
					"        PersNo string ,\n",
					"        FullName string ,\n",
					"        email_address string,\n",
					"        EmpLevel int ,\n",
					"        ManagerNo string ,\n",
					"        Manager string ,\n",
					"        ManagerEmail string ,\n",
					"        LastUpdated date \n",
					"        )\n",
					"USING DELTA\n",
					"\"\"\") "
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"-- Delete existing data from the target table\n",
					"DELETE FROM odw_harmonised_db.sap_employee_hierarchy;\n",
					"\n",
					"-- Precompute email addresses for all employees and build the hierarchy\n",
					"WITH EmailData AS (\n",
					"    SELECT \n",
					"        H.PersNo,\n",
					"        COALESCE(e.EmailAddress, e2.EmailAddress, NULL) AS email_address\n",
					"    FROM \n",
					"        odw_harmonised_db.load_sap_hr_weekly H\n",
					"    LEFT JOIN odw_harmonised_db.SAP_PINS_email_weekly e \n",
					"        ON CAST(REPLACE(LTRIM(REPLACE(H.PersNo, '0', ' ')), ' ', '0') AS INT) = e.StaffNumber\n",
					"    LEFT JOIN odw_harmonised_db.SAP_PINS_email_weekly e2 \n",
					"        ON CASE LEFT(H.PersNo, 2)\n",
					"                WHEN '50' THEN SUBSTRING(CAST(H.PersNo AS VARCHAR(50)), 3, LEN(CAST(H.PersNo AS VARCHAR(50))))\n",
					"                ELSE H.PersNo\n",
					"           END = e2.StaffNumber\n",
					"),\n",
					"\n",
					"-- Recursive CTE to build the hierarchy\n",
					"cteReports AS (\n",
					"    -- Anchor Member: Base case for recursion\n",
					"    SELECT \n",
					"        H1.PersNo,\n",
					"        H1.Firstname,\n",
					"        H1.Lastname,\n",
					"        H1.PersNo1 AS ManagerNo,\n",
					"        1 AS EmpLevel,\n",
					"        ed.email_address\n",
					"    FROM \n",
					"        odw_harmonised_db.load_sap_hr_weekly H1\n",
					"    INNER JOIN EmailData ed \n",
					"        ON H1.PersNo = ed.PersNo\n",
					"    WHERE \n",
					"        H1.PersNo1 = '00000000'\n",
					"\n",
					"    UNION ALL  -- Recursive Member: References the CTE itself\n",
					"\n",
					"    SELECT \n",
					"        e.PersNo,\n",
					"        e.Firstname,\n",
					"        e.Lastname,\n",
					"        e.PersNo1 AS ManagerNo,\n",
					"        r.EmpLevel + 1 AS EmpLevel,\n",
					"        ed2.email_address\n",
					"    FROM \n",
					"        odw_harmonised_db.load_sap_hr_weekly e\n",
					"    INNER JOIN EmailData ed2 \n",
					"        ON e.PersNo = ed2.PersNo\n",
					"    INNER JOIN cteReports r \n",
					"        ON CAST(e.PersNo1 AS INT) = CAST(r.PersNo AS INT)\n",
					")\n",
					"\n",
					"-- Insert into the final table\n",
					"INSERT INTO odw_harmonised_db.sap_employee_hierarchy\n",
					"SELECT DISTINCT\n",
					"    cr.PersNo,\n",
					"    cr.FirstName || ' ' || cr.LastName AS FullName,\n",
					"    cr.email_address,\n",
					"    cr.EmpLevel,\n",
					"    cr.ManagerNo,\n",
					"    m.Firstname || ' ' || m.Lastname AS Manager,\n",
					"    ed.email_address AS ManagerEmail,\n",
					"    CAST(current_date() AS DATE) AS LastUpdated\n",
					"FROM \n",
					"    cteReports cr\n",
					"LEFT JOIN odw_harmonised_db.load_sap_hr_weekly m \n",
					"    ON cr.ManagerNo = m.PersNo\n",
					"LEFT JOIN EmailData ed \n",
					"    ON cr.ManagerNo = ed.PersNo;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"drop table odw_harmonised_db.sap_employee_hierarchy"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"CREATE TABLE IF NOT EXISTS odw_harmonised_db.sap_employee_hierarchy\n",
					"(\n",
					"        PersNo string ,\n",
					"        FullName string ,\n",
					"        email_address string,\n",
					"        EmpLevel int ,\n",
					"        ManagerNo string ,\n",
					"        Manager string ,\n",
					"        ManagerEmail string ,\n",
					"        LastUpdated date \n",
					"        )\n",
					"USING DELTA\n",
					"\"\"\") "
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"delete from odw_harmonised_db.sap_employee_hierarchy;\n",
					"\n",
					"-- Step 1: Create a temporary view for EmailData\n",
					"CREATE OR REPLACE TEMP VIEW EmailData AS\n",
					"SELECT \n",
					"    H.PersNo,\n",
					"    COALESCE(e.EmailAddress, e2.EmailAddress, NULL) AS email_address\n",
					"FROM \n",
					"    odw_harmonised_db.load_sap_hr_weekly H\n",
					"LEFT JOIN odw_harmonised_db.SAP_PINS_email_weekly e \n",
					"    ON CAST(REPLACE(LTRIM(REPLACE(H.PersNo, '0', ' ')), ' ', '0') AS INT) = e.StaffNumber\n",
					"LEFT JOIN odw_harmonised_db.SAP_PINS_email_weekly e2 \n",
					"    ON CASE LEFT(H.PersNo, 2)\n",
					"            WHEN '50' THEN SUBSTRING(CAST(H.PersNo AS VARCHAR(50)), 3, LEN(CAST(H.PersNo AS VARCHAR(50))))\n",
					"            ELSE H.PersNo\n",
					"       END = e2.StaffNumber;\n",
					"\n",
					"-- Step 2: Create a temporary table for the hierarchy (base case)\n",
					"DROP TABLE IF EXISTS cteReports;\n",
					"CREATE TABLE cteReports AS\n",
					"SELECT \n",
					"    H1.PersNo,\n",
					"    H1.Firstname,\n",
					"    H1.Lastname,\n",
					"    H1.PersNo1 AS ManagerNo,\n",
					"    1 AS EmpLevel,\n",
					"    ed.email_address\n",
					"FROM \n",
					"    odw_harmonised_db.load_sap_hr_weekly H1\n",
					"INNER JOIN EmailData ed \n",
					"    ON H1.PersNo = ed.PersNo\n",
					"WHERE \n",
					"    H1.PersNo1 = '00000000';\n",
					"\n",
					"-- Step 3: Iteratively build the hierarchy (non-recursive approach)\n",
					"-- Run this query repeatedly until no new rows are added\n",
					"INSERT INTO cteReports\n",
					"SELECT \n",
					"    e.PersNo,\n",
					"    e.Firstname,\n",
					"    e.Lastname,\n",
					"    e.PersNo1 AS ManagerNo,\n",
					"    r.EmpLevel + 1 AS EmpLevel,\n",
					"    ed2.email_address\n",
					"FROM \n",
					"    odw_harmonised_db.load_sap_hr_weekly e\n",
					"INNER JOIN EmailData ed2 \n",
					"    ON e.PersNo = ed2.PersNo\n",
					"left JOIN cteReports r \n",
					"    ON CAST(e.PersNo1 AS INT) = CAST(r.PersNo AS INT)\n",
					"WHERE \n",
					"    e.PersNo NOT IN (SELECT PersNo FROM cteReports);  -- Avoid duplicates\n",
					"\n",
					"-- Step 4: Insert the final results into the target table\n",
					"INSERT INTO odw_harmonised_db.sap_employee_hierarchy\n",
					"SELECT DISTINCT\n",
					"    cr.PersNo,\n",
					"    CONCAT(cr.FirstName, ' ', cr.LastName) AS FullName,\n",
					"    cr.email_address,\n",
					"    cr.EmpLevel,\n",
					"    cr.ManagerNo,\n",
					"    CONCAT(m.Firstname, ' ', m.Lastname) AS Manager,\n",
					"    ed.email_address AS ManagerEmail,\n",
					"    CAST(CURRENT_TIMESTAMP AS DATE) AS LastUpdated\n",
					"FROM \n",
					"    cteReports cr\n",
					"LEFT JOIN odw_harmonised_db.load_sap_hr_weekly m \n",
					"    ON cr.ManagerNo = m.PersNo\n",
					"LEFT JOIN EmailData ed \n",
					"    ON cr.ManagerNo = ed.PersNo;\n",
					"\n",
					"-- Step 5: Clean up temporary table\n",
					"DROP TABLE IF EXISTS cteReports;"
				],
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select count(*) from odw_harmonised_db.sap_employee_hierarchy"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}