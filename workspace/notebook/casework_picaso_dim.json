{
	"name": "casework_picaso_dim",
	"properties": {
		"folder": {
			"name": "odw-harmonised/Casework"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8fe12720-7f74-47fe-92c9-de17fc7bdc93"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Check for new, updated or deleted data\n",
					"- This script checks for new, updated or deleted data by checking the source data (horizon tables) against the target (odw_harmonised_db.casework tables)\n",
					"- **New Data:** where an main Reference in the source does not exist in the target, then NewData flag is set to 'Y'\n",
					"- **Updated data:** Comparison occurs on Reference Fields in source and in target where the row hash is different i.e. there is a change in one of the columns. NewData flag is set to 'Y'\n",
					"- **Deleted data:** where an Reference info in the target exists but the same identifyers don't exist in the source. DeletedData flag is set to 'Y'\n",
					"\n",
					"## View casework_picasso_dim is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build casework_picasso_dim table\r\n",
					"-- Gets modified or deleted from source rows\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_picasso_dim_new\r\n",
					"\r\n",
					"     AS\r\n",
					"\r\n",
					"-- gets data that matches of SourceID and flags that it is modified based on a row (md5) hash. Flags as \"NewData\"\r\n",
					"-- gets data that is in the target but not in source. Flags as \"DeletedData\"\r\n",
					"\r\n",
					"SELECT \r\n",
					"    CASE\r\n",
					"        WHEN T1.appeal_reference_number IS NULL\r\n",
					"        THEN T3.PicassoID\r\n",
					"        ELSE NULL\r\n",
					"    END                                             AS PicassoID,\r\n",
					"    T1.appeal_reference_number                      AS AppealRefNumber,\r\n",
					"    T1.valid_date                                   AS ValidDate,\r\n",
					"    T1.received_date                                AS ReceivedDate,\r\n",
					"    T1.event_date                                   AS EventDate,\r\n",
					"    T1.start_date                                   AS StartDate,\r\n",
					"    T1.decided_date                                 AS DecidedDate,\r\n",
					"    T1.first_submission_date                        AS FirstSubmissionDate,\r\n",
					"    T1.last_submission_date                         AS LastSubmissionDate,\r\n",
					"    T1.appeal_end_date                              AS AppealEndDate,\r\n",
					"    T1.procedure_name                               AS ProcedureName,\r\n",
					"    T10.LPAID                                       AS LPAID,\r\n",
					"    T1.appeal_type                                  AS AppealType,\r\n",
					"    T1.jurisdiction                                 AS Jurisdiction,\r\n",
					"    T1.development_type                             AS DevelopmentType,\r\n",
					"    T1.inspector_staff_number                       AS InspectorStaffNumber,\r\n",
					"    T1.processing_state                             AS ProcessingState,\r\n",
					"    T1.specialism_level_code                        AS SpecialismLevelCode,\r\n",
					"    T1.site_postcode_region                         AS SitePostcodeRegion,\r\n",
					"    T1.target_source_key                            AS TargetSourceKey,\r\n",
					"    T1.case_officer_email                           AS CaseOfficerEmail,\r\n",
					"    T1.open_processing_stage                        AS OpenProcessingStage,\r\n",
					"    T1.open_valid_to_today_weeks                    AS OpenValidToTodayWeeks,\r\n",
					"    T1.open_valid_to_today_target_status            AS OpenValidToTodayTargetStatus,\r\n",
					"    T1.open_sitting_to_today_weeks                  AS OpenSittingToTodayWeeks,\r\n",
					"    T1.valid_to_start_weeks                         AS ValidToStartWeeks,\r\n",
					"    T1.valid_to_sitting_weeks                       AS ValidToSittingWeeks,\r\n",
					"    T1.start_to_decision_weeks                      AS StartToDecisionWeeks,\r\n",
					"    T1.valid_to_decision_weeks                      AS ValidToDecisionWeeks,\r\n",
					"    T1.received_to_decision_weeks                   AS ReceivedToDecisionWeeks,\r\n",
					"    T1.sitting_to_decision_weeks                    AS SittingToDecisionWeeks,\r\n",
					"    T1.start_to_sitting_weeks                       AS StartToSittingWeeks,\r\n",
					"    T1.received_to_valid_weeks                      AS ReceivedToValidWeeks,\r\n",
					"    T1.open_weeks_since_sitting                     AS OpenWeeksSinceSitting, \r\n",
					"    T1.sitting_to_first_submission_weeks            AS SittingToFirstSubmissionWeeks,\r\n",
					"    T1.sitting_to_last_submission_weeks             AS SittingToLastSubmissionWeeks,\r\n",
					"    T1.last_submission_to_decision_weeks            AS LastSubmissionToDecisionWeeks,\r\n",
					"    T1.inspector_personal_target_date               AS InspectorPersonalTargetDate,\r\n",
					"    T1.inspector_personal_target_marker             AS InspectorPersonalTargetMarker,\r\n",
					"    T1.date_order_flag                              AS DateOrderFlag,\r\n",
					"    T1.open_received_to_today_weeks                 AS OpenReceivedToTodayWeeks,\r\n",
					"    T1.received_to_end_weeks                        AS ReceivedToEndWeeks,\r\n",
					"    T1.open_start_to_today_weeks                    AS OpenStartToTodayWeeks,\r\n",
					"    T1.open_submit_to_today_weeks                   AS OpenSubmitToTodayWeeks,\r\n",
					"    T1.was_gdt_VtoS_hit                             AS WasGDTVtoSHit,\r\n",
					"    T1.was_gdt_StoE_hit                             AS WasGDTStoEHit,\r\n",
					"    T1.was_gdt_EtoD_hit                             AS WasGDTEtoDHit,\r\n",
					"    T1.was_gdt_overall_hit                          AS WasGDTOverallHit,\r\n",
					"    T1.start_to_last_submission_weeks               AS StartToLastSubmissionWeeks,\r\n",
					"    T1.source_system                                AS SourceSystem,\r\n",
					"    T1.received_to_start_weeks                      AS ReceivedToStartWeeks,\r\n",
					"    T1.received_to_event_weeks                      AS ReceivedToEventWeeks,\r\n",
					"    T1.lpa_decision_to_received_weeks               AS LpaDecisionToReceivedWeeks,\r\n",
					"    T1.event_to_submission_target_hit               AS EventToSubmissionTargetHit,\r\n",
					"    T1.development_or_allegation                    AS DevelopmentOrAllegation,\r\n",
					"    T1.apellant                                     AS Appellant,\r\n",
					"    T1.site_address_line_1                          AS SiteAddressLine1,\r\n",
					"    T1.site_address_postcode                        AS SiteAddressPostcode,\r\n",
					"    T1.lpa_application_reference                    AS LpaApplicationReference,\r\n",
					"    T1.redetermined                                 AS Redetermined,\r\n",
					"    T1.has_bespoke_target                           AS HasBespokeTarget,\r\n",
					"    T1.enforcement_linked                           AS EnforcementLinked,\r\n",
					"    T1.appeal_turned_away_date                      AS AppealTurnedAwayDate,\r\n",
					"    T1.appeal_withdrawn_date                        AS AppealWithdrawnDate,\r\n",
					"    T1.target_date                                  AS TargetDate,\r\n",
					"    T1.is_kiosk                                     AS IsKiosk,\r\n",
					"    T1.in_measure                                   AS InMeasure,\r\n",
					"    T1.was_target_hit                               AS WasTargetHit,\r\n",
					"    T1.was_legacy_target_hit                        AS WasLegacyTargetHit,\r\n",
					"    T1.is_reading_case                              AS IsReadingCase,\r\n",
					"    T1.floorspaceinsquaremetres                     AS FloorSpaceInSquareMetres,\r\n",
					"    T1.appellantprocedure                           AS AppellantProcedure,\r\n",
					"    T1.appealsdocumentscomplete                     AS AppealsDocumentsComplete,\r\n",
					"    T1.decisioncode                                 AS DecisionCode,\r\n",
					"    T1.decisioncodedesc                             AS DecisionCodeDesc,\r\n",
					"    T1.appeal_decided_date                          AS AppealDecidedDate,\r\n",
					"    T1.sitevisittime                                AS SiteVisitTime,\r\n",
					"    T1.timeline5_statementofcommongrounddue         AS Timeline5StatementOfCommonGroundDue,\r\n",
					"    T1.timeline5_statementofcommongroundpublished   AS Timeline5StatementOfCommonGroundPublished,\r\n",
					"    T1.timeline5_appellantstatementpublished        AS Timeline5AppellantStatementPublished,\r\n",
					"    T1.timeline5_appellantstatementdue              AS Timeline5AppellantStatementDue,\r\n",
					"    T1.ownership_permission                         AS OwnershipPermission,\r\n",
					"    T1.event_code                                   AS EventCode,\r\n",
					"    T1.lpa_application_date                         AS LpaApplicationDate,\r\n",
					"    T1.lpa_decision_date                            AS LpaDecisionDate,\r\n",
					"    T1.ons_code                                     AS OnsCode,\r\n",
					"    T1.site_address                                 AS SiteAddress,\r\n",
					"    T1.is_virtual_event                             AS IsVirtualEvent,\r\n",
					"    T1.prior_approval                               AS PriorApproval,\r\n",
					"    T1.final_comments_due_date                      AS FinalCommentsDueDate,\r\n",
					"    T1.appeal_source_indicator                      AS AppealSourceIndicator,\r\n",
					"    T2.SourceSystemID,\r\n",
					"    to_timestamp(T1.expected_from)                  AS IngestionDate,\r\n",
					"    NULL                                            AS ValidTo,\r\n",
					"    md5(\r\n",
					"        concat(\r\n",
					"            IFNULL(T1.appeal_reference_number,'.'),\r\n",
					"            IFNULL(T1.valid_date,'.'),\r\n",
					"            IFNULL(T1.received_date,'.'),\r\n",
					"            IFNULL(T1.event_date,'.'),\r\n",
					"            IFNULL(T1.start_date,'.'),\r\n",
					"            IFNULL(T1.decided_date,'.'),\r\n",
					"            IFNULL(T1.first_submission_date,'.'),\r\n",
					"            IFNULL(T1.last_submission_date,'.'),\r\n",
					"            IFNULL(T1.appeal_end_date,'.'),\r\n",
					"            IFNULL(T1.procedure_name,'.'),\r\n",
					"            IFNULL(T10.LPAID,'.'),\r\n",
					"            IFNULL(T1.appeal_type,'.'),\r\n",
					"            IFNULL(T1.jurisdiction,'.'),\r\n",
					"            IFNULL(T1.development_type,'.'),\r\n",
					"            IFNULL(T1.inspector_staff_number,'.'),\r\n",
					"            IFNULL(T1.processing_state,'.'),\r\n",
					"            IFNULL(T1.specialism_level_code,'.'),\r\n",
					"            IFNULL(T1.site_postcode_region,'.'),\r\n",
					"            IFNULL(T1.target_source_key,'.'),\r\n",
					"            IFNULL(T1.case_officer_email,'.'),\r\n",
					"            IFNULL(T1.open_processing_stage,'.'),\r\n",
					"            IFNULL(T1.open_valid_to_today_weeks,'.'),\r\n",
					"            IFNULL(T1.open_valid_to_today_target_status,'.'),\r\n",
					"            IFNULL(T1.open_sitting_to_today_weeks,'.'),\r\n",
					"            IFNULL(T1.valid_to_start_weeks,'.'),\r\n",
					"            IFNULL(T1.valid_to_sitting_weeks,'.'),\r\n",
					"            IFNULL(T1.start_to_decision_weeks,'.'),\r\n",
					"            IFNULL(T1.valid_to_decision_weeks,'.'),\r\n",
					"            IFNULL(T1.received_to_decision_weeks,'.'),\r\n",
					"            IFNULL(T1.sitting_to_decision_weeks,'.'),\r\n",
					"            IFNULL(T1.start_to_sitting_weeks,'.'),\r\n",
					"            IFNULL(T1.received_to_valid_weeks,'.'),\r\n",
					"            IFNULL(T1.open_weeks_since_sitting,'.'),\r\n",
					"            IFNULL(T1.sitting_to_first_submission_weeks,'.'),\r\n",
					"            IFNULL(T1.sitting_to_last_submission_weeks,'.'),\r\n",
					"            IFNULL(T1.last_submission_to_decision_weeks,'.'),\r\n",
					"            IFNULL(T1.inspector_personal_target_date,'.'),\r\n",
					"            IFNULL(T1.inspector_personal_target_marker,'.'),\r\n",
					"            IFNULL(T1.date_order_flag,'.'),\r\n",
					"            IFNULL(T1.open_received_to_today_weeks,'.'),\r\n",
					"            IFNULL(T1.received_to_end_weeks,'.'),\r\n",
					"            IFNULL(T1.open_start_to_today_weeks,'.'),\r\n",
					"            IFNULL(T1.open_submit_to_today_weeks,'.'),\r\n",
					"            IFNULL(T1.was_gdt_VtoS_hit,'.'),\r\n",
					"            IFNULL(T1.was_gdt_StoE_hit,'.'),\r\n",
					"            IFNULL(T1.was_gdt_EtoD_hit,'.'),\r\n",
					"            IFNULL(T1.was_gdt_overall_hit,'.'),\r\n",
					"            IFNULL(T1.start_to_last_submission_weeks,'.'),\r\n",
					"            IFNULL(T1.source_system,'.'),\r\n",
					"            IFNULL(T1.received_to_start_weeks,'.'),\r\n",
					"            IFNULL(T1.received_to_event_weeks,'.'),\r\n",
					"            IFNULL(T1.lpa_decision_to_received_weeks,'.'),\r\n",
					"            IFNULL(T1.event_to_submission_target_hit,'.'),\r\n",
					"            IFNULL(T1.development_or_allegation,'.'),\r\n",
					"            IFNULL(T1.apellant,'.'),\r\n",
					"            IFNULL(T1.site_address_line_1,'.'),\r\n",
					"            IFNULL(T1.site_address_postcode,'.'),\r\n",
					"            IFNULL(T1.lpa_application_reference,'.'),\r\n",
					"            IFNULL(T1.redetermined,'.'),\r\n",
					"            IFNULL(T1.has_bespoke_target,'.'),\r\n",
					"            IFNULL(T1.enforcement_linked,'.'),\r\n",
					"            IFNULL(T1.appeal_turned_away_date,'.'),\r\n",
					"            IFNULL(T1.appeal_withdrawn_date,'.'),\r\n",
					"            IFNULL(T1.target_date,'.'),\r\n",
					"            IFNULL(T1.is_kiosk,'.'),\r\n",
					"            IFNULL(T1.in_measure,'.'),\r\n",
					"            IFNULL(T1.was_target_hit,'.'),\r\n",
					"            IFNULL(T1.was_legacy_target_hit,'.'),\r\n",
					"            IFNULL(T1.is_reading_case,'.'),\r\n",
					"            IFNULL(T1.floorspaceinsquaremetres,'.'),\r\n",
					"            IFNULL(T1.appellantprocedure,'.'),\r\n",
					"            IFNULL(T1.appealsdocumentscomplete,'.'),\r\n",
					"            IFNULL(T1.decisioncode,'.'),\r\n",
					"            IFNULL(T1.decisioncodedesc,'.'),\r\n",
					"            IFNULL(T1.appeal_decided_date,'.'),\r\n",
					"            IFNULL(T1.sitevisittime,'.'),\r\n",
					"            IFNULL(T1.timeline5_statementofcommongrounddue,'.'),\r\n",
					"            IFNULL(T1.timeline5_statementofcommongroundpublished,'.'),\r\n",
					"            IFNULL(T1.timeline5_appellantstatementpublished,'.'),\r\n",
					"            IFNULL(T1.timeline5_appellantstatementdue,'.'),\r\n",
					"            IFNULL(T1.ownership_permission,'.'),\r\n",
					"            IFNULL(T1.event_code,'.'),\r\n",
					"            IFNULL(T1.lpa_application_date,'.'),\r\n",
					"            IFNULL(T1.lpa_decision_date,'.'),\r\n",
					"            IFNULL(T1.ons_code,'.'),\r\n",
					"            IFNULL(T1.site_address,'.'),\r\n",
					"            IFNULL(T1.is_virtual_event,'.'),\r\n",
					"            IFNULL(T1.prior_approval,'.'),\r\n",
					"            IFNULL(T1.final_comments_due_date,'.'),\r\n",
					"            IFNULL(T1.appeal_source_indicator,'.')\r\n",
					"        ))                                          AS RowID, -- this hash should contain all the defining fields\r\n",
					"    'Y'                                             AS IsActive, \r\n",
					"    T3.IsActive                                     AS HistoricIsActive\r\n",
					"\r\n",
					"FROM odw_standardised_db.casework_picaso T1\r\n",
					"LEFT JOIN odw_harmonised_db.main_sourcesystem_fact T2 ON \"Casework\" = T2.Description AND T2.IsActive = 'Y'\r\n",
					"LEFT JOIN odw_harmonised_db.casework_local_planning_authority_fact T10 ON T1.lpa_code = T10.LPACode AND T10.IsActive = 'Y'\r\n",
					"FULL JOIN odw_harmonised_db.casework_picasso_dim T3 ON T1.appeal_reference_number = T3.AppealRefNumber AND T3.IsActive = 'Y'\r\n",
					"WHERE\r\n",
					"    -- flags new data        \r\n",
					"    CASE\r\n",
					"        WHEN T1.appeal_reference_number = T3.AppealRefNumber AND md5(\r\n",
					"            concat(\r\n",
					"                IFNULL(T1.appeal_reference_number,'.'),\r\n",
					"                IFNULL(T1.valid_date,'.'),\r\n",
					"                IFNULL(T1.received_date,'.'),\r\n",
					"                IFNULL(T1.event_date,'.'),\r\n",
					"                IFNULL(T1.start_date,'.'),\r\n",
					"                IFNULL(T1.decided_date,'.'),\r\n",
					"                IFNULL(T1.first_submission_date,'.'),\r\n",
					"                IFNULL(T1.last_submission_date,'.'),\r\n",
					"                IFNULL(T1.appeal_end_date,'.'),\r\n",
					"                IFNULL(T1.procedure_name,'.'),\r\n",
					"                IFNULL(T10.LPAID,'.'),\r\n",
					"                IFNULL(T1.appeal_type,'.'),\r\n",
					"                IFNULL(T1.jurisdiction,'.'),\r\n",
					"                IFNULL(T1.development_type,'.'),\r\n",
					"                IFNULL(T1.inspector_staff_number,'.'),\r\n",
					"                IFNULL(T1.processing_state,'.'),\r\n",
					"                IFNULL(T1.specialism_level_code,'.'),\r\n",
					"                IFNULL(T1.site_postcode_region,'.'),\r\n",
					"                IFNULL(T1.target_source_key,'.'),\r\n",
					"                IFNULL(T1.case_officer_email,'.'),\r\n",
					"                IFNULL(T1.open_processing_stage,'.'),\r\n",
					"                IFNULL(T1.open_valid_to_today_weeks,'.'),\r\n",
					"                IFNULL(T1.open_valid_to_today_target_status,'.'),\r\n",
					"                IFNULL(T1.open_sitting_to_today_weeks,'.'),\r\n",
					"                IFNULL(T1.valid_to_start_weeks,'.'),\r\n",
					"                IFNULL(T1.valid_to_sitting_weeks,'.'),\r\n",
					"                IFNULL(T1.start_to_decision_weeks,'.'),\r\n",
					"                IFNULL(T1.valid_to_decision_weeks,'.'),\r\n",
					"                IFNULL(T1.received_to_decision_weeks,'.'),\r\n",
					"                IFNULL(T1.sitting_to_decision_weeks,'.'),\r\n",
					"                IFNULL(T1.start_to_sitting_weeks,'.'),\r\n",
					"                IFNULL(T1.received_to_valid_weeks,'.'),\r\n",
					"                IFNULL(T1.open_weeks_since_sitting,'.'),\r\n",
					"                IFNULL(T1.sitting_to_first_submission_weeks,'.'),\r\n",
					"                IFNULL(T1.sitting_to_last_submission_weeks,'.'),\r\n",
					"                IFNULL(T1.last_submission_to_decision_weeks,'.'),\r\n",
					"                IFNULL(T1.inspector_personal_target_date,'.'),\r\n",
					"                IFNULL(T1.inspector_personal_target_marker,'.'),\r\n",
					"                IFNULL(T1.date_order_flag,'.'),\r\n",
					"                IFNULL(T1.open_received_to_today_weeks,'.'),\r\n",
					"                IFNULL(T1.received_to_end_weeks,'.'),\r\n",
					"                IFNULL(T1.open_start_to_today_weeks,'.'),\r\n",
					"                IFNULL(T1.open_submit_to_today_weeks,'.'),\r\n",
					"                IFNULL(T1.was_gdt_VtoS_hit,'.'),\r\n",
					"                IFNULL(T1.was_gdt_StoE_hit,'.'),\r\n",
					"                IFNULL(T1.was_gdt_EtoD_hit,'.'),\r\n",
					"                IFNULL(T1.was_gdt_overall_hit,'.'),\r\n",
					"                IFNULL(T1.start_to_last_submission_weeks,'.'),\r\n",
					"                IFNULL(T1.source_system,'.'),\r\n",
					"                IFNULL(T1.received_to_start_weeks,'.'),\r\n",
					"                IFNULL(T1.received_to_event_weeks,'.'),\r\n",
					"                IFNULL(T1.lpa_decision_to_received_weeks,'.'),\r\n",
					"                IFNULL(T1.event_to_submission_target_hit,'.'),\r\n",
					"                IFNULL(T1.development_or_allegation,'.'),\r\n",
					"                IFNULL(T1.apellant,'.'),\r\n",
					"                IFNULL(T1.site_address_line_1,'.'),\r\n",
					"                IFNULL(T1.site_address_postcode,'.'),\r\n",
					"                IFNULL(T1.lpa_application_reference,'.'),\r\n",
					"                IFNULL(T1.redetermined,'.'),\r\n",
					"                IFNULL(T1.has_bespoke_target,'.'),\r\n",
					"                IFNULL(T1.enforcement_linked,'.'),\r\n",
					"                IFNULL(T1.appeal_turned_away_date,'.'),\r\n",
					"                IFNULL(T1.appeal_withdrawn_date,'.'),\r\n",
					"                IFNULL(T1.target_date,'.'),\r\n",
					"                IFNULL(T1.is_kiosk,'.'),\r\n",
					"                IFNULL(T1.in_measure,'.'),\r\n",
					"                IFNULL(T1.was_target_hit,'.'),\r\n",
					"                IFNULL(T1.was_legacy_target_hit,'.'),\r\n",
					"                IFNULL(T1.is_reading_case,'.'),\r\n",
					"                IFNULL(T1.floorspaceinsquaremetres,'.'),\r\n",
					"                IFNULL(T1.appellantprocedure,'.'),\r\n",
					"                IFNULL(T1.appealsdocumentscomplete,'.'),\r\n",
					"                IFNULL(T1.decisioncode,'.'),\r\n",
					"                IFNULL(T1.decisioncodedesc,'.'),\r\n",
					"                IFNULL(T1.appeal_decided_date,'.'),\r\n",
					"                IFNULL(T1.sitevisittime,'.'),\r\n",
					"                IFNULL(T1.timeline5_statementofcommongrounddue,'.'),\r\n",
					"                IFNULL(T1.timeline5_statementofcommongroundpublished,'.'),\r\n",
					"                IFNULL(T1.timeline5_appellantstatementpublished,'.'),\r\n",
					"                IFNULL(T1.timeline5_appellantstatementdue,'.'),\r\n",
					"                IFNULL(T1.ownership_permission,'.'),\r\n",
					"                IFNULL(T1.event_code,'.'),\r\n",
					"                IFNULL(T1.lpa_application_date,'.'),\r\n",
					"                IFNULL(T1.lpa_decision_date,'.'),\r\n",
					"                IFNULL(T1.ons_code,'.'),\r\n",
					"                IFNULL(T1.site_address,'.'),\r\n",
					"                IFNULL(T1.is_virtual_event,'.'),\r\n",
					"                IFNULL(T1.prior_approval,'.'),\r\n",
					"                IFNULL(T1.final_comments_due_date,'.'),\r\n",
					"                IFNULL(T1.appeal_source_indicator,'.')\r\n",
					"            )) <> T3.RowID  -- same record, changed data\r\n",
					"        THEN 'Y'\r\n",
					"        WHEN T3.AppealRefNumber IS NULL -- new record\r\n",
					"        THEN 'Y'\r\n",
					"    ELSE 'N'\r\n",
					"    END  = 'Y'"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by numbers\r\n",
					"- This script checks for the total number of current codes in the harmonised table, and compare against the numbers for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive.\r\n",
					"- **Changes tolerance levels:** if the total amount to be added and deleted surpasses the tolerance limit, it will interrupt the process of loading the data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Source_Number = spark.sql(\"SELECT COUNT(*) AS Source_Number FROM pins_casework_all_appeals_grouped\")\r\n",
					"# Current_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Current_Number FROM odw_harmonised_db.casework_picasso_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS New_Data_Number FROM casework_picasso_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Number = spark.sql(\"SELECT COUNT (DISTINCT RowID) AS Deleted_Data_Number FROM casework_picasso_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Source_Number_Pandas = Source_Number.toPandas()\r\n",
					"# Current_Number_Pandas =  Current_Number.toPandas()\r\n",
					"# New_Data_Number_Pandas = New_Data_Number.toPandas()\r\n",
					"# Deleted_Data_Number_Pandas = Deleted_Data_Number.toPandas()\r\n",
					"\r\n",
					"# # checking if new total number of registers matches the previously loaded, plus New ones, minus Deleted ones\r\n",
					"# print(\"SET 1:\")\r\n",
					"# Total_Number = Source_Number_Pandas['Source_Number'].tolist() \r\n",
					"# Current_Loaded_Number = Current_Number_Pandas['Current_Number'].tolist() \r\n",
					"# New_Data_Number = New_Data_Number_Pandas['New_Data_Number'].tolist() \r\n",
					"# Deleted_Data_Number = Deleted_Data_Number_Pandas['Deleted_Data_Number'].tolist() \r\n",
					"\r\n",
					"# if Total_Number[0] != (Current_Loaded_Number[0] + New_Data_Number[0] - Deleted_Data_Number[0]):\r\n",
					"#     raise RuntimeError(\"Loading Number do not match\")\r\n",
					"# else:\r\n",
					"#     print(\"Loading number matches with existing codes plus new, minus deleted!\")\r\n",
					"\r\n",
					"# if New_Data_Number[0] > 1000:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many new codes\")\r\n",
					"# else:\r\n",
					"#     print(\"New data under tolerance levels\")\r\n",
					"\r\n",
					"# if Deleted_Data_Number[0] > 500:\r\n",
					"#     raise RuntimeError(\"ALERT: Too many deleted codes\")\r\n",
					"# else:\r\n",
					"#     print(\"Unused codes under tolerance levels\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Run tests to check integrity of data by comparison of codes\r\n",
					"- This script checks for the total list of current codes in the harmonised table, and compare against the list for new data to be added and data to be set as inactive.\r\n",
					"- **Changes tracking:** where it checks the data against active records in harmonised and compares with records to add and records to be set as inactive."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# from pyspark.sql import SparkSession\r\n",
					"# spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"# Current_Records = spark.sql(\"SELECT DISTINCT RowID AS Current_Records FROM odw_harmonised_db.casework_picasso_dim where IsActive = 'Y' \")\r\n",
					"# New_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS New_Data_Records FROM casework_picasso_dim WHERE NewData = 'Y'\")\r\n",
					"# Deleted_Data_Records = spark.sql(\"SELECT DISTINCT RowID AS Deleted_Data_Records FROM casework_picasso_dim WHERE DeletedData = 'Y'\")\r\n",
					"\r\n",
					"# Current_Records_Pandas =  Current_Records.toPandas()\r\n",
					"# New_Data_Records_Pandas = New_Data_Records.toPandas()\r\n",
					"# Deleted_Data_Records_Pandas = Deleted_Data_Records.toPandas()\r\n",
					"\r\n",
					"# # checking if a deleted records are correcly flagged, not existing in the new data, but existing inpreviously loaded\r\n",
					"# print(\"TEST 2:\")\r\n",
					"\r\n",
					"# Current_Records = Current_Records_Pandas['Current_Records'].tolist() \r\n",
					"# Deleted_Records = Deleted_Data_Records_Pandas['Deleted_Data_Records'].tolist()\r\n",
					"# New_Records = New_Data_Records_Pandas['New_Data_Records'].tolist()\r\n",
					"\r\n",
					"# print(Current_Records)\r\n",
					"# print(Deleted_Records)\r\n",
					"# print(New_Records)\r\n",
					"\r\n",
					"# for i in Deleted_Records:\r\n",
					"#     if i in Current_Records: \r\n",
					"#         print(i + \" to be deleted is in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Delete do not match\")\r\n",
					"\r\n",
					"# for j in New_Records:\r\n",
					"#     if j not in Current_Records: \r\n",
					"#         print(j + \" to be added is not in the current records\")\r\n",
					"#     else:\r\n",
					"#         raise RuntimeError(\"Records to Add do not match\")"
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Dataset is created that contains changed data and corresponding target data\n",
					"- This script combines data that has been updated, Deleted or is new, with corresponding target data\n",
					"- View **casework_all_appeals_new** is unioned to the target data filter to only those rows where changes have been detected\n",
					"## View casework_picasso_dim_changed_rows is created"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Create new and updated dataset\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW casework_picasso_dim_changed_rows\r\n",
					"\r\n",
					"    AS\r\n",
					"\r\n",
					"-- gets updated, deleted and new rows \r\n",
					"SELECT \r\n",
					"    PicassoID,\r\n",
					"    AppealRefNumber,\r\n",
					"    ValidDate,\r\n",
					"    ReceivedDate,\r\n",
					"    EventDate,\r\n",
					"    StartDate,\r\n",
					"    DecidedDate,\r\n",
					"    FirstSubmissionDate,\r\n",
					"    LastSubmissionDate,\r\n",
					"    AppealEndDate,\r\n",
					"    ProcedureName,\r\n",
					"    LPAID,\r\n",
					"    AppealType,\r\n",
					"    Jurisdiction,\r\n",
					"    DevelopmentType,\r\n",
					"    InspectorStaffNumber,\r\n",
					"    ProcessingState,\r\n",
					"    SpecialismLevelCode,\r\n",
					"    SitePostcodeRegion,\r\n",
					"    TargetSourceKey,\r\n",
					"    CaseOfficerEmail,\r\n",
					"    OpenProcessingStage,\r\n",
					"    OpenValidToTodayWeeks,\r\n",
					"    OpenValidToTodayTargetStatus,\r\n",
					"    OpenSittingToTodayWeeks,\r\n",
					"    ValidToStartWeeks,\r\n",
					"    ValidToSittingWeeks,\r\n",
					"    StartToDecisionWeeks,\r\n",
					"    ValidToDecisionWeeks,\r\n",
					"    ReceivedToDecisionWeeks,\r\n",
					"    SittingToDecisionWeeks,\r\n",
					"    StartToSittingWeeks,\r\n",
					"    ReceivedToValidWeeks,\r\n",
					"    OpenWeeksSinceSitting, \r\n",
					"    SittingToFirstSubmissionWeeks,\r\n",
					"    SittingToLastSubmissionWeeks,\r\n",
					"    LastSubmissionToDecisionWeeks,\r\n",
					"    InspectorPersonalTargetDate,\r\n",
					"    InspectorPersonalTargetMarker,\r\n",
					"    DateOrderFlag,\r\n",
					"    OpenReceivedToTodayWeeks,\r\n",
					"    ReceivedToEndWeeks,\r\n",
					"    OpenStartToTodayWeeks,\r\n",
					"    OpenSubmitToTodayWeeks,\r\n",
					"    WasGDTVtoSHit,\r\n",
					"    WasGDTStoEHit,\r\n",
					"    WasGDTEtoDHit,\r\n",
					"    WasGDTOverallHit,\r\n",
					"    StartToLastSubmissionWeeks,\r\n",
					"    SourceSystem,\r\n",
					"    ReceivedToStartWeeks,\r\n",
					"    ReceivedToEventWeeks,\r\n",
					"    LpaDecisionToReceivedWeeks,\r\n",
					"    EventToSubmissionTargetHit,\r\n",
					"    DevelopmentOrAllegation,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressLine1,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    LpaApplicationReference,\r\n",
					"    Redetermined,\r\n",
					"    HasBespokeTarget,\r\n",
					"    EnforcementLinked,\r\n",
					"    AppealTurnedAwayDate,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    TargetDate,\r\n",
					"    IsKiosk,\r\n",
					"    InMeasure,\r\n",
					"    WasTargetHit,\r\n",
					"    WasLegacyTargetHit,\r\n",
					"    IsReadingCase,\r\n",
					"    FloorSpaceInSquareMetres,\r\n",
					"    AppellantProcedure,\r\n",
					"    AppealsDocumentsComplete,\r\n",
					"    DecisionCode,\r\n",
					"    DecisionCodeDesc,\r\n",
					"    AppealDecidedDate,\r\n",
					"    SiteVisitTime,\r\n",
					"    Timeline5StatementOfCommonGroundDue,\r\n",
					"    Timeline5StatementOfCommonGroundPublished,\r\n",
					"    Timeline5AppellantStatementPublished,\r\n",
					"    Timeline5AppellantStatementDue,\r\n",
					"    OwnershipPermission,\r\n",
					"    EventCode,\r\n",
					"    LpaApplicationDate,\r\n",
					"    LpaDecisionDate,\r\n",
					"    OnsCode,\r\n",
					"    SiteAddress,\r\n",
					"    IsVirtualEvent,\r\n",
					"    PriorApproval,\r\n",
					"    FinalCommentsDueDate,\r\n",
					"    AppealSourceIndicator,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"\r\n",
					"From casework_picasso_dim_new WHERE HistoricIsActive = 'Y' or HistoricIsActive IS NULL\r\n",
					"\r\n",
					"    UNION ALL\r\n",
					"\r\n",
					"-- gets original versions of updated rows so we can update EndDate and set IsActive flag to 'N'\r\n",
					"SELECT\r\n",
					"    PicassoID,\r\n",
					"    AppealRefNumber,\r\n",
					"    ValidDate,\r\n",
					"    ReceivedDate,\r\n",
					"    EventDate,\r\n",
					"    StartDate,\r\n",
					"    DecidedDate,\r\n",
					"    FirstSubmissionDate,\r\n",
					"    LastSubmissionDate,\r\n",
					"    AppealEndDate,\r\n",
					"    ProcedureName,\r\n",
					"    LPAID,\r\n",
					"    AppealType,\r\n",
					"    Jurisdiction,\r\n",
					"    DevelopmentType,\r\n",
					"    InspectorStaffNumber,\r\n",
					"    ProcessingState,\r\n",
					"    SpecialismLevelCode,\r\n",
					"    SitePostcodeRegion,\r\n",
					"    TargetSourceKey,\r\n",
					"    CaseOfficerEmail,\r\n",
					"    OpenProcessingStage,\r\n",
					"    OpenValidToTodayWeeks,\r\n",
					"    OpenValidToTodayTargetStatus,\r\n",
					"    OpenSittingToTodayWeeks,\r\n",
					"    ValidToStartWeeks,\r\n",
					"    ValidToSittingWeeks,\r\n",
					"    StartToDecisionWeeks,\r\n",
					"    ValidToDecisionWeeks,\r\n",
					"    ReceivedToDecisionWeeks,\r\n",
					"    SittingToDecisionWeeks,\r\n",
					"    StartToSittingWeeks,\r\n",
					"    ReceivedToValidWeeks,\r\n",
					"    OpenWeeksSinceSitting, \r\n",
					"    SittingToFirstSubmissionWeeks,\r\n",
					"    SittingToLastSubmissionWeeks,\r\n",
					"    LastSubmissionToDecisionWeeks,\r\n",
					"    InspectorPersonalTargetDate,\r\n",
					"    InspectorPersonalTargetMarker,\r\n",
					"    DateOrderFlag,\r\n",
					"    OpenReceivedToTodayWeeks,\r\n",
					"    ReceivedToEndWeeks,\r\n",
					"    OpenStartToTodayWeeks,\r\n",
					"    OpenSubmitToTodayWeeks,\r\n",
					"    WasGDTVtoSHit,\r\n",
					"    WasGDTStoEHit,\r\n",
					"    WasGDTEtoDHit,\r\n",
					"    WasGDTOverallHit,\r\n",
					"    StartToLastSubmissionWeeks,\r\n",
					"    SourceSystem,\r\n",
					"    ReceivedToStartWeeks,\r\n",
					"    ReceivedToEventWeeks,\r\n",
					"    LpaDecisionToReceivedWeeks,\r\n",
					"    EventToSubmissionTargetHit,\r\n",
					"    DevelopmentOrAllegation,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressLine1,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    LpaApplicationReference,\r\n",
					"    Redetermined,\r\n",
					"    HasBespokeTarget,\r\n",
					"    EnforcementLinked,\r\n",
					"    AppealTurnedAwayDate,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    TargetDate,\r\n",
					"    IsKiosk,\r\n",
					"    InMeasure,\r\n",
					"    WasTargetHit,\r\n",
					"    WasLegacyTargetHit,\r\n",
					"    IsReadingCase,\r\n",
					"    FloorSpaceInSquareMetres,\r\n",
					"    AppellantProcedure,\r\n",
					"    AppealsDocumentsComplete,\r\n",
					"    DecisionCode,\r\n",
					"    DecisionCodeDesc,\r\n",
					"    AppealDecidedDate,\r\n",
					"    SiteVisitTime,\r\n",
					"    Timeline5StatementOfCommonGroundDue,\r\n",
					"    Timeline5StatementOfCommonGroundPublished,\r\n",
					"    Timeline5AppellantStatementPublished,\r\n",
					"    Timeline5AppellantStatementDue,\r\n",
					"    OwnershipPermission,\r\n",
					"    EventCode,\r\n",
					"    LpaApplicationDate,\r\n",
					"    LpaDecisionDate,\r\n",
					"    OnsCode,\r\n",
					"    SiteAddress,\r\n",
					"    IsVirtualEvent,\r\n",
					"    PriorApproval,\r\n",
					"    FinalCommentsDueDate,\r\n",
					"    AppealSourceIndicator,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"    \r\n",
					"FROM odw_harmonised_db.casework_picasso_dim\r\n",
					"WHERE AppealRefNumber IN (SELECT AppealRefNumber FROM casework_picasso_dim_new WHERE PicassoID IS NULL) AND IsActive = 'Y'; "
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# View casework_picasso_dim_changed_rows is used in a merge (Upsert) statement into the target table\n",
					"- **WHEN MATCHED** ON the surrogate Key (i.e. AllAppealsID), EndDate is set to today -1 day and the IsActive flag is set to 'N'\n",
					"- **WHEN NOT MATCHED** ON the surrogate Key, insert rows\n",
					"## Table odw_harmonised_db.casework_picasso_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- merge into dim table\r\n",
					"\r\n",
					"MERGE INTO odw_harmonised_db.casework_picasso_dim AS Target\r\n",
					"USING casework_picasso_dim_changed_rows AS Source\r\n",
					"\r\n",
					"ON Source.PicassoID = Target.PicassoID\r\n",
					"\r\n",
					"-- For Updates existing rows\r\n",
					"\r\n",
					"WHEN MATCHED\r\n",
					"    THEN \r\n",
					"    UPDATE SET\r\n",
					"    Target.ValidTo = date_sub(current_timestamp,1),\r\n",
					"    Target.IsActive = 'N' ;  \r\n",
					""
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Fix the IDs\n",
					"- No auto-increment feature is available in delta tables, therefore we need to create new IDs for the inserted rows\n",
					"- This is done by select the target data and using INSERT OVERWRITE to re-insert the data is a new Row Number\n",
					"## Table odw_harmonised_db.casework_picasso_dim is updated"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Insert new casework_picasso_dim\r\n",
					"\r\n",
					"INSERT INTO odw_harmonised_db.casework_picasso_dim\r\n",
					"\r\n",
					"SELECT \r\n",
					"    ROW_NUMBER() OVER (ORDER BY AppealRefNumber NULLS LAST) AS PicassoID,\r\n",
					"    AppealRefNumber,\r\n",
					"    ValidDate,\r\n",
					"    ReceivedDate,\r\n",
					"    EventDate,\r\n",
					"    StartDate,\r\n",
					"    DecidedDate,\r\n",
					"    FirstSubmissionDate,\r\n",
					"    LastSubmissionDate,\r\n",
					"    AppealEndDate,\r\n",
					"    ProcedureName,\r\n",
					"    LPAID,\r\n",
					"    AppealType,\r\n",
					"    Jurisdiction,\r\n",
					"    DevelopmentType,\r\n",
					"    InspectorStaffNumber,\r\n",
					"    ProcessingState,\r\n",
					"    SpecialismLevelCode,\r\n",
					"    SitePostcodeRegion,\r\n",
					"    TargetSourceKey,\r\n",
					"    CaseOfficerEmail,\r\n",
					"    OpenProcessingStage,\r\n",
					"    OpenValidToTodayWeeks,\r\n",
					"    OpenValidToTodayTargetStatus,\r\n",
					"    OpenSittingToTodayWeeks,\r\n",
					"    ValidToStartWeeks,\r\n",
					"    ValidToSittingWeeks,\r\n",
					"    StartToDecisionWeeks,\r\n",
					"    ValidToDecisionWeeks,\r\n",
					"    ReceivedToDecisionWeeks,\r\n",
					"    SittingToDecisionWeeks,\r\n",
					"    StartToSittingWeeks,\r\n",
					"    ReceivedToValidWeeks,\r\n",
					"    OpenWeeksSinceSitting, \r\n",
					"    SittingToFirstSubmissionWeeks,\r\n",
					"    SittingToLastSubmissionWeeks,\r\n",
					"    LastSubmissionToDecisionWeeks,\r\n",
					"    InspectorPersonalTargetDate,\r\n",
					"    InspectorPersonalTargetMarker,\r\n",
					"    DateOrderFlag,\r\n",
					"    OpenReceivedToTodayWeeks,\r\n",
					"    ReceivedToEndWeeks,\r\n",
					"    OpenStartToTodayWeeks,\r\n",
					"    OpenSubmitToTodayWeeks,\r\n",
					"    WasGDTVtoSHit,\r\n",
					"    WasGDTStoEHit,\r\n",
					"    WasGDTEtoDHit,\r\n",
					"    WasGDTOverallHit,\r\n",
					"    StartToLastSubmissionWeeks,\r\n",
					"    SourceSystem,\r\n",
					"    ReceivedToStartWeeks,\r\n",
					"    ReceivedToEventWeeks,\r\n",
					"    LpaDecisionToReceivedWeeks,\r\n",
					"    EventToSubmissionTargetHit,\r\n",
					"    DevelopmentOrAllegation,\r\n",
					"    Appellant,\r\n",
					"    SiteAddressLine1,\r\n",
					"    SiteAddressPostcode,\r\n",
					"    LpaApplicationReference,\r\n",
					"    Redetermined,\r\n",
					"    HasBespokeTarget,\r\n",
					"    EnforcementLinked,\r\n",
					"    AppealTurnedAwayDate,\r\n",
					"    AppealWithdrawnDate,\r\n",
					"    TargetDate,\r\n",
					"    IsKiosk,\r\n",
					"    InMeasure,\r\n",
					"    WasTargetHit,\r\n",
					"    WasLegacyTargetHit,\r\n",
					"    IsReadingCase,\r\n",
					"    FloorSpaceInSquareMetres,\r\n",
					"    AppellantProcedure,\r\n",
					"    AppealsDocumentsComplete,\r\n",
					"    DecisionCode,\r\n",
					"    DecisionCodeDesc,\r\n",
					"    AppealDecidedDate,\r\n",
					"    SiteVisitTime,\r\n",
					"    Timeline5StatementOfCommonGroundDue,\r\n",
					"    Timeline5StatementOfCommonGroundPublished,\r\n",
					"    Timeline5AppellantStatementPublished,\r\n",
					"    Timeline5AppellantStatementDue,\r\n",
					"    OwnershipPermission,\r\n",
					"    EventCode,\r\n",
					"    LpaApplicationDate,\r\n",
					"    LpaDecisionDate,\r\n",
					"    OnsCode,\r\n",
					"    SiteAddress,\r\n",
					"    IsVirtualEvent,\r\n",
					"    PriorApproval,\r\n",
					"    FinalCommentsDueDate,\r\n",
					"    AppealSourceIndicator,\r\n",
					"    SourceSystemID,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo,\r\n",
					"    RowID,\r\n",
					"    IsActive\r\n",
					"FROM casework_picasso_dim_changed_rows;\r\n",
					""
				],
				"execution_count": 12
			}
		]
	}
}