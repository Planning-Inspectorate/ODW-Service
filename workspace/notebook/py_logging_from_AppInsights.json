{
	"name": "py_logging_from_AppInsights",
	"properties": {
		"folder": {
			"name": "utils"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "821554aa-3f86-4b6f-9f7f-5c68f0da46cc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import requests\n",
					"import json\n",
					"from pyspark.sql.types import StructType, StructField, StringType, TimestampType\n",
					"\n",
					"\n",
					"# credentials\n",
					"tenant_id = \"5878df98-6f88-48ab-9322-998ce557088d\"         \n",
					"client_id = \"2a302373-df67-4c1e-91a1-f6301b87f42b\"         \n",
					"client_secret = \"cS38Q~avsYoky-adBlNxErA.aYdSDvQ6ez.t.cH_\" \n",
					"app_id = \"15f0aed3-e987-496c-85fe-01267ae5430f\"    \n",
					"#client_secret = mssparkutils.credentials.getSecretWithLS(\"ls_kv\", \"application-insights-dev-reader\")\n",
					"      \n",
					"\n",
					"# 1. Get AAD token\n",
					"token_url = f\"https://login.microsoftonline.com/{tenant_id}/oauth2/v2.0/token\"\n",
					"token_data = {\n",
					"    \"grant_type\": \"client_credentials\",\n",
					"    \"client_id\": client_id,\n",
					"    \"client_secret\": client_secret,\n",
					"    \"scope\": \"https://api.applicationinsights.io/.default\"\n",
					"}\n",
					"token_resp = requests.post(token_url, data=token_data)\n",
					"token_resp.raise_for_status()\n",
					"access_token = token_resp.json()[\"access_token\"]\n",
					"\n",
					"# 2. Define KQL query\n",
					"query = \"\"\"\n",
					"customEvents\n",
					"| where name == \"ODW_Master_Pipeline_Logs\"\n",
					"| project\n",
					"    timestamp, \n",
					"    Stage = tostring(customDimensions.Stage),\n",
					"    PipelineName = tostring(customDimensions.PipelineName),\n",
					"    PipelineRunID = tostring(customDimensions.PipelineRunID),\n",
					"    StatusMessage = tostring(customDimensions.StatusMessage),\n",
					"    StatusCode = tostring(customDimensions.StatusCode),\n",
					"    ErrorMessage = tostring(customDimensions.ErrorMessage),\n",
					"    StartTime = tostring(customDimensions.StartTime),\n",
					"    EndTime = tostring(customDimensions.EndTime),\n",
					"    PipelineTriggerType = tostring(customDimensions.PipelineTriggerType),\n",
					"    PipelineTriggeredbyPipelineName = tostring(customDimensions.PipelineTriggeredbyPipelineName),\n",
					"    PipelineTriggeredbyPipelineRunID = tostring(customDimensions.PipelineTriggeredbyPipelineRunID),\n",
					"    PipelineExecutionTimeInSec = tostring(customDimensions.PipelineExecutionTimeInSec),\n",
					"    ActivityType = tostring(customDimensions.ActivityType),\n",
					"    Inserts = tostring(customDimensions.Inserts),\n",
					"    Updates = tostring(customDimensions.Updates),\n",
					"    Deletes = tostring(customDimensions.Deletes),\n",
					"    PipelineTriggerID = tostring(customDimensions.PipelineTriggerID),\n",
					"    PipelineTriggerName = tostring(customDimensions.PipelineTriggerName),\n",
					"    DurationSeconds = tostring(customDimensions.DurationSeconds)\n",
					"| order by timestamp desc\n",
					"\"\"\"\n",
					"\n",
					"# 3. Call App Insights API\n",
					"url = f\"https://api.applicationinsights.io/v1/apps/{app_id}/query\"\n",
					"headers = {\"Authorization\": f\"Bearer {access_token}\"}\n",
					"params = {\"query\": query}\n",
					"\n",
					"resp = requests.get(url, headers=headers, params=params)\n",
					"resp.raise_for_status()\n",
					"result = resp.json()\n",
					"\n",
					"# 4. Extract rows & columns\n",
					"columns = [c[\"name\"] for c in result[\"tables\"][0][\"columns\"]]\n",
					"rows = result[\"tables\"][0][\"rows\"]\n",
					"\n",
					"# 5. Create Spark DataFrame\n",
					"df = spark.createDataFrame(rows, schema=columns)\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"display(df)"
				],
				"execution_count": null
			}
		]
	}
}