{
	"name": "SAP_HR_PROTECTED",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "27fe259f-a3ab-449a-8a17-4c3b7f3f4ea5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Protected Data"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Intialisations"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import udf\n",
					"from pyspark.sql.types import DateType\n",
					"from datetime import datetime\n",
					"from delta.tables import DeltaTable\n",
					"from pyspark.sql import Window\n",
					"from pyspark.sql.functions import row_number\n",
					"from pyspark.sql.types import StructType, StructField, TimestampType, StringType\n",
					"\n",
					""
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"SET spark.sql.ansi.enabled = false;"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"source": [
					"%%sql\n",
					"drop table odw_harmonised_db.SAP_HR_PC"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"    CREATE TABLE IF NOT EXISTS odw_harmonised_db.SAP_HR_PC (\n",
					"        RefNo                           STRING,\n",
					"        EthnicOrigin                    STRING,\n",
					"        ReligiousDenominationKey        STRING,\n",
					"        SxO                             STRING,\n",
					"        DisabilityText                  STRING,\n",
					"        file_name                       STRING,\n",
					"        load_date                       STRING,\n",
					"        Grade                           STRING\n",
					"    )\n",
					"    USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"\"\"\n",
					"    CREATE TABLE IF NOT EXISTS odw_harmonised_db.protected_data (\n",
					"        RefNo                           STRING,\n",
					"        EthnicOrigin                    STRING,\n",
					"        ReligiousDenominationKey        STRING,\n",
					"        SxO                             STRING,\n",
					"        DisabilityText                  STRING,\n",
					"        file_name                       STRING,\n",
					"        load_date                       STRING,\n",
					"        Grade                           STRING\n",
					"    )\n",
					"    USING DELTA\n",
					"\"\"\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					"delete from odw_harmonised_db.SAP_HR_PC ;\n",
					"\n",
					"insert into odw_harmonised_db.SAP_HR_PC(\n",
					"\n",
					"\n",
					"\n",
					"SELECT \n",
					"\t   RefNo\n",
					"      ,NULLIF(EthnicOrigin, '')\n",
					"      ,NULLIF(ReligiousDenominationKey, '')\n",
					"      ,NULLIF(SxO, '')\n",
					"      ,NULLIF(DisabilityText, '')\n",
					"\t  ,null as file_name\n",
					"\t  ,current_date(),\n",
					"\t   Grade\n",
					"\n",
					"from odw_standardised_db.sap_protected_monthly\n",
					"\n",
					")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# PC_INSERT_DELETE"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"%%sql\n",
					"\n",
					" WITH pc AS (\n",
					"            SELECT \n",
					"                file_name AS file,\n",
					"                CONVERT(varchar(7), CONVERT(date, RIGHT(REPLACE(file_name, '.xlsx', ''), 8), 103), 126) AS file_name,\n",
					"                COUNT(*) AS s_count\n",
					"            FROM odw_harmonised_db.SAP_HR_PC\n",
					"            WHERE RefNo IS NOT NULL\n",
					"            GROUP BY file_name, CONVERT(varchar(7), CONVERT(date, RIGHT(REPLACE(file_name, '.xlsx', ''), 8), 103), 126)\n",
					"        ),\n",
					"        x2 AS (\n",
					"            SELECT \n",
					"                LEFT(CAST(h.Report_MonthEnd_Date AS varchar(10)), 7) AS r_month, \n",
					"                COUNT(*) AS history_rows\n",
					"            FROM \n",
					"                odw_harmonised_db.SAP_HR h \n",
					"            WHERE \n",
					"                LEFT(CAST(Report_MonthEnd_Date AS varchar(10)), 7) > '2019-03' \n",
					"                AND h.PayrollArea = 'PINS'\n",
					"            GROUP BY \n",
					"                LEFT(CAST(Report_MonthEnd_Date AS varchar(10)), 7)\n",
					"        )\n",
					"\n",
					"        -- Delete operation\n",
					"        DELETE FROM odw_harmonised_db.protected_data\n",
					"        WHERE file_name IN (\n",
					"            SELECT pc.file\n",
					"            FROM pc \n",
					"            INNER JOIN x2 ON pc.file_name = x2.r_month\n",
					"            WHERE pc.s_count = x2.history_rows\n",
					"        );\n",
					"\n",
					"        -- Insert operation\n",
					"        INSERT INTO odw_harmonised_db.protected_data\n",
					"        SELECT * \n",
					"        FROM odw_harmonised_db.SAP_HR_PC\n",
					"        WHERE file_name IN (\n",
					"            SELECT pc.file\n",
					"            FROM pc \n",
					"            INNER JOIN x2 ON pc.[file_name] = x2.r_month\n",
					"            WHERE pc.s_count = x2.history_rows\n",
					"        );"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"\n",
					" select * from odw_harmonised_db.SAP_HR_PC"
				],
				"execution_count": 5
			}
		]
	}
}