{
	"name": "appeal_event_curated_mipins",
	"properties": {
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "61e51462-eb20-46e4-8335-b1db557a08e4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 32,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"CREATE OR REPLACE  VIEW vw_Appeal_event_curated_mipins \n",
					"AS\n",
					"SELECT\n",
					"    eventId\n",
					"    ,caseReference\n",
					"    ,eventType\n",
					"    ,eventName\n",
					"    ,eventStatus\n",
					"    ,CAST(IsUrgent AS Boolean) AS IsUrgent\n",
					"    ,CAST(eventPublished AS Boolean) AS eventPublished\n",
					"    ,CAST(eventStartDateTime AS Timestamp) AS eventStartDateTime\n",
					"    ,CAST(eventEndDateTime AS Timestamp)  AS eventEndDateTime\n",
					"    ,CAST(NotificationOfSiteVisit AS Timestamp) AS NotificationOfSiteVisit\n",
					"    ,addressLine1\n",
					"    ,addressLine2\n",
					"    ,addressTown\n",
					"    ,addressCounty\n",
					"    ,addressPostcode\n",
					"    ,Migrated\n",
					"    ,ODTSourceSystem\n",
					"    ,SourceSystemID\n",
					"    ,IngestionDate\n",
					"    ,ValidTo\n",
					"    ,RowID\n",
					"    ,IsActive\n",
					"FROM\n",
					"    odw_harmonised_db.sb_appeal_event"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"drop table if exists odw_curated_db.appeal_event_curated_mipins;\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df = spark.sql(\"\"\"\n",
					"                SELECT\n",
					"                    eventId\n",
					"                    ,caseReference\n",
					"                    ,eventType\n",
					"                    ,eventName\n",
					"                    ,eventStatus\n",
					"                    ,isUrgent\n",
					"                    ,eventPublished\n",
					"                    ,eventStartDateTime\n",
					"                    ,eventEndDateTime\n",
					"                    ,NotificationOfSiteVisit\n",
					"                    ,addressLine1\n",
					"                    ,addressLine2\n",
					"                    ,addressTown\n",
					"                    ,addressCounty\n",
					"                    ,addressPostcode\n",
					"                    ,Migrated\n",
					"                    ,ODTSourceSystem\n",
					"                    ,SourceSystemID\n",
					"                    ,IngestionDate\n",
					"                    ,ValidTo\n",
					"                    ,RowID\n",
					"                    ,IsActive\n",
					"                FROM\n",
					"                    vw_Appeal_event_curated_mipins\n",
					"            \"\"\")\n",
					"\n",
					"df.write.format(\"delta\").mode(\"Overwrite\").saveAsTable(\"odw_curated_db.appeal_event_curated_mipins\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#%%sql\n",
					"#select * from odw_curated_db.appeal_event_curated_mipins"
				],
				"execution_count": 12
			}
		]
	}
}