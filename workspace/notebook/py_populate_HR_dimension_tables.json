{
	"name": "py_populate_HR_dimension_tables",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "58fbc691-5d73-4c21-91e1-4569c490f7cb"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build SourceSystem_Fact table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sourcesystem_fact (\r\n",
					"    SourceSystemID,\r\n",
					"    Description,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SourceSystemID,\r\n",
					"    \"SAP HR\" AS Description,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate, \r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.sourcesystem_fact"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build diversity_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.diversity_dim (\r\n",
					"    DiversityID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS DiversityID,\r\n",
					"    Ethnic_Origin AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"    --COUNT(Ref_NO) AS count\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Ethnic_Origin;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.diversity_dim "
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build disability_dim table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.disability_dim (\r\n",
					"    DisabilityID,\r\n",
					"    DisabilityCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS DisabilityID,\r\n",
					"    Disability_Text AS DisabilityCode,\r\n",
					"    Disability_Code_Description AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Disability_Text, Disability_Code_Description;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.disability_dim "
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build religion_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.religion_dim (\r\n",
					"    ReligionID,\r\n",
					"    ReligionCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ReligionID,\r\n",
					"    Religion AS ReligionCode,\r\n",
					"    Religious_Denomination_Key AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Religion, Religious_Denomination_Key;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.religion_dim "
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build sxo_dim table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sxo_dim (\r\n",
					"    SXOID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SXOID,\r\n",
					"    SxO AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY SxO;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.sxo_dim "
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build secureinfo_fact table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.secureinfo_fact (\r\n",
					"    SecureInfoID,\r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SecureInfoID,\r\n",
					"    T3.DisabilityID,\r\n",
					"    T4.DiversityID,\r\n",
					"    T5.ReligionID,\r\n",
					"    T6.SXOID, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					""
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build PersonnelArea_dim table -- MISSING SOURCE TABLE SAPHR\r\n",
					"/**\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PersonnelArea_dim (\r\n",
					"    PersonnelAreaID,\r\n",
					"    PersonnelAreaCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ReligionID,\r\n",
					"    -A- AS PersonnelAreaCode,\r\n",
					"    -B- AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY -A-, -B-;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.PersonnelArea_dim \r\n",
					"**/\r\n",
					""
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build EmployeeLeavers_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.EmployeeLeavers_dim (\r\n",
					"    EmployeeLeaversID,\r\n",
					"    EmployeeID,\r\n",
					"    ReasonForLeaving,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS EmployeeLeaversID,\r\n",
					"    null AS EmployeeID, -- why is this here?\r\n",
					"    Reason_For_Action AS ReasonForLeaving, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.leavers T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description;\r\n",
					"\r\n",
					""
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build WorkSchedule_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.WorkSchedule_dim (\r\n",
					"    WorkScheduleID,\r\n",
					"    WorkScheduleRule,\r\n",
					"    WorkWeekDays,\r\n",
					"    WorkWeekHours,\r\n",
					"    WorkDayHours,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS WorkScheduleID,\r\n",
					"    Work_Schedule_Rule AS WorkScheduleRule,\r\n",
					"    WkDys AS WorkWeekDays,\r\n",
					"    Wk_hrs AS WorkWeekHours,\r\n",
					"    Hrs_Day AS WorkDayHours,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Work_Schedule_Rule, WkDys, Wk_hrs, Hrs_Day ;\r\n",
					"\r\n",
					"/**Select * from odw_harmonised_db.WorkSchedule_dim **/"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Specialism_dim table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Specialism_dim (\r\n",
					"    SpecialismID,\r\n",
					"    EmployeeID,\r\n",
					"    Qualification,\r\n",
					"    Proficiency,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SpecialismID,\r\n",
					"    null AS EmployeeID, -- why is this here? should be description or should be from the Employee_dim table\r\n",
					"    Qualification_Name AS Qualification,\r\n",
					"    Proficien AS Proficiency,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.specialisms T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Staff_Number, Qualification_Name, Proficien;\r\n",
					""
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.LeaveEntitlement_dim"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build LeaveEntitlement_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.LeaveEntitlement_dim (\r\n",
					"    LeaveEntitlementID,\r\n",
					"    EmployeeID,\r\n",
					"    LeaveDaysPerYear,\r\n",
					"    LeaveDeduction,\r\n",
					"    LeaveYearStart,\r\n",
					"    LeaveYearEnd,\r\n",
					"    AbsenceQuotaType,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS LeaveEntitlementID,\r\n",
					"    Staff_Number AS EmployeeID, -- should be from the Employee_dim table\r\n",
					"    Number AS LeaveDaysPerYear,\r\n",
					"    Deduction AS LeaveDeduction,\r\n",
					"    Ded_from AS LeaveYearStart,\r\n",
					"    Ded_To AS LeaveYearEnd,\r\n",
					"    Absence_Quota_type AS AbsenceQuotaType,\r\n",
					"    T2.SourceSystemID AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.leave T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"\r\n",
					"-- Select * from odw_harmonised_db.LeaveEntitlement_dim "
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build absence_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"-- INSERT OVERWRITE odw_harmonised_db.Absence_dim (\r\n",
					"--     AbsenceID,\r\n",
					"--     EmployeeID,\r\n",
					"--     StaffNumber,\r\n",
					"--     Type,\r\n",
					"--     SicknessGroup,\r\n",
					"--     AbsenceStartDate,\r\n",
					"--     AbsenceEndDate,\r\n",
					"--     Days,\r\n",
					"--     CalerdarDays,\r\n",
					"--     WorkScheduleID,\r\n",
					"--     AnnualLeaveStart,\r\n",
					"--     SourceSystemID,\r\n",
					"--     StartDate,\r\n",
					"--     EndDate,\r\n",
					"--     IngestionDate,\r\n",
					"--     ValidTo\r\n",
					"-- )\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS AbsenceID,\r\n",
					"    EmployeeID,\r\n",
					"    T1.Pers_No,\r\n",
					"    T1.Attendance_or_Absence_Type ,\r\n",
					"    T1.Sickness_Group,\r\n",
					"    T1.Start_Date,\r\n",
					"    T1.End_Date,\r\n",
					"    T1.Days,\r\n",
					"    T1.Cal_Days,\r\n",
					"    WorkScheduleID,\r\n",
					"    AnnualLeaveStart,\r\n",
					"    Reason_For_Action AS ReasonForLeaving, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.workschedule_dim T3 ON\r\n",
					"\r\n",
					"\r\n",
					"Select * FROM odw_standardised_db.absences LIMIT 10\r\n",
					"--SELECT absence from odw_harmonised_db.Absence_dim"
				],
				"execution_count": 16
			}
		]
	}
}