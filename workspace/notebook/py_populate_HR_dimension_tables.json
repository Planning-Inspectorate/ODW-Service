{
	"name": "py_populate_HR_dimension_tables",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "00326630-8455-49a7-9811-6ee75a17c33b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build SourceSystem_Fact table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sourcesystem_fact (\r\n",
					"    SourceSystemID,\r\n",
					"    Description,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SourceSystemID,\r\n",
					"    \"SAP HR\" AS Description,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate, \r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.sourcesystem_fact"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build diversity_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.diversity_dim (\r\n",
					"    DiversityID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS DiversityID,\r\n",
					"    Ethnic_Origin AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, -- NOT CORRECT\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"    --COUNT(Ref_NO) AS count\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Ethnic_Origin;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.diversity_dim "
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build disability_dim table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.disability_dim (\r\n",
					"    DisabilityID,\r\n",
					"    DisabilityCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS DisabilityID,\r\n",
					"    Disability_Text AS DisabilityCode,\r\n",
					"    Disability_Code_Description AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Disability_Text, Disability_Code_Description;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.disability_dim "
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build religion_dim table\r\n",
					"-- INSERT OVERWRITE achieves the same as a TRUNCATE TABLE and INSERT INTO but in one statement\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.religion_dim (\r\n",
					"    ReligionID,\r\n",
					"    ReligionCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ReligionID,\r\n",
					"    Religion AS ReligionCode,\r\n",
					"    Religious_Denomination_Key AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Religion, Religious_Denomination_Key;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.religion_dim "
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Build sxo_dim table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.sxo_dim (\r\n",
					"    SXOID,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SXOID,\r\n",
					"    SxO AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID, \r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY SxO;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.sxo_dim "
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build secureinfo_fact table\r\n",
					"INSERT OVERWRITE odw_harmonised_db.secureinfo_fact (\r\n",
					"    SecureInfoID,\r\n",
					"    DisabilityID,\r\n",
					"    DiversityID,\r\n",
					"    ReligionID,\r\n",
					"    SXOID,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SecureInfoID,\r\n",
					"    T3.DisabilityID,\r\n",
					"    T4.DiversityID,\r\n",
					"    T5.ReligionID,\r\n",
					"    T6.SXOID, \r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.personal_characteristics T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.disability_dim T3 ON (T1.Disability_Text = T3.DisabilityCode  AND T1.Disability_Code_Description = T3.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.diversity_dim T4 ON T1.Ethnic_Origin = T4.Description\r\n",
					"LEFT JOIN odw_harmonised_db.religion_dim T5 ON (T1.Religion = T5.ReligionCode  AND T1.Religious_Denomination_Key = T5.Description)\r\n",
					"LEFT JOIN odw_harmonised_db.sxo_dim T6 ON T1.SxO = T6.Description\r\n",
					""
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_standardised_db.addresses"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Employee_Dim table \r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.employee_dim (\r\n",
					"    EmployeeID,\r\n",
					"    FirstName,\r\n",
					"    LastName,\r\n",
					"    DOB,\r\n",
					"    NINumber,\r\n",
					"    Gender,\r\n",
					"    AddressLine1,\r\n",
					"    AddressLine2,\r\n",
					"    AddressLine3,\r\n",
					"    City,\r\n",
					"    County,\r\n",
					"    PostCode,\r\n",
					"    EmailAddress,\r\n",
					"    TelephoneNumberPersonal,\r\n",
					"    TelephoneNumberWork,\r\n",
					"    PersNumber,\r\n",
					"    EmployeeNumber,\r\n",
					"    FTE,\r\n",
					"    WorkHours,\r\n",
					"    PartTimeEmployee,\r\n",
					"    EmploymentStatus,\r\n",
					"    CivilServiceStart,\r\n",
					"    DateToCurrentJob,\r\n",
					"    SeniorityDate,\r\n",
					"    OrgStartDate,\r\n",
					"    FixTermEndDate,\r\n",
					"    LoanStartDate,\r\n",
					"    LoanEndDate,\r\n",
					"    PayrollArea,\r\n",
					"    AssignmentNumber,\r\n",
					"    EmployeeGroup,\r\n",
					"    AnnualSalary,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT \r\n",
					"    uuid(), --EmployeeID\r\n",
					"    null as FirstName,\r\n",
					"    null as LastName,\r\n",
					"    null as DOB,\r\n",
					"    null as NINumber,\r\n",
					"    null as Gender,\r\n",
					"    T2.Street_and_House_Number as AddressLine1,\r\n",
					"    T2.`2nd_Address_Line` as AddressLine2,\r\n",
					"    T2.District as AddressLine3,\r\n",
					"    T2.City as City,\r\n",
					"    T2.Region_State_Province_Count as County,\r\n",
					"    T2.Postal_Code as PostCode,\r\n",
					"    T3.Email_Address as EmailAddress,\r\n",
					"    T2.Personal_Mobile as TelephoneNumberPersonal,\r\n",
					"    T2.Work_Mobile as TelephoneNumberWork,\r\n",
					"    T2.Staff_Number as PersNumber,\r\n",
					"    null as EmployeeNumber,\r\n",
					"    null as FTE,\r\n",
					"    null as WorkHours,\r\n",
					"    null as PartTimeEmployee,\r\n",
					"    null as EmploymentStatus,\r\n",
					"    null as CivilServiceStart,\r\n",
					"    null as DateToCurrentJob,\r\n",
					"    null as SeniorityDate,\r\n",
					"    null as OrgStartDate,\r\n",
					"    null as FixTermEndDate,\r\n",
					"    null as LoanStartDate,\r\n",
					"    null as LoadEndDate,\r\n",
					"    null as PayrollArea,\r\n",
					"    null as AssignmentNumber,\r\n",
					"    null as EmployeeGroup,\r\n",
					"    null as AnnualSalary,\r\n",
					"    T4.SourceSystemID,\r\n",
					"    current_timestamp as StartDate,\r\n",
					"    null as EndDate,\r\n",
					"    current_timestamp as IngestDate,\r\n",
					"    null as ValidTo\r\n",
					"\r\n",
					"FROM odw_standardised_db.addresses T2\r\n",
					"LEFT JOIN odw_standardised_db.email T3 ON T2.Staff_Number = T3.Staff_Number\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T4 ON \"SAP HR\" = T4.Description"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from odw_harmonised_db.employee_dim LIMIT 10"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build PersonnelArea_dim table -- MISSING SOURCE TABLE SAPHR\r\n",
					"/**\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PersonnelArea_dim (\r\n",
					"    PersonnelAreaID,\r\n",
					"    PersonnelAreaCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ReligionID,\r\n",
					"    -A- AS PersonnelAreaCode,\r\n",
					"    -B- AS Description, \r\n",
					"    first(T2.SourceSystemID) as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.saphr T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY -A-, -B-;\r\n",
					"\r\n",
					"Select * from odw_harmonised_db.PersonnelArea_dim \r\n",
					"**/\r\n",
					""
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build EmployeeLeavers_dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.EmployeeLeavers_dim (\r\n",
					"    EmployeeLeaversID,\r\n",
					"    EmployeeID,\r\n",
					"    ReasonForLeaving,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS EmployeeLeaversID,\r\n",
					"    T3.EmployeeID, -- FK to Employee_dim table\r\n",
					"    Reason_For_Action AS ReasonForLeaving, \r\n",
					"    T2.SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.leavers T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Pers_No = T3.PersNumber;\r\n",
					"\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build WorkSchedule_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.WorkSchedule_dim (\r\n",
					"    WorkScheduleID,\r\n",
					"    WorkScheduleRule,\r\n",
					"    WorkWeekDays,\r\n",
					"    WorkWeekHours,\r\n",
					"    WorkDayHours,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS WorkScheduleID,\r\n",
					"    Work_Schedule_Rule AS WorkScheduleRule,\r\n",
					"    WkDys AS WorkWeekDays,\r\n",
					"    Wk_hrs AS WorkWeekHours,\r\n",
					"    Hrs_Day AS WorkDayHours,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY Work_Schedule_Rule, WkDys, Wk_hrs, Hrs_Day ;\r\n",
					"\r\n",
					"/**Select * from odw_harmonised_db.WorkSchedule_dim **/"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build Specialism_dim table -- CHECK LOGIC\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Specialism_dim (\r\n",
					"    SpecialismID,\r\n",
					"    EmployeeID,\r\n",
					"    Qualification,\r\n",
					"    Proficiency,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS SpecialismID,\r\n",
					"    first(T3.EmployeeID), -- FK to Employee_Dim\r\n",
					"    Qualification_Name AS Qualification,\r\n",
					"    Proficien AS Proficiency,\r\n",
					"    first(T2.SourceSystemID) AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.specialisms T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Staff_Number = T3.PersNumber\r\n",
					"GROUP BY Staff_Number, Qualification_Name, Proficien;\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select \r\n",
					"Work_Schedule_Rule,\r\n",
					"Wk_hrs,\r\n",
					"Hrs_Day,\r\n",
					"WkDys\r\n",
					"\r\n",
					"from odw_standardised_db.absences\r\n",
					"GROUP BY\r\n",
					"Work_Schedule_Rule,\r\n",
					"Wk_hrs,\r\n",
					"Hrs_Day,\r\n",
					"WkDys\r\n",
					"ORDER BY\r\n",
					"Work_Schedule_Rule,\r\n",
					"Wk_hrs,\r\n",
					"Hrs_Day,\r\n",
					"WkDys"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build LeaveEntitlement_dim table - MISSING CREATING THE TABLE WITH THE py_create_tables_new (Currently not working)\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.LeaveEntitlement_dim (\r\n",
					"    LeaveEntitlementID,\r\n",
					"    EmployeeID,\r\n",
					"    LeaveDaysPerYear,\r\n",
					"    LeaveDeduction,\r\n",
					"    LeaveYearStart,\r\n",
					"    LeaveYearEnd,\r\n",
					"    AbsenceQuotaType,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS LeaveEntitlementID,\r\n",
					"    T3.EmployeeID, -- FK to Employee_Dim\r\n",
					"    Number AS LeaveDaysPerYear,\r\n",
					"    Deduction AS LeaveDeduction,\r\n",
					"    Ded_from AS LeaveYearStart,\r\n",
					"    Ded_To AS LeaveYearEnd,\r\n",
					"    Absence_Quota_type AS AbsenceQuotaType,\r\n",
					"    T2.SourceSystemID AS SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.leave T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T3 ON T1.Staff_Number = T3.PersNumber\r\n",
					"\r\n",
					"-- Select * from odw_harmonised_db.LeaveEntitlement_dim "
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- Build absence_dim table \r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.Absence_dim (\r\n",
					"    AbsenceID,\r\n",
					"    EmployeeID,\r\n",
					"    StaffNumber,\r\n",
					"    Type,\r\n",
					"    SicknessGroup,\r\n",
					"    AbsenceStartDate,\r\n",
					"    AbsenceEndDate,\r\n",
					"    Days,\r\n",
					"    CalendarDays,\r\n",
					"    WorkScheduleID,\r\n",
					"    AnnualLeaveStart,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS AbsenceID,\r\n",
					"    T4.EmployeeID,\r\n",
					"    T1.Staff_Number as StaffNumber,\r\n",
					"    T1.Attendance_or_Absence_Type as Type,\r\n",
					"    T1.Sickness_Group as SicknessGroup,\r\n",
					"    T1.Start_Date as AbsenceStartDate,\r\n",
					"    T1.End_Date as AbsenceEndDate,\r\n",
					"    T1.Days,\r\n",
					"    T1.Cal_Days as CalendarDays,\r\n",
					"    T3.WorkScheduleID,\r\n",
					"    T1.Annual_Leave_Start AS AnnualLeaveStart,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.absences T1\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"LEFT JOIN odw_harmonised_db.workschedule_dim T3 ON  T1.Work_Schedule_Rule = T3.WorkScheduleRule AND  \r\n",
					"                                                    T1.Wk_hrs = T3.WorkWeekHours AND\r\n",
					"                                                    T1.Hrs_Day = T3.WorkDayHours AND\r\n",
					"                                                    T1.WkDys = T3.WorkWeekDays\r\n",
					"LEFT JOIN odw_harmonised_db.employee_dim T4 ON T1.Staff_Number = T4.PersNumber"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build contract_dim table  - NOT TESTED\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.contract_dim (\r\n",
					"    ContractID,\r\n",
					"    ContractCode,\r\n",
					"    Description,\r\n",
					"    ContractTypeCode,\r\n",
					"    ContractType,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS ContractID,\r\n",
					"    T1.WorkC as ContractCode,\r\n",
					"    First(T1.Work_Contract) as Description,\r\n",
					"    T1.CT as ContractTypeCode,\r\n",
					"    First(T1.Contract_Type) as ContractType,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.sap_hr T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.WorkC, T1.CT"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build payband_dim table  - NOT TESTED\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.payband_dim (\r\n",
					"    PayBandID,\r\n",
					"    PSGroupCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS PayBandID,\r\n",
					"    PS_Group  AS PSGroupCode,\r\n",
					"    First(Pay_Band_Description) AS Description,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.SAP_HR T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.PS_Group\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build position_dim table  - NOT TESTED\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.position_dim (\r\n",
					"    PositionID,\r\n",
					"    PositionCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS PositionID,\r\n",
					"    Position  AS PositionCode, -- cell AH\r\n",
					"    First(Position)  AS Description, -- cell AI\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.SAP_HR T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Position"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build PINSLocation_dim table  - NOT TESTED\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.PINSLocation_dim (\r\n",
					"    LocationID,\r\n",
					"    LocationCode,\r\n",
					"    Description,\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS LocationID,\r\n",
					"    Loc.  AS LocationCode, -- check\r\n",
					"    First(Location)  AS Description,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.SAP_HR T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Loc"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build OrganisationUnit_dim table  - NOT TESTED\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.OrganisationUnit_dim (\r\n",
					"    OrganisationUnitID,\r\n",
					"    OrganisationUnit\r\n",
					"    Description,\r\n",
					"    OrganisationUnityKey\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS OrganisationUnitID,\r\n",
					"    T1.Org_unit as OrganisationUnit,\r\n",
					"    T1.Organizational_Unit AS Description,\r\n",
					"    T1.Organizational_Key AS OrganisationUnityKey\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.SAP_HR T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Org_unit, T1.Organizational_Unit, T1.Organizational_Key"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"-- Build CostCenter_Dim table  - NOT TESTED, don't have the dim table\r\n",
					"\r\n",
					"INSERT OVERWRITE odw_harmonised_db.CostCenter_Dim (\r\n",
					"    CostCenterID,\r\n",
					"    CostCenterCode\r\n",
					"    Description,\r\n",
					"    OrganisationUnityKey\r\n",
					"    SourceSystemID,\r\n",
					"    StartDate,\r\n",
					"    EndDate,\r\n",
					"    IngestionDate,\r\n",
					"    ValidTo\r\n",
					")\r\n",
					"\r\n",
					"\r\n",
					"SELECT\r\n",
					"    uuid() AS CostCenterID,\r\n",
					"    T1.Cost_Ctr AS CostCenterCode\r\n",
					"    T1.Cost_Centre AS Description,\r\n",
					"    T2.SourceSystemID as SourceSystemID,\r\n",
					"    CURRENT_TIMESTAMP AS StartDate,\r\n",
					"    NULL AS EndDate,\r\n",
					"    CURRENT_TIMESTAMP AS IngestionDate,\r\n",
					"    NULL AS ValidTo\r\n",
					"FROM odw_standardised_db.SAP_HR T1 -- CHECK\r\n",
					"LEFT JOIN odw_harmonised_db.sourcesystem_fact T2 ON \"SAP HR\" = T2.Description\r\n",
					"GROUP BY T1.Org_unit, T1.Organizational_Unit, T1.Organizational_Key"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"# print(mssparkutils.credentials.getPropertiesAll('ls_storage'))\r\n",
					"\r\n",
					"mssparkutils.credentials.getFullConnectionString('ls_sql_hzn')"
				],
				"execution_count": 66
			}
		]
	}
}