{
	"name": "py_employee_harmonised_layer2_transform",
	"properties": {
		"folder": {
			"name": "odw-harmonised"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinsodwspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8854a798-0c9d-4116-9fc4-a11fcc60c7f4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-odw-data-dev-rg/providers/Microsoft.Synapse/workspaces/pins-odw-data-dev-syn-ws/bigDataPools/pinsodwspark",
				"name": "pinsodwspark",
				"type": "Spark",
				"endpoint": "https://pins-odw-data-dev-syn-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinsodwspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"storage_account=mssparkutils.notebook.run('/utils/py_utils_get_storage_account')"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"raw_storage_container = 'n/a' + storage_account\n",
					"raw_storage_source_folder = 'n/a'\n",
					"raw_storage_source_name = 'n/a'\n",
					"workspace_storage_container = 'abfss://odw-workspace@' + storage_account\n",
					"workspace_storage_temp_folder = 'employee-syn'\n",
					"workspace_storage_temp_name = 'employee-syn'\n",
					"harmonised_storage_container = 'abfss://odw-harmonised@' + storage_account\n",
					"harmonised_storage_delta_folder = 'inspector'\n",
					"harmonised_storage_delta_table_name = 'inspector'\n",
					"delta_lake_table_key_column = 'n/a'\n",
					"delta_lake_table_name = \"inspector\"\n",
					"sourceColumnNames = 'n/a'"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"harmonised_storage_delta_table_path = harmonised_storage_container + '/' + harmonised_storage_delta_folder + '/' + harmonised_storage_delta_table_name\n",
					"#print(harmonised_storage_delta_table_path)"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"drop table if exists odw_harmonised_db.inspector;\n",
					"create table  odw_harmonised_db.inspector USING DELTA LOCATION $harmonised_storage_delta_table_path\n",
					"\n",
					"as \n",
					"\n",
					"SELECT \n",
					"case when inspector_raw.id is null then ROW_NUMBER() over (order by sap_hr.Pers_No,sap_hr.given_names,sap_hr.family_name) \n",
					"else inspector_raw.id end as source_id \n",
					",sap_hr.pins_staff_number\n",
					",sap_hr.given_names\n",
					",sap_hr.family_name as family_names\n",
					",concat(sap_hr.given_names,' ',sap_hr.family_name) as inspector_name\n",
					",inspector_address.inspector_postcode as inspector_postcode\n",
					",sap_hr.active_status\n",
					",inspector_address.date_in\n",
					",inspector_address.date_out\n",
					",inspector_address.Charting_Officer_for_Inspector as eo_responsible\n",
					",sap_hr.PINS_join_grade as grade\n",
					",sap_hr.FTE as FTE\n",
					",inspector_address.Inspector_Address\n",
					",inspector_address.Telephone_no\n",
					",inspector_address.Work_Mobile\n",
					",sap_hr.is_sgl\n",
					",case when (sap_hr.Work_Contract = 'Non-Sal. Inspec' and sap_hr.active_status = 'ACTIVE') then 'nsi.planning@planninginspectorate.gov.uk'\n",
					"      else coalesce(vw_sap_hr_email.email_address, vw_sap_hr_email_weekly.email_address ,sap_pins_email.Email_Address, NULL) \n",
					" end as pins_email_address\n",
					",sap_hr.resource_code\n",
					",sap_hr.emp_type\n",
					" FROM \n",
					" odw_workspace_db.sap_hr_layer1_harmonised sap_hr\n",
					" LEFT OUTER JOIN\n",
					" odw_workspace_db.inspector_address_layer1_harmonised inspector_address\n",
					" ON sap_hr.pins_staff_number = inspector_address.PINS_Join_staff_number\n",
					" LEFT OUTER JOIN\n",
					" odw_workspace_db.inspector_raw_layer1_harmonised inspector_raw\n",
					" ON sap_hr.pins_join_staff_number = inspector_raw.PINS_Join_staff_number\n",
					" and sap_hr.PINS_join_grade = inspector_raw.Grade\n",
					" LEFT OUTER JOIN\n",
					" odw_workspace_db.sap_pins_email_layer1_harmonised sap_pins_email\n",
					" ON sap_hr.PINS_Join_staff_number = sap_pins_email.Staff_Number\n",
					" LEFT OUTER JOIN\n",
					" odw_workspace_db.vw_sap_hr_email_layer1_harmonised vw_sap_hr_email\n",
					" ON sap_hr.pins_staff_number = vw_sap_hr_email.PINS_Join_staff_number \n",
					" LEFT OUTER JOIN\n",
					" odw_workspace_db.vw_sap_hr_email_weekly_layer1_harmonised vw_sap_hr_email_weekly\n",
					" ON sap_hr.pins_staff_number = vw_sap_hr_email_weekly.PINS_Join_staff_number\n",
					""
				],
				"execution_count": 11
			}
		]
	}
}