{
	"name": "rebuild_tables",
	"properties": {
		"folder": {
			"name": "utils"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "27d5ee9a-41ff-467f-913f-270ebc48535f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw",
				"name": "pinssynspodw",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pprint"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"standardised_container = 'odw-standardised'\r\n",
					"harmonised_container = 'odw-harmonised'\r\n",
					"curated_container = 'odw-curated'\r\n",
					"curated_migration_container = 'odw-curated-migration'\r\n",
					"config_container = 'odw-config-db'\r\n",
					"logging_container = 'logging'"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def rebuild_table(db_name: str, table_name: str, location: str):\r\n",
					"    if db_name == \"odw_standardised_db\" and table_name.startswith(\"listed_building\"):\r\n",
					"        table_format = \"PARQUET\"\r\n",
					"    else:\r\n",
					"        table_format = \"DELTA\"\r\n",
					"    spark.sql(f\"\"\"CREATE TABLE IF NOT EXISTS {db_name}.{table_name}\r\n",
					"    USING {table_format}\r\n",
					"    LOCATION '{location}'\r\n",
					"    \"\"\")\r\n",
					"    print(f\"Table {db_name}.{table_name} rebuilt at location\\n{location}\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def list_tables(db_name: str):\r\n",
					"    spark.sql(f\"USE {db_name}\")\r\n",
					"    tables_df: DataFrame = spark.sql(\"SHOW TABLES\")\r\n",
					"    table_names: list = [row['tableName'] for row in tables_df.collect()]\r\n",
					"    \r\n",
					"    return table_names"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def create_table_metadata(db_name: str, tables: list) -> dict:\r\n",
					"    tables = list_tables(db_name)\r\n",
					"    table_metadata = {}\r\n",
					"    for table in tables:\r\n",
					"        try:\r\n",
					"            table_details = spark.sql(f\"DESCRIBE DETAIL {db_name}.{table}\")\r\n",
					"            table_info = table_details.collect()[0].asDict()\r\n",
					"            table_name = table_info.get(\"name\", table)\r\n",
					"            table_location = table_info.get(\"location\", \"Unknown\")\r\n",
					"            table_format = table_info.get(\"format\", \"Unknown\")\r\n",
					"            table_metadata[table_name] = {\r\n",
					"                \"location\": table_location,\r\n",
					"                \"format\": table_format\r\n",
					"                }\r\n",
					"        except Exception as e:\r\n",
					"            print(f\"Failed to fetch details for {table}: {e}\")\r\n",
					"\r\n",
					"    return table_metadata"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def get_table_location(container: str, db_name: str, table_name: str) -> str:\r\n",
					"    full_table_name = f\"{db_name}.{table_name}\"\r\n",
					"    for table, metadata in table_metadata.items():\r\n",
					"        if table == full_table_name:\r\n",
					"            path = metadata.get(\"location\", \"Unknown\")\r\n",
					"            if path.startswith('abfss://synapse'):\r\n",
					"                location = f'abfss://{container}@pinsstodwdevuks9h80mb.dfs.core.windows.net/{table_name}'\r\n",
					"            else:\r\n",
					"                location = path\r\n",
					"\r\n",
					"            return location"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def get_new_locations(container: str, tables: list) -> list:\r\n",
					"    table_locations = []\r\n",
					"    for table in tables:\r\n",
					"        location = get_table_location(container=container, db_name=db_name, table_name=table)\r\n",
					"        table_locations.append((table, location))\r\n",
					"\r\n",
					"    return table_locations"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuid standardised tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"odw_standardised_db\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=standardised_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pprint.pprint(table_metadata)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('horizon_nsip_advice',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_nsip_advice'),\r\n",
					"('horizon_case_involvement',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_case_involvement'),\r\n",
					"('horizon_examination_timetable',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_examination_timetable'),\r\n",
					"('horizon_folder',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_folder'),\r\n",
					"('horizon_nsip_data',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_nsip_data'),\r\n",
					"('horizon_nsip_relevant_representation',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_nsip_relevant_representation'),\r\n",
					"('aie_document_data',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/AIEDocumentData/aie_document_data'),\r\n",
					"('horizon_appeals_event',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_appeals_event'),\r\n",
					"('nsip_document',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_document'),\r\n",
					"('folder',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/NSIP/folder'),\r\n",
					"('zendesk_system_extract',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/zendesk_system_extract'),\r\n",
					"('horizon_appeals_folder',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_appeals_folder'),\r\n",
					"('horizon_appeals_document_metadata',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_appeals_document_metadata'),\r\n",
					"('horizon_s62a_view_cases',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_s62a_view_cases'),\r\n",
					"('horizon_s62a_view_case_dates',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_s62a_view_case_dates'),\r\n",
					"('horizon_s62a_view_case_extended_data',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_s62a_view_case_extended_data'),\r\n",
					"('horizon_s62a_view_case_officers',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_s62a_view_case_officers'),\r\n",
					"('horizon_s62a_view_case_basic_data',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/horizon_s62a_view_case_basic_data'),\r\n",
					"('entraid',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/entraid'),\r\n",
					"('sb_nsip_subscription',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_subscription'),\r\n",
					"('zendesk_updated_tickets',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/zendesk_updated_tickets'),\r\n",
					"('document_meta_data',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/Horizon/document_meta_data'),\r\n",
					"('sb_nsip_representation',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_representation'),\r\n",
					"('sb_appeal_s78',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_s78'),\r\n",
					"('pins_lpa',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_lpa'),\r\n",
					"('sb_nsip_project',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_project'),\r\n",
					"('sb_nsip_project_update',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_project_update'),\r\n",
					"('sb_nsip_exam_timetable',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_exam_timetable'),\r\n",
					"('sb_nsip_document',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_document'),\r\n",
					"('sb_s51_advice',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_s51_advice'),\r\n",
					"('sb_appeal_document',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_document'),\r\n",
					"('sb_service_user',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_service_user'),\r\n",
					"('sb_appeal_event',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_event'),\r\n",
					"('pins_inspectors',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_inspectors'),\r\n",
					"('sb_appeal_has',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_has'),\r\n",
					"('sb_folder',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_folder'),\r\n",
					"('listed_building',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/listed_building'),\r\n",
					"('listed_building_outline',\r\n",
					"'abfss://odw-standardised@pinsstodwdevuks9h80mb.dfs.core.windows.net/listed_building_outline')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding standardised tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuild harmonised tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"odw_harmonised_db\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=harmonised_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('main_sourcesystem_fact',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/main_sourcesystem_fact'),\r\n",
					"('document_meta_data',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/document_meta_data'),\r\n",
					"('casework_nsip_examination_timetable_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/casework_nsip_examination_timetable_dim'),\r\n",
					"('casework_nsip_advice_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/casework_nsip_advice_dim'),\r\n",
					"('horizon_folder',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/horizon_folder'),\r\n",
					"('casework_case_involvement_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/casework_case_involvement_dim'),\r\n",
					"('horizon_appeals_event',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/horizon_appeals_event'),\r\n",
					"('nsip_project',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_project'),\r\n",
					"('nsip_relevant_representation',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_relevant_representation'),\r\n",
					"('folder',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/folder'),\r\n",
					"('service_user',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/service_user'),\r\n",
					"('nsip_s51_advice',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_s51_advice'),\r\n",
					"('nsip_representation',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_representation'),\r\n",
					"('nsip_exam_timetable',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_exam_timetable'),\r\n",
					"('appeal_document',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_document'),\r\n",
					"('horizon_appeals_folder',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/horizon_appeals_folder'),\r\n",
					"('appeals_folder',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/appeals_folder'),\r\n",
					"('entraid',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/entraid'),\r\n",
					"('document_metadata',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/document_metadata'),\r\n",
					"('nsip_document',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_document'),\r\n",
					"('s62a_view_case_officers_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/s62a_view_case_officers_dim'),\r\n",
					"('s62a_view_cases_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/s62a_view_cases_dim'),\r\n",
					"('s62a_view_case_extended_data_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/s62a_view_case_extended_data_dim'),\r\n",
					"('s62a_view_case_dates_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/s62a_view_case_dates_dim'),\r\n",
					"('s62a_view_case_basic_data_dim',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/s62a_view_case_basic_data_dim'),\r\n",
					"('aie_document_data',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/aie_document_data'),\r\n",
					"('appeal_event',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_event'),\r\n",
					"('sb_nsip_subscription',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_subscription'),\r\n",
					"('sb_nsip_representation',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_representation'),\r\n",
					"('sb_folder',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_folder'),\r\n",
					"('ims',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/lib/ims'),\r\n",
					"('listed_building',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/listed_building'),\r\n",
					"('sb_appeal_s78',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_s78'),\r\n",
					"('appeal_s78',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_s78'),\r\n",
					"('test_table_delta_logs',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/test_table_delta_logs'),\r\n",
					"('pins_lpa',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_lpa'),\r\n",
					"('sb_nsip_exam_timetable',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_exam_timetable'),\r\n",
					"('sb_nsip_project',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_project'),\r\n",
					"('sb_nsip_project_update',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_project_update'),\r\n",
					"('pins_inspectors',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_inspectors'),\r\n",
					"('sb_service_user',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_service_user'),\r\n",
					"('sb_nsip_document',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_nsip_document'),\r\n",
					"('sb_s51_advice',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_s51_advice'),\r\n",
					"('sb_appeal_event',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_event'),\r\n",
					"('sb_appeal_document',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_document'),\r\n",
					"('sb_appeal_has',\r\n",
					"'abfss://odw-harmonised@pinsstodwdevuks9h80mb.dfs.core.windows.net/sb_appeal_has')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding harmonised tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuild curated tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"odw_curated_db\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=curated_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('folder',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/folder'),\r\n",
					"('nsip_project_update',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_project_update'),\r\n",
					"('nsip_subscription',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_subscription'),\r\n",
					"('nsip_data_hzn_only',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_data_hzn_only'),\r\n",
					"('s62a',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/s62a'),\r\n",
					"('service_user',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/service_user'),\r\n",
					"('pins_lpa',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_lpa'),\r\n",
					"('appeal_s78',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_s78'),\r\n",
					"('listed_building',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/listed_building'),\r\n",
					"('pins_inspectors',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/pins_inspectors'),\r\n",
					"('entraid',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/entraid'),\r\n",
					"('s51_advice',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/s51_advice'),\r\n",
					"('nsip_representation',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_representation'),\r\n",
					"('appeal_event',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_event'),\r\n",
					"('appeal_has',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_has'),\r\n",
					"('legacy_folder_data',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/legacy_folder_data'),\r\n",
					"('appeal_service_user',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_service_user'),\r\n",
					"('appeal_document',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_document'),\r\n",
					"('appeal_folder',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_folder'),\r\n",
					"('nsip_exam_timetable',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_exam_timetable'),\r\n",
					"('appeal_service_user_curated_mipins',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_service_user_curated_mipins'),\r\n",
					"('appeal_event_curated_mipins',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeal_event_curated_mipins'),\r\n",
					"('appeals_has_curated_mipins',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/appeals_has_curated_mipins'),\r\n",
					"('entraid_curated_mipins',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/entraid_curated_mipins'),\r\n",
					"('nsip_document',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_document'),\r\n",
					"('nsip_project',\r\n",
					"'abfss://odw-curated@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_project')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding curated tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuild curated migration tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"odw_curated_migration_db\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=curated_migration_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('nsip_exam_timetable',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_exam_timetable'),\r\n",
					"('service_user',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/service_user'),\r\n",
					"('nsip_document',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_document'),\r\n",
					"('nsip_project',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_project'),\r\n",
					"('nsip_representation',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/nsip_representation'),\r\n",
					"('s51_advice',\r\n",
					"'abfss://odw-curated-migration@pinsstodwdevuks9h80mb.dfs.core.windows.net/s51_advice')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding curated migration tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuild config tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"odw_config_db\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=config_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('main_pipeline_config',\r\n",
					"'abfss://odw-config-db@pinsstodwdevuks9h80mb.dfs.core.windows.net/main_pipeline_config'),\r\n",
					"('datalabs_log',\r\n",
					"'abfss://odw-raw@pinsstodwdevuks9h80mb.dfs.core.windows.net/config/datalabs_log')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding config tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Rebuild logging tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name = \"logging\"\r\n",
					"tables = list_tables(db_name=db_name)\r\n",
					"table_metadata = create_table_metadata(db_name=db_name, tables=tables)\r\n",
					"table_locations = get_new_locations(container=logging_container, tables=tables)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"table_locations = [\r\n",
					"('pipeline_logs',\r\n",
					"'abfss://logging@pinsstodwdevuks9h80mb.dfs.core.windows.net/pipeline_logs'),\r\n",
					"('pipeline_logs_test1',\r\n",
					"'abfss://logging@pinsstodwdevuks9h80mb.dfs.core.windows.net/pipeline_logs_test1')\r\n",
					"]"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(\"Rebuilding logging tables\")\r\n",
					"for table in table_locations:\r\n",
					"    table_name = table[0]\r\n",
					"    location = table[1]\r\n",
					"    rebuild_table(db_name=db_name, table_name=table_name, location=location)"
				],
				"execution_count": null
			}
		]
	}
}