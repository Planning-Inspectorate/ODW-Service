{
	"name": "CompareCuratedAndHarmonised",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "CuratedSource"
				},
				{
					"name": "HarmonisedSource"
				},
				{
					"name": "ServiceBusHarmonisedSource"
				},
				{
					"name": "StandardisedSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_storage",
						"type": "LinkedServiceReference"
					},
					"name": "Schemas"
				}
			],
			"sinks": [
				{
					"name": "TestResultOutput"
				}
			],
			"transformations": [
				{
					"name": "HarmonisedCount"
				},
				{
					"name": "ServiceBusHarmonisedCount"
				},
				{
					"name": "CuratedCount"
				},
				{
					"name": "JoinTables"
				},
				{
					"name": "rowDifference"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'odw_curated_db',",
				"     tableName: 's51_advice') ~> CuratedSource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'odw_harmonised_db',",
				"     tableName: 'nsip_s51_advice') ~> HarmonisedSource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'odw_harmonised_db',",
				"     tableName: 'sb_s51_advice') ~> ServiceBusHarmonisedSource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'odw_standardised_db',",
				"     tableName: 'sb_s51_advice') ~> StandardisedSource",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     documentForm: 'documentPerLine') ~> Schemas",
				"HarmonisedSource aggregate(rowHarmonisedCount = sum(iif(toString(byName('IsActive')) == 'Y', 1, 0))",
				") ~> HarmonisedCount",
				"ServiceBusHarmonisedSource aggregate(rowHorizonHarmonisedCount = count(1)) ~> ServiceBusHarmonisedCount",
				"CuratedSource aggregate(rowCuratedCount = count(1)) ~> CuratedCount",
				"CuratedCount, HarmonisedCount join(1 == 1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinTables",
				"JoinTables derive(rowDifference = rowCuratedCount - (rowHarmonisedCount)) ~> rowDifference",
				"rowDifference sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'logging',",
				"     tableName: ('row_comparison.csv')) ~> TestResultOutput"
			]
		}
	}
}