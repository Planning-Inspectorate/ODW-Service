{
	"name": "df_main_pipeline_logs",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_odw_main_pipeline_logging",
						"type": "DatasetReference"
					},
					"name": "queryBuilderUsingParams"
				}
			],
			"sinks": [
				{
					"name": "SaveToDB",
					"description": "pipeline_logs table"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     Stage as string,",
				"     PipelineName as string,",
				"     PipelineRunID as string,",
				"     StartTime as string,",
				"     EndTime as string,",
				"     Inserts as integer,",
				"     Updates as integer,",
				"     Deletes as integer,",
				"     ErrorMessage as string,",
				"     StatusMessage as string,",
				"     PipelineTriggerID as string,",
				"     PipelineTriggerName as string,",
				"     PipelineTriggerType as string,",
				"     PipelineTriggeredbyPipelineName as string,",
				"     PipelineTriggeredbyPipelineRunID as string,",
				"     PipelineExecutionTimeInSec as string,",
				"     ActivityType as string,",
				"     DurationSeconds as string,",
				"     LogId as integer",
				"}",
				"source(output(",
				"          LogId as integer,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (concat(\"Select \",         toString($LogId), \"AS LogId, '\",         $PipelineName, \"' AS PipelineName, '\",        $PipelineRunID, \"' AS PipelineRunID, '\",        $StartTime, \"' AS StartTime, '\",        $EndTime, \"' AS EndTime, '\",        $DurationSeconds, \"' AS DurationSeconds, \",        toString($Inserts), \" AS Inserts, \",        toString($Updates), \" AS Updates, \",        toString($Deletes), \" AS Deletes, '\",        $ErrorMessage, \"' AS ErrorMessage, '\",        $StatusMessage, \"' AS StatusMessage, '\",        $PipelineTriggerID, \"' AS PipelineTriggerID, '\",        $PipelineTriggerName, \"' AS PipelineTriggerName, '\",        $PipelineTriggerType, \"' AS PipelineTriggerType, '\",        $PipelineTriggeredbyPipelineName, \"' AS PipelineTriggeredbyPipelineName, '\",        $PipelineTriggeredbyPipelineRunID, \"' AS PipelineTriggeredbyPipelineRunID, '\",        $PipelineExecutionTimeInSec, \"' AS PipelineExecutionTimeInSec, '\",        $ActivityType, \"' AS ActivityType\"    )),",
				"     format: 'query') ~> queryBuilderUsingParams",
				"queryBuilderUsingParams sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'logging',",
				"     tableName: 'pipeline_logs') ~> SaveToDB"
			]
		}
	}
}