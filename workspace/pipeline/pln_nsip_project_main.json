{
	"name": "pln_nsip_project_main",
	"properties": {
		"activities": [
			{
				"name": "Service Bus to Raw",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_sb_to_raw",
						"type": "NotebookReference"
					},
					"parameters": {
						"secret_name": {
							"value": "odt-servicebus-connectionstring",
							"type": "string"
						},
						"topic_name": {
							"value": "nsip-project",
							"type": "string"
						},
						"subscription_name": {
							"value": "nsip-project",
							"type": "string"
						},
						"output_file_name": {
							"value": "NSIPProject",
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "If New Data in Raw",
				"description": "If there's new data ingested from the SB to odw-raw",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Service Bus to Raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(activity('Service Bus to Raw').output.status.Output.result.exitValue)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "No new messages from SB",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_fail_activity_logging",
									"type": "NotebookReference"
								},
								"parameters": {
									"output": {
										"value": "No new messages received from Service Bus",
										"type": "string"
									}
								},
								"snapshot": true,
								"conf": {
									"spark.dynamicAllocation.enabled": false,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"numExecutors": null
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Ingest Std",
							"description": "Ingests raw data into the new standardised table i.e casework_nsip_data_dim",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_raw_to_std",
									"type": "NotebookReference"
								},
								"parameters": {
									"source_folder": {
										"value": "ServiceBus",
										"type": "string"
									},
									"source_frequency_folder": {
										"value": "NSIPProject",
										"type": "string"
									},
									"specific_file": {
										"value": "NSIPProject",
										"type": "string"
									}
								},
								"snapshot": true,
								"conf": {
									"spark.dynamicAllocation.enabled": null,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"numExecutors": null
							}
						},
						{
							"name": "Ingest Hrm",
							"description": "Ingests standardised data into the new harmonised table i.e horizon_service_user_new",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "Ingest Std",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "casework_nsip_data_dim",
									"type": "NotebookReference"
								},
								"snapshot": true
							}
						}
					]
				}
			},
			{
				"name": "Std to Hrm NSIP Data",
				"description": "Ingests data from standardised to harmonised for casework_nsip_project_info_internal_dim_legacy",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Raw to Std NSIP Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "casework_nsip_data_dim_legacy",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Std to Hrm Contact Information",
				"description": "casework_contact_information_dim_legacy",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Raw to Std Contact Information",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "casework_contact_information_dim_legacy",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Hzn to Raw NSIP Data",
				"description": "This is copying data based on an SQL script to gather correct NSIP data from Horizon",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "."
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'NSIPData.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "WITH \nStringFields(ID, Vernum, ProjectName, ProjectStatus, ExamTimetablePublishStatus, \n\t\t\tSector, ProjectType, Stage, CaseReference, ProjectLocation, ProjectEmailAddress, \n\t\t\tTwitterAccountName, Region, Easting, Northing, Transboundary, WelshLanguage, \n\t\t\tExASize, MapZoomLevel, ProjectDescription, SoS, TenE) AS\n       (SELECT \n\t\t\tId, VerNum, [8], [23], [26], [17], [18], [19], [10], [2], [11], [15], [22], [12], [13], [28], [24], [20], [14], [9], [21], [27]\n       FROM \n\t\t\t(SELECT Id, VerNum, AttrID, ValStr \n\t\t\tFROM LLAttrData \n\t\t\tWHERE \n\t\t\t\tDefID = 12361638 \n\t\t\t\tAND AttrID IN (2, 8, 23, 26, 17, 10, 11, 15, 18, 19, 22, 12, 13, 28, 24, 20, 14, 9, 21, 27)) AS Strings \n\t\t\tPIVOT (MAX(ValStr) FOR AttrID IN ([2], [8], [23], [26], [17], [10], [11], [15], [18], [19], [22], [12], [13], [28], [24], [20], [14], [9], [21], [27])) AS StringsPivot),\n\nDateFields(ID, Vernum, DateProjectAppearsOnWebsite, DateOfDCOAcceptance, AnticipatedDateOfSubmission, \n\t\t\tAnticipatedSubmissionDateNonSpecific, DateOfDCOSubmission, DateOfRepresentationPeriodOpen, \n\t\t\tDateOfRelevantRepresentationClose, DateRRepAppearOnWebsite, ConfirmedStartOfExamination, \n\t\t\tDateTimeExaminationEnds, Stage4ExtensionToExamCloseDate, Stage5ExtensionToRecommendationDeadline, \n\t\t\tDateOfRecommendations, ConfirmedDateOfDecision, Stage5ExtensionToDecisionDeadline,\n\t\t\tDateProjectWithdrawn, Section46Notification, DatePINSFirstNotifiedOfProject, \n\t\t\tScreeningOpinionSought, ScreeningOpinionIssued, ScopingOpinionSought, \n\t\t\tScopingOpinionIssued, DeadlineForAcceptanceDecision, DateSection58NoticeReceived, \n\t\t\tPreliminaryMeetingStartDate, DeadlineForCloseOfExamination,\tDeadlineForSubmissionOfRecommendation, \n\t\t\tDeadlineForDecision, JRPeriodEndDate, ExtensionToDateRelevantRepresentationsClose\n\t\t\t) AS\n       (SELECT \n\t\t\tId,VerNum,[3],[13],[5],[4],[12],[15],[16],[18],[21],[22],[24],[27],[25],[28],[30],[6],[11],[2], [7], [8], [9], [10], [14], [19], [20], [23], [26], [29], [31], [17]\n       FROM \n\t\t\t(SELECT Id, VerNum, AttrID, ValDate \n\t\t\tFROM LLAttrData \n\t\t\tWHERE \n\t\t\t\tDefID = 12361641 \n\t\t\t\tAND AttrID IN (3, 4, 5, 6, 11, 12, 13, 15, 16, 18, 21, 22, 24, 25, 27, 28, 30, 2, 7, 8,9, 10, 14, 19, 20, 23, 26, 29, 31, 17)) AS Dates \n\t\t\tPIVOT (MAX(ValDate) FOR AttrID IN ([3], [4], [5], [6], [11], [12], [13], [15], [16], [18], [21], [22], [24], [25], [27], [28], [30], [2], [7], [8], [9], [10], [14], [19], [20], [23], [26], [29], [31], [17])) AS DatesPivot),\n\nTextFields(ID, Vernum, Summary) AS\n       (SELECT Id,VerNum,[9]\n       FROM \n\t\t\t(SELECT Id, VerNum, AttrID, CAST(ValLong AS VARCHAR(MAX)) AS TextField \n\t\t\tFROM LLAttrData \n\t\t\tWHERE \n\t\t\t\tDefID = 12361638 \n\t\t\t\tAND AttrID IN (9)) AS Texts \n\t\t\tPIVOT (MAX(TextField) FOR AttrID IN ([9])) AS TextsPivot),\n\nStringFields_Applicant(ID, Vernum, PromoterName, ApplicantFirstName, ApplicantLastName, ApplicantEmailAddress, ApplicantWebAddress, ApplicantPhoneNumber, AddressLine1, AddressLine2, AddressTown, AddressCounty, PostCode) AS\n       (SELECT Id, VerNum, [19], [3], [4], [10], [12], [11], [5], [6], [7], [8], [9]\n\t   FROM \n\t\t\t(SELECT Id, VerNum, AttrID, ValStr \n\t\t\tFROM LLAttrData \n\t\t\tWHERE \n\t\t\t\tDefID = 12361642 \n\t\t\t\tAND AttrID IN (19, 3, 4, 10, 12, 18, 11, 5, 6, 7, 8, 9)) AS Strings \n\t\t\tPIVOT (MAX(ValStr) FOR AttrID IN ([19], [3], [4], [10], [12], [18], [11], [5], [6], [7], [8], [9])) AS StringsPivot),\n\nTextFields_Applicant(ID, Vernum, ApplicantDescriptionOfProject) AS\n       (SELECT Id, VerNum, [18]\n       FROM \n\t\t\t(SELECT Id, VerNum, AttrID, CAST(ValLong AS VARCHAR(MAX)) AS TextField \n\t\t\tFROM LLAttrData \n\t\t\tWHERE \n\t\t\t\tDefID = 12361642 \n\t\t\t\tAND AttrID IN (18)) AS Texts \n\t\t\tPIVOT (MAX(TextField) FOR AttrID IN ([18])) AS TextsPivot),\n\nStringFields_Case_Manager(DataId, ContactID, ContactDetails, TypeOfInvolvement) AS\n       (SELECT d.DataId AS DataId, ll1.ValStr AS [ContactID], ll2.ValStr AS [ContactDetails], ll3.ValStr AS [TypeOfInvolvement]\n       FROM DTree d\n\t\t   INNER JOIN llattrdata ll1 ON d.DataId = ll1.Id\n\t\t   INNER JOIN llattrdata ll2 ON d.DataId = ll2.Id\n\t\t   INNER JOIN llattrdata ll3 ON d.DataId = ll3.Id\n       WHERE\n\t\t   ll1.DefId = 95501 AND ll1.AttrId = 20\n\t\t   AND ll2.DefId = 95501 AND ll2.AttrId = 19\n\t\t   AND ll3.DefId = 95501 AND ll3.AttrId = 3 AND ll3.ValStr = 'Case Manager'\n\t\t   AND ll1.ParentKeyId = ll2.ParentKeyId\n\t\t   AND ll1.ParentKeyId = ll3.ParentKeyId),\n\nStringFields_Case_Officer(DataId, ContactID, ContactDetails, TypeOfInvolvement) AS\n       (SELECT d.DataId AS DataId, ll1.ValStr AS [ContactID], ll2.ValStr AS [ContactDetails], ll3.ValStr AS [TypeOfInvolvement]\n       FROM DTree d\n\t\t   INNER JOIN llattrdata ll1 ON d.DataId = ll1.Id\n\t\t   INNER JOIN llattrdata ll2 ON d.DataId = ll2.Id\n\t\t   INNER JOIN llattrdata ll3 ON d.DataId = ll3.Id\n       WHERE\n\t\t   ll1.DefId = 95501 AND ll1.AttrId = 20\n\t\t   AND ll2.DefId = 95501 AND ll2.AttrId = 19\n\t\t   AND ll3.DefId = 95501 AND ll3.AttrId = 3 AND ll3.ValStr = 'Case Officer'\n\t\t   AND ll1.ParentKeyId = ll2.ParentKeyId\n\t\t   AND ll1.ParentKeyId = ll3.ParentKeyId),\n\n\nStringFields_Inspector(DataId, ContactID, ContactDetails, TypeOfInvolvement) AS\n       (SELECT d.DataId AS DataId, ll1.ValStr AS [ContactID], ll2.ValStr AS [ContactDetails], ll3.ValStr AS [TypeOfInvolvement]\n       FROM DTree d\n\t\t   INNER JOIN llattrdata ll1 ON d.DataId = ll1.Id\n\t\t   INNER JOIN llattrdata ll2 ON d.DataId = ll2.Id\n\t\t   INNER JOIN llattrdata ll3 ON d.DataId = ll3.Id\n       WHERE\n\t\t   ll1.DefId = 95501 AND ll1.AttrId = 20\n\t\t   AND ll2.DefId = 95501 AND ll2.AttrId = 19\n\t\t   AND ll3.DefId = 95501 AND ll3.AttrId = 3 AND ll3.ValStr = 'Inspector'\n\t\t   AND ll1.ParentKeyId = ll2.ParentKeyId\n\t\t   AND ll1.ParentKeyId = ll3.ParentKeyId)\n       \nSELECT \n\tnsipcase.CreateDate AS CaseCreatedDate,\n\ts.ProjectName,\n\ts.ProjectStatus,\n\ts.ExamTimetablePublishStatus,\n\ts.Sector,\n\ts.ProjectType,\n\ts.Stage,\n\ts.CaseReference,\n\ts.ProjectLocation,\n\ts.ProjectEmailAddress,\n\ts.TwitterAccountName,\n\ts.Region,\n\ts.Easting,\n\ts.Northing,\n\ts.Transboundary,\n\ts.WelshLanguage,\n\ts.ExASize,\n\ts.MapZoomLevel,\n\ts.ProjectDescription,\n\ts.SoS,\n\ts.TenE,\n\td.DateProjectAppearsOnWebsite,\n\td.DateOfDCOAcceptance,\n\td.AnticipatedDateOfSubmission,\n\td.DateOfDCOSubmission,\n\td.DateOfRepresentationPeriodOpen,\n\td.DateOfRelevantRepresentationClose,\n\td.DateRRepAppearOnWebsite,\n\td.ConfirmedStartOfExamination,\n\td.DateTimeExaminationEnds,\n\td.Stage4ExtensionToExamCloseDate,\n\td.Stage5ExtensionToRecommendationDeadline,\n\td.DateOfRecommendations,\n\td.ConfirmedDateOfDecision,\n\td.Stage5ExtensionToDecisionDeadline,\n\td.DateProjectWithdrawn,\n\td.Section46Notification,\n\td.DatePINSFirstNotifiedOfProject,\n\td.ScreeningOpinionSought,\n\td.ScreeningOpinionIssued,\n\td.ScopingOpinionSought,\n\td.ScopingOpinionIssued,\n\td.DeadlineForAcceptanceDecision,\n\td.DateSection58NoticeReceived,\n\td.PreliminaryMeetingStartDate,\n\td.DeadlineForCloseOfExamination,\n\td.DeadlineForSubmissionOfRecommendation,\n\td.DeadlineForDecision,\n\td.JRPeriodEndDate,\n\td.ExtensionToDateRelevantRepresentationsClose,\n\tt.Summary,\n\tsa.PromoterName,\n\tsa.ApplicantFirstName,\n\tsa.ApplicantLastName,\n\tsa.AddressLine1,\n\tsa.AddressLine2,\n\tsa.AddressTown,\n\tsa.AddressCounty,\n\tsa.PostCode,\n\tsa.ApplicantEmailAddress,\n\tsa.ApplicantWebAddress,\n\tsa.ApplicantPhoneNumber,\n\tta.ApplicantDescriptionOfProject\nFROM \n\tHorizon_CaseReference cr \n\t\tINNER JOIN Horizon_TypeOfCase toc ON cr.CaseTypeId = toc.ID\n\t\tINNER JOIN DTree nsipcase ON cr.CaseNodeId = nsipcase.DataID\n\t\tINNER JOIN StringFields s ON nsipcase.DataID = s.ID\n\t\tINNER JOIN DateFields d ON nsipcase.DataID = d.ID\n\t\tINNER JOIN TextFields t ON nsipcase.DataID = t.ID\n\t\tINNER JOIN StringFields_Applicant sa ON nsipcase.DataID = sa.ID\n\t\tINNER JOIN TextFields_Applicant ta ON nsipcase.DataID = ta.ID\nWHERE\n       toc.CaseworkType = 'NSIP'\nORDER BY\n\ts.CaseReference",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CaseCreatedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CaseCreatedDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectStatus",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectStatus",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ExamTimetablePublishStatus",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ExamTimetablePublishStatus",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Sector",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Sector",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectType",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectType",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Stage",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Stage",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectLocation",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectLocation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectEmailAddress",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectEmailAddress",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TwitterAccountName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TwitterAccountName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Region",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Region",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Easting",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Easting",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Northing",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Northing",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Transboundary",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Transboundary",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "WelshLanguage",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "WelshLanguage",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ExASize",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ExASize",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "MapZoomLevel",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "MapZoomLevel",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProjectDescription",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProjectDescription",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SoS",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SoS",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TenE",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TenE",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateProjectAppearsOnWebsite",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateProjectAppearsOnWebsite",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfDCOAcceptance",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfDCOAcceptance",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AnticipatedDateOfSubmission",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "AnticipatedDateOfSubmission",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfDCOSubmission",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfDCOSubmission",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfRepresentationPeriodOpen",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfRepresentationPeriodOpen",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfRelevantRepresentationClose",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfRelevantRepresentationClose",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateRRepAppearOnWebsite",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateRRepAppearOnWebsite",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ConfirmedStartOfExamination",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ConfirmedStartOfExamination",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateTimeExaminationEnds",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateTimeExaminationEnds",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Stage4ExtensionToExamCloseDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Stage4ExtensionToExamCloseDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Stage5ExtensionToRecommendationDeadline",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Stage5ExtensionToRecommendationDeadline",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfRecommendations",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfRecommendations",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ConfirmedDateOfDecision",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ConfirmedDateOfDecision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Stage5ExtensionToDecisionDeadline",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Stage5ExtensionToDecisionDeadline",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateProjectWithdrawn",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateProjectWithdrawn",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Section46Notification",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Section46Notification",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DatePINSFirstNotifiedOfProject",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DatePINSFirstNotifiedOfProject",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ScreeningOpinionSought",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ScreeningOpinionSought",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ScreeningOpinionIssued",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ScreeningOpinionIssued",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ScopingOpinionSought",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ScopingOpinionSought",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ScopingOpinionIssued",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ScopingOpinionIssued",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DeadlineForAcceptanceDecision",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DeadlineForAcceptanceDecision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateSection58NoticeReceived",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateSection58NoticeReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PreliminaryMeetingStartDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "PreliminaryMeetingStartDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DeadlineForCloseOfExamination",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DeadlineForCloseOfExamination",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DeadlineForSubmissionOfRecommendation",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DeadlineForSubmissionOfRecommendation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DeadlineForDecision",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DeadlineForDecision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "JRPeriodEndDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "JRPeriodEndDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ExtensionToDateRelevantRepresentationsClose",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ExtensionToDateRelevantRepresentationsClose",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Summary",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Summary",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PromoterName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PromoterName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantFirstName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicantFirstName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantLastName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicantLastName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressLine1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressLine1",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressLine2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressLine2",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressTown",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressTown",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressCounty",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressCounty",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PostCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PostCode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantEmailAddress",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicantEmailAddress",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantWebAddress",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicantWebAddress",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantPhoneNumber",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicantPhoneNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicantDescriptionOfProject",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ApplicantDescriptionOfProject",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_NSIP_Query",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "NSIP_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "NSIPData.csv"
						}
					}
				]
			},
			{
				"name": "Hzn to Raw Contact Information",
				"description": "This is copying data based on an SQL script to gather Contact Information data from Horizon",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "."
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'HorizonContactInformation.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "WITH cases as\n(\nSELECT DISTINCT\n      cases.CaseNodeId, \n\t  dtree.SubType,  \n\t  cases.CaseReference, \n\t  cases.CaseUniqueId as case_number\n      \nFROM\n      Horizon_CaseReference cases\n      INNER JOIN DTree dtree ON cases.CaseNodeId = dtree.DataID\n      INNER JOIN Horizon_TypeOfCase t ON cases.CaseTypeId = t.ID\nWHERE\n\t  dtree.OwnerID != -235834 \t-- Recycle bin ownerid\n\t  AND t.CaseworkType IN ('Appeal', 'CommonLand', 'Costs', 'Environment', 'RightsOfWay')\n)\n,\ncase_involvement(DataId, ContactID, ContactDetails, TypeOfInvolvement) AS\n       (SELECT DISTINCT d.DataId AS DataId, ll1.ValStr AS [ContactID], ll2.ValStr AS [ContactDetails], ll3.ValStr AS [TypeOfInvolvement]\n       FROM DTree d\n\t\t   INNER JOIN llattrdata ll1 ON d.DataId = ll1.Id\n\t\t   INNER JOIN llattrdata ll2 ON d.DataId = ll2.Id\n\t\t   INNER JOIN llattrdata ll3 ON d.DataId = ll3.Id\n       WHERE\n\t\t   ll1.DefId = 95501 AND ll1.AttrId = 20\n\t\t   AND ll2.DefId = 95501 AND ll2.AttrId = 19\n\t\t   AND ll3.DefId = 95501 AND ll3.AttrId = 3 \n\t\t   --exclude PINS staff case involvement roles\n\t\t   --AND ll3.ValStr NOT IN ('Case Manager', 'Case Officer', 'Inspector', 'Assistant Case Officer', 'Environmental Services Officer', 'Programme Officer', 'Legal Officer', 'Previous Inspector')\n\t\t   AND ll1.ParentKeyId = ll2.ParentKeyId\n\t\t   AND ll1.ParentKeyId = ll3.ParentKeyId)\n\nSELECT DISTINCT\n\tcr.case_number,\n\tD.CreateDate as case_created_date,\n\tci.ContactID,\n\tci.TypeOfInvolvement,\n\tv.ContactType,\n\tv.FirstName,\n\tv.LastName,\n\tv.PostName,\n\tv.Title,\n\tv.Salutation,\n\tv.Suffix,\n\tv.POBox,\n\tv.Address1,\n\tv.Address2,\n\tv.City,\n\tv.County,\n\tv.Postcode,\n\tv.Country,\n\tv.TelephoneOffice,\n\tv.TelephoneMobile,\n\tv.Fax,\n\tv.Email,\n\tv.LPACode,\n\tv.OrganisationName,\n\tt.OrganisationTypeName\nFROM \n\tcases cr\n\t\tINNER JOIN DTree D ON cr.CaseNodeId = D.DataID\n\t\tINNER JOIN case_involvement ci on D.DataID = ci.DataId\n\t\tLEFT JOIN [dbo].[Horizon_vw_AllContacts] v on ci.ContactID =v.Id\n\t\tLEFT JOIN Contacts_OrganisationType t on v.OrganisationTypeID = t.ID\n--WHERE\n--\t\t\tcase_number = 3000079",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "case_number",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "case_number",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_created_date",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "case_created_date",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ContactType",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ContactType",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PostName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PostName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Title",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Title",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Salutation",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Salutation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Suffix",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Suffix",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "POBox",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "POBox",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address1",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address2",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "County",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "County",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Postcode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Postcode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Country",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Country",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TelephoneMobile",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TelephoneMobile",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Fax",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Fax",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrganisationName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OrganisationName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrganisationTypeName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OrganisationTypeName",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HorizonContactInformation",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "HorizonContactInfo",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "HorizonContactInformation.csv"
						}
					}
				]
			},
			{
				"name": "Raw to Std NSIP Data",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Hzn to Raw NSIP Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_raw_to_std",
						"type": "NotebookReference"
					},
					"parameters": {
						"source_folder": {
							"value": "Horizon",
							"type": "string"
						},
						"specific_file": {
							"value": "NSIPData",
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Raw to Std Contact Information",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Hzn to Raw Contact Information",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_raw_to_std",
						"type": "NotebookReference"
					},
					"parameters": {
						"source_folder": {
							"value": "Horizon",
							"type": "string"
						},
						"specific_file": {
							"value": "HorizonContactInformation",
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Harmonised to Curated",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Std to Hrm NSIP Data",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Std to Hrm Contact Information",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If New Data in Raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "nsip_entity_message",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"folder": {
			"name": "nsip project"
		},
		"annotations": []
	}
}