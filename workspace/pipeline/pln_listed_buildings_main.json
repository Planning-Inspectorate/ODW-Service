{
	"name": "pln_listed_buildings_main",
	"properties": {
		"activities": [
			{
				"name": "Src to Raw",
				"description": "Source to Raw",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "0_Listed_Buildings_API_to_RAW",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Raw to Std",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Src to Raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.1:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_load_listed_buildings_to_standardised",
						"type": "NotebookReference"
					},
					"parameters": {
						"date_folder": {
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Std to Hrm",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Raw to Std",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.1:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_load_listed_buildings_to_harmonised",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Record ListedBuilding Failure",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Src to Raw",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Fail",
						"PipelineName": {
							"value": "@activity('Src to Raw').Output.pipelineName",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@activity('Src to Raw').Output.pipelineRunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@activity('Src to Raw').ExecutionStartTime",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@activity('Src to Raw').ExecutionEndTime",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@activity('Src to Raw').Error.message",
							"type": "Expression"
						},
						"StatusMessage": "Listed Building Src to Raw Failed",
						"PipelineTriggeredbyPipelineName": {
							"value": "@activity('Src to Raw').PipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@activity('Src to Raw').PipelineRunId",
							"type": "Expression"
						},
						"PipelineExecutionTimeInSec": {
							"value": "@activity('Src to Raw').Duration",
							"type": "Expression"
						},
						"ActivityType": {
							"value": "@activity('Src to Raw').ActivityType",
							"type": "Expression"
						},
						"DurationSeconds": {
							"value": "@activity('Src to Raw').Duration",
							"type": "Expression"
						},
						"StatusCode": {
							"value": "@activity('Src to Raw').StatusCode",
							"type": "Expression"
						}
					}
				}
			}
		],
		"folder": {
			"name": "listed buildings"
		},
		"annotations": []
	}
}