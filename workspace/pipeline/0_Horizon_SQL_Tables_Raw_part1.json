{
	"name": "0_Horizon_SQL_Tables_Raw_part1",
	"properties": {
		"activities": [
			{
				"name": "Horizon_BIS_SpecialistCoastalAccess",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistCoastalAccess into ODW Raw",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistCoastalAccess"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistCoastalAccess.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Admissible",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Admissible",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "NEResponseReceived",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "NEResponseReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateNEResponseReceived",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateNEResponseReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "StrikeAFairBalance",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "StrikeAFairBalance",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecCoastalAccess",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistCoastalAccess.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_BIS_SpecialistEnvironment",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistEnvironment into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCoastalAccess",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistEnvironment"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistEnvironment.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AppealDeadline",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "AppealDeadline",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Acknowledged",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "Acknowledged",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "NotificationOfSV",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "NotificationOfSV",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PADueDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "PADueDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PADate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "PADate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CaseFileDocumentsDue",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CaseFileDocumentsDue",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ReportDue",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ReportDue",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateDueInOGDSLADate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateDueInOGDSLADate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateSentToOGDCouncil",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateSentToOGDCouncil",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "F17ACIR1Received",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "F17ACIR1Received",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SLADateMet",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "SLADateMet",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfNFA",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfNFA",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfTargetDateOnINT4CToChartHOrI",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfTargetDateOnINT4CToChartHOrI",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DocumentsDue",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DocumentsDue",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DocumentsReceived",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DocumentsReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateDueInPINS",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateDueInPINS",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "InspectorEstimatedDateAfterInquiryClose",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "InspectorEstimatedDateAfterInquiryClose",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AchievedTarget",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "AchievedTarget",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PrelimDocumentsInfo",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "PrelimDocumentsInfo",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PrelimDocumentsDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "PrelimDocumentsDate",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecEnvironment",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistEnvironment.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_BIS_SpecialistHighCourt",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistHighCourt into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistEnvironment",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistHighCourt"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistHighCourt.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateNoticeOfMotionReceived",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateNoticeOfMotionReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TSOLReference",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TSOLReference",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateNoticeOfMotionSentToInspector",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateNoticeOfMotionSentToInspector",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateInspectorsCommentsReceived",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateInspectorsCommentsReceived",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateCaseFileSentToLegal",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateCaseFileSentToLegal",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DatePINS1CommentsSentToLegal",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DatePINS1CommentsSentToLegal",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Judgement",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Judgement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateofJudgement",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateofJudgement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "FileReturnedForReDetermination",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "FileReturnedForReDetermination",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecHighCourt",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistHighCourt.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_BIS_SpecialistCaseString",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistCaseString into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistHighCourt",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistCaseStrings"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistCaseString.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Act",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Act",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AppealAgainst",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AppealAgainst",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ApplicationSubtype",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ApplicationSubtype",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DECCREF",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DECCREF",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DecisionClearForDespatch",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DecisionClearForDespatch",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "EPRType",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "EPRType",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "NFA",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "NFA",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OMAStance",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OMAStance",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Regulation",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Regulation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Regulator",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Regulator",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Sch6Notice",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Sch6Notice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Section",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Section",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SLADateMet",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "SLADateMet",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TargetDateMet",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TargetDateMet",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecCaseString",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistCaseString.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_BIS_SpecialistCaseDates",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistCaseDates into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCaseString",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistCaseDates"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistCaseDates.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateCostsReportDespatched",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateCostsReportDespatched",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateDecisionReportReceivedInPINS",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateDecisionReportReceivedInPINS",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DatePublicationProcedureCompleted",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DatePublicationProcedureCompleted",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateReturnedFromReader",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateReturnedFromReader",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateSentToReader",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateSentToReader",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrderRejectedOrReturned",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "OrderRejectedOrReturned",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecCaseDates",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistCase-Dates.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_SpecialistRecharge",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistRecharge into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCaseDates",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistRecharge"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistRecharge.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "RechargedTo",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "RechargedTo",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CR1FormRaised",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CR1FormRaised",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CR1FormComplete",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CR1FormComplete",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Amount",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Amount",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SAP5FormRaised",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "SAP5FormRaised",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Comment",
									"type": "String",
									"physicalType": "ntext"
								},
								"sink": {
									"name": "Comment",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecRecharge",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistRecharge.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_SpecialistPurchaseNotice",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistPurchaseNotice into ODW RAW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistRecharge",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistPurchaseNotice"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistPurchaseNotice.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TypeOfNotice",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TypeOfNotice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "NoticeReceivedFromLPA",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "NoticeReceivedFromLPA",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfPurchaseNotice",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfPurchaseNotice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateOfResponseNotice",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateOfResponseNotice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ExpiryDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ExpiryDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProposalLetterSent",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ProposalLetterSent",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "InquiryHearingRequested",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "InquiryHearingRequested",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "FileToInspector",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "FileToInspector",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "FileReturned",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "FileReturned",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecPurchaseNotice",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistPurchaseNotice.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_CommonLand",
				"description": "Ingestion of Horizon_vw_BIS_CommonLand into ODW RAW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistPurchaseNotice",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_CommonLand"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'CommonLand.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "NameOfCommonOrVillageGreen",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "NameOfCommonOrVillageGreen",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_CommonLand",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "CommonLand.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_SpecialistModifications",
				"description": "Ingestion of Horizon_vw_BIS_SpecialistModifications into ODW RAW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_CommonLand",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_SpecialistModifications"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SpecialistModifcations.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ModifyDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifyDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ModificationEntry",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ModificationEntry",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ModificationNumber",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ModificationNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateProposedModsAdvertised",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateProposedModsAdvertised",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateObjectionPeriodEnds",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateObjectionPeriodEnds",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProcedureConfirmedStartDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ProcedureConfirmedStartDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateLocalInquiryRequested",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateLocalInquiryRequested",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LastSittingDay",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "LastSittingDay",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateToReader",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateToReader",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateReturnedFromReader",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateReturnedFromReader",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DecisionOrRecommendation",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DecisionOrRecommendation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ReceiptDateOfDecision",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ReceiptDateOfDecision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "DateDecisionDespatched",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "DateDecisionDespatched",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Reader",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Reader",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_SpecMods",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SpecialistModifications.csv"
						}
					}
				]
			},
			{
				"name": "Horizon_AdditionalFields",
				"description": "Ingestion of Horizon_vw_BIS_AdditionalFields into ODW Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistModifications",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_AdditionalFields"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'AdditionalFields.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "StandardPriority",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "StandardPriority",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ImportantInformation",
									"type": "String",
									"physicalType": "ntext"
								},
								"sink": {
									"name": "ImportantInformation",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HZN_AdditionalFields",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_Tables_Data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "AdditionalFields.csv"
						}
					}
				]
			},
			{
				"name": "SpecialistCoastaAccessFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistCoastalAccess into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCoastalAccess",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Ingestion of Horizon_vw_BIS_SpecialistCoastalAccess into ODW Raw has failed",
					"errorCode": "SpecCoastalAccessFail1"
				}
			},
			{
				"name": "SpecialistEnvironmentFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistEnvironment into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistEnvironment",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistEnvironment into ODW Raw has failed",
					"errorCode": "SpecEnvironmentFail1"
				}
			},
			{
				"name": "SpecialistHighCourtFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistHighCourt into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistHighCourt",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistHighCourt into ODW Raw has failed",
					"errorCode": "SpecHighCourtFail1"
				}
			},
			{
				"name": "SpecialistCaseStringFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistCaseString into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCaseString",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistCaseString into ODW Raw has failed",
					"errorCode": "SpecialistCaseStringFail1"
				}
			},
			{
				"name": "SpecialistCaseDatesFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistCaseDates into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_BIS_SpecialistCaseDates",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistCaseDates into ODW Raw has failed",
					"errorCode": "SpecialistCaseDates1"
				}
			},
			{
				"name": "SpecialistRechargeFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistRecharge into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistRecharge",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistRecharge into ODW Raw has failed",
					"errorCode": "SpecialistRechargeFail1"
				}
			},
			{
				"name": "SpecialistPurchaseNoticeFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistRecharge into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistPurchaseNotice",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistPurchaseNotice into ODW Raw has failed",
					"errorCode": "SpecialistPurchaseNoticeFail1"
				}
			},
			{
				"name": "CommonLandFail1",
				"description": "The Ingestion of Horizon_vw_BIS_CommmonLand into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_CommonLand",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_CommonLand into ODW Raw has failed",
					"errorCode": "CommonLandFail1"
				}
			},
			{
				"name": "SpecialistModifcationsFail1",
				"description": "The Ingestion of Horizon_vw_BIS_SpecialistModifcations into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_SpecialistModifications",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_SpecialistModifcations into ODW Raw has failed",
					"errorCode": "SpecialistModifcationsFail1"
				}
			},
			{
				"name": "AdditionalFieldsFail1",
				"description": "The Ingestion of Horizon_vw_BIS_AdditionalFields into ODW Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon_AdditionalFields",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The Ingestion of Horizon_vw_BIS_AdditionalFields into ODW Raw has failed",
					"errorCode": "AdditionalFieldsFail1"
				}
			},
			{
				"name": "Logging Failed Activity-1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistCoastaAccessFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistCoastaAccessFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-2",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistEnvironmentFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistEnvironmentFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-3",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistHighCourtFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistHighCourtFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-4",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistCaseStringFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistCaseStringFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-5",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistCaseDatesFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistCaseDatesFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-6",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistRechargeFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistRechargeFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-7",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistPurchaseNoticeFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistPurchaseNoticeFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-8",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "CommonLandFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('CommonLandFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-9",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "SpecialistModifcationsFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('SpecialistModifcationsFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-10",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "AdditionalFieldsFail1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('AdditionalFieldsFail1').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"folder": {
			"name": "casework/layers/0-raw"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-19T13:05:36Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}