{
	"name": "pln_master",
	"properties": {
		"activities": [
			{
				"name": "Record pipeline starting",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "Start",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": "",
							"type": "string"
						},
						"StatusMessage": {
							"value": "",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Record moving on to loading Horizon data",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Record pipeline starting",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "OnProgress",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": "",
							"type": "string"
						},
						"StatusMessage": {
							"value": "Progressing to load Horizon data",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Load Horizon data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Record moving on to loading Horizon data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_horizon",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Record moving on to loading service bus data",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Load Horizon data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "OnProgress",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": "",
							"type": "string"
						},
						"StatusMessage": {
							"value": "Progressing to load Service Bus data",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Get service bus feeds",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Record moving on to loading service bus data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_get_service_bus_feeds",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true
					}
				}
			},
			{
				"name": "Service bus loads",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get service bus feeds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@json(activity('Get service bus feeds').output.status.Output.result.exitValue)",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get config",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "Record starting service bus stage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_utils_get_pipeline_config",
									"type": "NotebookReference"
								},
								"parameters": {
									"system_name": {
										"value": "Service bus",
										"type": "string"
									},
									"Object": {
										"value": {
											"value": "@string(item())",
											"type": "Expression"
										},
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "pinssynspodw",
									"type": "BigDataPoolReference"
								},
								"conf": {
									"spark.dynamicAllocation.enabled": true
								}
							}
						},
						{
							"name": "Record starting service bus stage",
							"type": "SynapseNotebook",
							"dependsOn": [
								{
									"activity": "Random wait to allow parallelism",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_utils_log_stage",
									"type": "NotebookReference"
								},
								"parameters": {
									"Stage": {
										"value": "OnProgress",
										"type": "string"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "string"
									},
									"Inserts": {
										"value": "0",
										"type": "int"
									},
									"Updates": {
										"value": "0",
										"type": "int"
									},
									"Deletes": {
										"value": "0",
										"type": "int"
									},
									"ErrorMessage": {
										"value": "",
										"type": "string"
									},
									"StatusMessage": {
										"value": {
											"value": "@concat('Progressing to load service bus: ', item())",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineTriggerID": {
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineTriggerName": {
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineTriggerType": {
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineTriggeredbyPipelineName": {
										"value": {
											"value": "@pipeline()?.TriggeredByPipelineName",
											"type": "Expression"
										},
										"type": "string"
									},
									"PipelineTriggeredbyPipelineRunID": {
										"value": {
											"value": "@pipeline()?.TriggeredByPipelineRunId",
											"type": "Expression"
										},
										"type": "string"
									},
									"ActivityType": {
										"value": "Pipeline",
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "pinssynspodw",
									"type": "BigDataPoolReference"
								},
								"conf": {
									"spark.dynamicAllocation.enabled": true,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"numExecutors": null
							}
						},
						{
							"name": "Check if item enabled",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get config",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Get config').output.status.Output.result.exitValue, '[True]')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Record relevant reps warning",
										"type": "SynapseNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "py_utils_log_stage",
												"type": "NotebookReference"
											},
											"parameters": {
												"Stage": {
													"value": "Warning",
													"type": "string"
												},
												"PipelineName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "string"
												},
												"Inserts": {
													"value": "0",
													"type": "int"
												},
												"Updates": {
													"value": "0",
													"type": "int"
												},
												"Deletes": {
													"value": "0",
													"type": "int"
												},
												"ErrorMessage": {
													"value": {
														"value": "@concat('Service bus item disabled: ', item())",
														"type": "Expression"
													},
													"type": "string"
												},
												"StatusMessage": {
													"value": "Warning",
													"type": "string"
												},
												"PipelineTriggerID": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggerName": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggerType": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggeredbyPipelineName": {
													"value": {
														"value": "@pipeline()?.TriggeredByPipelineName",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggeredbyPipelineRunID": {
													"value": {
														"value": "@pipeline()?.TriggeredByPipelineRunId",
														"type": "Expression"
													},
													"type": "string"
												},
												"ActivityType": {
													"value": "Pipeline",
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "pinssynspodw",
												"type": "BigDataPoolReference"
											},
											"conf": {
												"spark.dynamicAllocation.enabled": true,
												"spark.dynamicAllocation.minExecutors": null,
												"spark.dynamicAllocation.maxExecutors": null
											},
											"numExecutors": null
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Record loading service bus data",
										"type": "SynapseNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "py_utils_log_stage",
												"type": "NotebookReference"
											},
											"parameters": {
												"Stage": {
													"value": "OnProgress",
													"type": "string"
												},
												"PipelineName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "string"
												},
												"Inserts": {
													"value": "0",
													"type": "int"
												},
												"Updates": {
													"value": "0",
													"type": "int"
												},
												"Deletes": {
													"value": "0",
													"type": "int"
												},
												"ErrorMessage": {
													"value": "",
													"type": "string"
												},
												"StatusMessage": {
													"value": {
														"value": "@concat('Processing: ', item())",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggerID": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggerName": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggerType": {
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggeredbyPipelineName": {
													"value": {
														"value": "@pipeline()?.TriggeredByPipelineName",
														"type": "Expression"
													},
													"type": "string"
												},
												"PipelineTriggeredbyPipelineRunID": {
													"value": {
														"value": "@pipeline()?.TriggeredByPipelineRunId",
														"type": "Expression"
													},
													"type": "string"
												},
												"ActivityType": {
													"value": "Pipeline",
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "pinssynspodw",
												"type": "BigDataPoolReference"
											},
											"conf": {
												"spark.dynamicAllocation.enabled": true,
												"spark.dynamicAllocation.minExecutors": null,
												"spark.dynamicAllocation.maxExecutors": null
											},
											"numExecutors": null
										}
									},
									{
										"name": "Get entity_name",
										"type": "SynapseNotebook",
										"dependsOn": [
											{
												"activity": "Record loading service bus data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "py_utils_get_service_bus_config",
												"type": "NotebookReference"
											},
											"parameters": {
												"system_name": {
													"value": "Service bus",
													"type": "string"
												},
												"Object": {
													"value": {
														"value": "@string(item())",
														"type": "Expression"
													},
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "pinssynspodw",
												"type": "BigDataPoolReference"
											},
											"conf": {
												"spark.dynamicAllocation.enabled": true
											}
										}
									},
									{
										"name": "Execute Pipeline1",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Get entity_name",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pln_service_bus",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"entity_name_input": {
													"value": "@activity('Get entity_name').output.status.Output.result.exitValue",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Random wait to allow parallelism",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_utils_random_sleep",
									"type": "NotebookReference"
								},
								"snapshot": true
							}
						}
					]
				}
			},
			{
				"name": "Record horizon failure",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Load Horizon data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('Load Horizon data').Error.message ",
								"type": "Expression"
							},
							"type": "string"
						},
						"StatusMessage": {
							"value": "Failed",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Record service bus failure",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Service bus loads",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('Service bus loads').Error.message ",
								"type": "Expression"
							},
							"type": "string"
						},
						"StatusMessage": {
							"value": "Failed",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Record moving on to loading curated",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Service bus loads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_log_stage",
						"type": "NotebookReference"
					},
					"parameters": {
						"Stage": {
							"value": "OnProgress",
							"type": "string"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"Inserts": {
							"value": "0",
							"type": "int"
						},
						"Updates": {
							"value": "0",
							"type": "int"
						},
						"Deletes": {
							"value": "0",
							"type": "int"
						},
						"ErrorMessage": {
							"value": "",
							"type": "string"
						},
						"StatusMessage": {
							"value": "Progressing to load data to curated",
							"type": "string"
						},
						"PipelineTriggerID": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineName",
								"type": "Expression"
							},
							"type": "string"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "string"
						},
						"ActivityType": {
							"value": "Pipeline",
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": true,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"variables": {
			"service_bus_feeds": {
				"type": "String"
			}
		},
		"folder": {
			"name": "utils/Master"
		},
		"annotations": []
	}
}