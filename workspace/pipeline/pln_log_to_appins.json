{
	"name": "pln_log_to_appins",
	"properties": {
		"activities": [
			{
				"name": "Log to App Ins",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Compile Body",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"url": "https://uksouth-1.in.applicationinsights.azure.com/v2/track",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"body": {
						"value": "@concat('{\"name\":\"AppEvents\",\"time\":\"', utcNow(), '\",\"iKey\":\"', variables('app_ins_ikey'), '\",\"data\":{\"baseType\":\"EventData\",\"baseData\":{\"name\":\"', pipeline().parameters.AppInsCustomEventName, '\",\"properties\":', variables('body'), '}}}'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Compile Body",
				"description": "Compiles the body from the params",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "If No iKey param",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "body",
					"value": {
						"value": "@concat('{\"Stage\":\"', pipeline().parameters.Stage, '\",',\n        '\"PipelineName\":\"', pipeline().parameters.PipelineName, '\",',\n        '\"PipelineRunID\":\"', pipeline().parameters.PipelineRunID, '\",',\n        '\"StartTime\":\"', pipeline().parameters.StartTime, '\",',\n        '\"EndTime\":\"', pipeline().parameters.EndTime, '\",',\n        '\"Inserts\":\"', string(pipeline().parameters.Inserts), '\",',\n        '\"Updates\":\"', string(pipeline().parameters.Updates), '\",',\n        '\"Deletes\":\"', string(pipeline().parameters.Deletes), '\",',\n        '\"ErrorMessage\":\"', uriComponentToString(replace(uriComponent(coalesce(if(greater(length(pipeline().parameters.ErrorMessage), 100), substring(pipeline().parameters.ErrorMessage, 0, 100), pipeline().parameters.ErrorMessage), '')), '%0A', '')), '\",',\n        '\"StatusMessage\":\"', pipeline().parameters.StatusMessage, '\",',\n        '\"PipelineTriggerID\":\"', pipeline().parameters.PipelineTriggerID, '\",',\n        '\"PipelineTriggerName\":\"', pipeline().parameters.PipelineTriggerName, '\",',\n        '\"PipelineTriggerType\":\"', pipeline().parameters.PipelineTriggerType, '\",',\n        '\"PipelineTriggeredbyPipelineName\":\"', pipeline().parameters.PipelineTriggeredbyPipelineName, '\",',\n        '\"PipelineTriggeredbyPipelineRunID\":\"', pipeline().parameters.PipelineTriggeredbyPipelineRunID, '\",',\n        '\"PipelineExecutionTimeInSec\":\"', pipeline().parameters.PipelineExecutionTimeInSec, '\",',\n        '\"ActivityType\":\"', pipeline().parameters.ActivityType, '\",',\n        '\"StatusCode\":\"', pipeline().parameters.StatusCode, '\",',\n        '\"DurationSeconds\":\"', pipeline().parameters.DurationSeconds, '\"}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If No iKey param",
				"description": "Retrieving iKey for app ins if not provided in params",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(pipeline().parameters.AppInsIKey)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set AppIns iKey2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "app_ins_ikey",
								"value": {
									"value": "@pipeline().parameters.AppInsIKey",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Get AppIns iKey",
							"description": "Get the application insights ikey for logging",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"url": {
									"value": "@concat('https://', if(equals(pipeline().DataFactory, 'pins-synw-odw-dev-uks'), 'pinskvsynwodwdevuks', if(equals(pipeline().DataFactory, 'pins-synw-odw-test-uks'), 'pinskvsynwodwtestuks', 'pinskvsynwodwproduks')), '.vault.azure.net/secrets/application-insights-connection-string?api-version=7.0')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://vault.azure.net"
								}
							}
						},
						{
							"name": "Set AppIns iKey",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get AppIns iKey",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": true,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "app_ins_ikey",
								"value": {
									"value": "@split(split(activity('Get AppIns iKey').output.value, ';')[0], '=')[1]",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Stage": {
				"type": "string"
			},
			"PipelineName": {
				"type": "string"
			},
			"PipelineRunID": {
				"type": "string"
			},
			"StartTime": {
				"type": "string"
			},
			"EndTime": {
				"type": "string"
			},
			"Inserts": {
				"type": "int",
				"defaultValue": 0
			},
			"Updates": {
				"type": "int",
				"defaultValue": 0
			},
			"Deletes": {
				"type": "int",
				"defaultValue": 0
			},
			"ErrorMessage": {
				"type": "string"
			},
			"StatusMessage": {
				"type": "string"
			},
			"PipelineTriggerID": {
				"type": "string"
			},
			"PipelineTriggerName": {
				"type": "string"
			},
			"PipelineTriggerType": {
				"type": "string"
			},
			"PipelineTriggeredbyPipelineName": {
				"type": "string"
			},
			"PipelineTriggeredbyPipelineRunID": {
				"type": "string"
			},
			"PipelineExecutionTimeInSec": {
				"type": "string"
			},
			"ActivityType": {
				"type": "string"
			},
			"DurationSeconds": {
				"type": "string"
			},
			"AppInsCustomEventName": {
				"type": "string",
				"defaultValue": "ODW_Master_Pipeline_Logs"
			},
			"StatusCode": {
				"type": "string"
			},
			"AppInsIKey": {
				"type": "string"
			}
		},
		"variables": {
			"body": {
				"type": "String",
				"defaultValue": "{\\\"name\\\":\\\"AppEvents\\\",\\\"time\\\":\\\"2025-03-13T22:42:37.3846543Z\\\",\\\"iKey\\\":\\\"c218a161-0476-4989-b29d-29fb063f6134\\\",\\\"data\\\":{\\\"baseType\\\":\\\"EventData\\\",\\\"baseData\\\":{\\\"name\\\":\\\"ODW_Master_Pipeline_Logs\\\",\\\"properties\\\":{\\\"Stage\\\":\\\"Fail\\\",\\\"PipelineName\\\":\\\"pln_horizon\\\",\\\"PipelineRunID\\\":\\\"2b2d15ef-c814-47cc-8c9b-c2e62e76b4fc\\\",\\\"StartTime\\\":\\\"2025-03-13T21:02:38.3886551Z\\\",\\\"EndTime\\\":\\\"2025-03-13T22:42:33.7473995Z\\\",\\\"Inserts\\\":\\\"0\\\",\\\"Updates\\\":\\\"0\\\",\\\"Deletes\\\":\\\"0\\\",\\\"ErrorMessage\\\":\\\"Operation on target Horizon Document metadata failed: Operation on target Raw to Std failed: ---------------------------------------------------------------------------Py4JJavaError                             Traceback (most recent call last)Cell In [109], line 51     48     mssparkutils.notebook.run('/utils/py_delete_table', 300, arguments={'db_name': 'odw_standardised_db', 'table_name': definition['Standardised_Table_Name']})     50 logInfo(f\\\"Ingesting {file.name}\\\")---> 51 (ingestion_failure, row_count) = ingest_adhoc(storage_account, definition, source_path, file.name, expected_from, expected_to, process_name, isMultiLine, dataAttribute)     52 logInfo(f\\\"Ingested {row_count} rows\\\")     54 if ingestion_failure:Cell In [75], line 85, in logging_to_appins.<locals>.wrapper(*args, **kwargs)     83 print(\\\"Logging Exception\\\")     84 logException(e)---> 85 raise eCell In [75], line 77, in logging_to_appins.<locals>.wrapper(*args, **kwargs)     75 logInfo(f\\\"function {func.__name__} called with args {signature}\\\")     76 try:---> 77     result = func(*args, **kwargs)     78     return result     79 except mssparkutils.handlers.notebookHandler.NotebookExit as e:Cell In [101], line 110, in ingest_adhoc(storage_account, definition, folder_path, filename, expected_from, expected_to, process_name, isMultilineJSON, dataAttribute)    108 # rows_raw = len(df.index)    109 rows_raw = sparkDF.count()--> 110 unmount_storage()    112 ### add date columns included with every standardised table    113 sparkDF = sparkDF.withColumn(\\\"ingested_datetime\\\",current_timestamp())File ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:336, in BaseRetrying.wraps.<locals>.wrapped_f(*args, **kw)    334 copy = self.copy()    335 wrapped_f.statistics = copy.statistics  # type: ignore[attr-defined]--> 336 return copy(f, *args, **kw)File ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:475, in Retrying.__call__(self, fn, *args, **kwargs)    473 retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)    474 while True:--> 475     do = self.iter(retry_state=retry_state)    476     if isinstance(do, DoAttempt):    477         try:File ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:376, in BaseRetrying.iter(self, retry_state)    374 result = None    375 for action in self.iter_state.actions:--> 376     result = action(retry_state)    377 return resultFile ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:418, in BaseRetrying._post_stop_check_actions.<locals>.exc_check(rs)    416 retry_exc = self.retry_error_cls(fut)    417 if self.reraise:--> 418     raise retry_exc.reraise()    419 raise retry_exc from fut.exception()File ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:185, in RetryError.reraise(self)    183 def reraise(self) -> t.NoReturn:    184     if self.last_attempt.failed:--> 185         raise self.last_attempt.result()    186     raise selfFile ~/cluster-env/clonedenv/lib/python3.10/concurrent/futures/_base.py:451, in Future.result(self, timeout)    449     raise CancelledError()    450 elif self._state == FINISHED:--> 451     return self.__get_result()    453 self._condition.wait(timeout)    455 if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:File ~/cluster-env/clonedenv/lib/python3.10/concurrent/futures/_base.py:403, in Future.__get_result(self)    401 if self._exception:    402     try:--> 403         raise self._exception    404     finally:    405         # Break a reference cycle with the exception in self._exception    406         self = NoneFile ~/cluster-env/clonedenv/lib/python3.10/site-packages/tenacity/__init__.py:478, in Retrying.__call__(self, fn, *args, **kwargs)    476 if isinstance(do, DoAttempt):    477     try:--> 478         result = fn(*args, **kwargs)    479     except BaseException:  # noqa: B902    480         retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]Cell In [75], line 85, in logging_to_appins.<locals>.wrapper(*args, **kwargs)     83 print(\\\"Logging Exception\\\")     84 logException(e)---> 85 raise eCell In [75], line 77, in logging_to_appins.<locals>.wrapper(*args, **kwargs)     75 logInfo(f\\\"function {func.__name__} called with args {signature}\\\")     76 try:---> 77     result = func(*args, **kwargs)     78     return result     79 except mssparkutils.handlers.notebookHandler.NotebookExit as e:Cell In [89], line 8, in unmount_storage(mount_point)      1 @retry(      2     wait=wait_fixed(3),      3     stop=stop_after_attempt(5),   (...)      6 @logging_to_appins      7 def unmount_storage(mount_point: str = '/temp_raw'):----> 8     mssparkutils.fs.unmount(mount_point)File ~/cluster-env/clonedenv/lib/python3.10/site-packages/notebookutils/mssparkutils/fs.py:45, in unmount(mountPoint, extraOptions)     44 def unmount(mountPoint, extraOptions={}):---> 45     return fs.unmount(mountPoint, extraOptions)File ~/cluster-env/clonedenv/lib/python3.10/site-packages/notebookutils/mssparkutils/handlers/fsHandler.py:163, in SynapseFSHandler.unmount(self, mountPoint, extraOptions)    161 def unmount(self, mountPoint, extraOptions={}):    162     self.check_types([(mountPoint, string_types), (extraOptions, dict)])--> 163     return self.fsutils.unmount(mountPoint, extraOptions)File ~/cluster-env/clonedenv/lib/python3.10/site-packages/py4j/java_gateway.py:1321, in JavaMember.__call__(self, *args)   1315 command = proto.CALL_COMMAND_NAME +\\\\   1316     self.command_header +\\\\   1317     args_command +\\\\   1318     proto.END_COMMAND_PART   1320 answer = self.gateway_client.send_command(command)-> 1321 return_value = get_return_value(   1322     answer, self.gateway_client, self.target_id, self.name)   1324 for temp_arg in temp_args:   1325     temp_arg._detach()File /opt/spark/python/lib/pyspark.zip/pyspark/sql/utils.py:190, in capture_sql_exception.<locals>.deco(*a, **kw)    188 def deco(*a: Any, **kw: Any) -> Any:    189     try:--> 190         return f(*a, **kw)    191     except Py4JJavaError as e:    192         converted = convert_exception(e.java_exception)File ~/cluster-env/clonedenv/lib/python3.10/site-packages/py4j/protocol.py:326, in get_return_value(answer, gateway_client, target_id, name)    324 value = OUTPUT_CONVERTER[type](answer[2:], gateway_client)    325 if answer[1] == REFERENCE_TYPE:--> 326     raise Py4JJavaError(    327         \\\"An error occurred while calling {0}{1}{2}.\\\\n\\\".    328         format(target_id, \\\".\\\", name), value)    329 else:    330     raise Py4JError(    331         \\\"An error occurred while calling {0}{1}{2}. Trace:\\\\n{3}\\\\n\\\".    332         format(target_id, \\\".\\\", name, value))Py4JJavaError: An error occurred while calling z:mssparkutils.fs.unmount.: com.microsoft.spark.notebook.msutils.UnMountOperationFailedException: Request failed with [{runOperationRollbackAction - c133c1b9-5c26-41ab-a1d2-45a694fdd8c3] Request failed with status code 400 error {\\\"error\\\":{\\\"innerError\\\":{\\\"correlationId\\\":\\\"4edb6261-a6f2-4529-8827-a710991d2dd2\\\",\\\"stackTrace\\\":\\\"System.InvalidOperationException: StartRollbackAction not valid in state RollbackFailed\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Operations.AbstractOperationState.StartRollbackAction() in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Operations\\\\\\\\AbstractOperationState.cs:line 86\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Operations.OperationStateMachine.StartRollbackActionExecution() in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Operations\\\\\\\\OperationStateMachine.cs:line 77\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Controllers.OperationsController.RollbackAction(String operationId) in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Controllers\\\\\\\\OperationsController.cs:line 212\\\"},\\\"code\\\":\\\"InvalidOperation\\\",\\\"message\\\":\\\"StartRollbackAction not valid in state RollbackFailed\\\"}}.\\tat com.microsoft.spark.notebook.msutils.impl.mount.MSFsMountUtilsImpl.tryDoUnMount(MSFsMountUtilsImpl.scala:204)\\tat com.microsoft.spark.notebook.msutils.impl.mount.MSFsMountUtilsImpl.$anonfun$unmount$1(MSFsMountUtilsImpl.scala:113)\\tat com.microsoft.spark.notebook.msutils.impl.mount.MSFsMountUtilsImpl$.doOpWithLock(MSFsMountUtilsImpl.scala:268)\\tat com.microsoft.spark.notebook.msutils.impl.mount.MSFsMountUtilsImpl.unmount(MSFsMountUtilsImpl.scala:113)\\tat com.microsoft.spark.notebook.msutils.impl.MSFsUtilsImpl._unmount(MSFsUtilsImpl.scala:208)\\tat com.microsoft.spark.notebook.msutils.impl.MSFsUtilsImpl.unmount(MSFsUtilsImpl.scala:748)\\tat mssparkutils.fs$.unmount(fs.scala:59)\\tat mssparkutils.fs.unmount(fs.scala)\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\tat java.lang.reflect.Method.invoke(Method.java:498)\\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\\tat py4j.Gateway.invoke(Gateway.java:282)\\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\\tat java.lang.Thread.run(Thread.java:750)Caused by: java.lang.Exception: Request failed with [{runOperationRollbackAction - c133c1b9-5c26-41ab-a1d2-45a694fdd8c3] Request failed with status code 400 error {\\\"error\\\":{\\\"innerError\\\":{\\\"correlationId\\\":\\\"4edb6261-a6f2-4529-8827-a710991d2dd2\\\",\\\"stackTrace\\\":\\\"System.InvalidOperationException: StartRollbackAction not valid in state RollbackFailed\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Operations.AbstractOperationState.StartRollbackAction() in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Operations\\\\\\\\AbstractOperationState.cs:line 86\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Operations.OperationStateMachine.StartRollbackActionExecution() in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Operations\\\\\\\\OperationStateMachine.cs:line 77\\\\n   at Microsoft.Analytics.Clusters.Services.HostResolver.Controllers.OperationsController.RollbackAction(String operationId) in C:\\\\\\\\__w\\\\\\\\1\\\\\\\\s\\\\\\\\Services\\\\\\\\NodeServices\\\\\\\\HostResolver\\\\\\\\Service\\\\\\\\Controllers\\\\\\\\OperationsController.cs:line 212\\\"},\\\"code\\\":\\\"InvalidOperation\\\",\\\"message\\\":\\\"StartRollbackAction not valid in state RollbackFailed\\\"}}.\\tat com.microsoft.spark.notebook.operations.clients.BaseServiceClient.executeRequest(BaseServiceClient.scala:27)\\tat com.microsoft.spark.notebook.operations.clients.OperationServiceClient.createOpRollbackAction(OperationServiceClient.scala:116)\\tat com.microsoft.spark.notebook.operations.clients.OperationServiceClient$.createOpRollbackAction(OperationServiceClient.scala:142)\\tat com.microsoft.spark.notebook.operations.BaseOperation.doRollbackAction(BaseOperation.scala:84)\\tat com.microsoft.spark.notebook.operations.BaseOperation.process(BaseOperation.scala:69)\\tat com.microsoft.spark.notebook.msutils.impl.mount.MSFsMountUtilsImpl.tryDoUnMount(MSFsMountUtilsImpl.scala:192)\\t... 18 more\\\",\\\"StatusMessage\\\":\\\"Failed\\\",\\\"PipelineTriggerID\\\":\\\"\\\",\\\"PipelineTriggerName\\\":\\\"\\\",\\\"PipelineTriggerType\\\":\\\"\\\",\\\"PipelineTriggeredbyPipelineName\\\":\\\"pln_master\\\",\\\"PipelineTriggeredbyPipelineRunID\\\":\\\"30fa23d4-68aa-4ef1-9d47-3c45121f345d\\\",\\\"PipelineExecutionTimeInSec\\\":\\\"01:39:55.3587444\\\",\\\"ActivityType\\\":\\\"ExecutePipeline\\\",\\\"StatusCode\\\":\\\"400\\\",\\\"DurationSeconds\\\":\\\"01:39:55.3587444\\\"}}}}"
			},
			"app_ins_ikey": {
				"type": "String"
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}