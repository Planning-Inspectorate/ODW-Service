{
	"name": "pln_run_function_app_unit_test",
	"properties": {
		"activities": [
			{
				"name": "Run Function Unit Test",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Get Function Secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": {
							"value": "@concat('py_unit_tests_',pipeline().parameters.function_name,'function')",
							"type": "Expression"
						},
						"type": "NotebookReference"
					},
					"parameters": {
						"url": {
							"value": {
								"value": "@activity('Get Function Secret').output.value",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Set ReturnCode Success",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Run Function Unit Test",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pipelineReturnValue",
					"value": [
						{
							"key": "ReturnCode",
							"value": {
								"type": "Int",
								"content": 0
							}
						}
					],
					"setSystemVariable": true
				}
			},
			{
				"name": "Set ReturnCode Fail",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Run Function Unit Test",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pipelineReturnValue",
					"value": [
						{
							"key": "ReturnCode",
							"value": {
								"type": "Int",
								"content": 1
							}
						}
					],
					"setSystemVariable": true
				}
			},
			{
				"name": "Get Function Secret URL",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_utils_get_keyvault",
						"type": "NotebookReference"
					},
					"parameters": {
						"secret_name": {
							"value": {
								"value": "@concat('function-url-', replace(pipeline().parameters.function_name, '-', ''))",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Get Function Secret",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Function Secret URL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@activity('Get Function Secret URL').output.status.Output.result.exitValue",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "PinsIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"function_name": {
				"type": "string"
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}