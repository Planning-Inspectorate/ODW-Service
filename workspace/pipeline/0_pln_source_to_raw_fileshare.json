{
	"name": "0_pln_source_to_raw_fileshare",
	"properties": {
		"description": "This is the top level of the source to raw pipeline for Fileshare files, currently being used for SAP HR files.\n\nDescription of the default parameters: \n-jsonschema: schema definition for the table to log the file transfer\n-db_name: the synapse database for the file transfer log table\n-table_name: the name of the table inside -db_name for the file transfer log table\n-target_container: the abfss:// file path container of the file transfer log table\n-target_folder: the folder within which the delta table will be located\n-akv_name: the name of the key vault containing the secret to obtain the connection string to the file share\n-secret_name: the name of the secret within akv_name containing the connection string to access the file share\n-kv_linked_service: the linked service name of the key vault akv_name\n-share_name: the name of the Azure Fileshare\n-directory_path: the path within the Azure Fileshare to identify all files within",
		"activities": [
			{
				"name": "source_to_raw_main",
				"description": "This notebook creates the table for the Azure Fileshare transfer logging if the Delta log table does not exist.\n\nThis notebook then generates the file paths from Azure Fileshare for the copy activity to copy into raw, for any new or modified files, based on existing information in the log table.",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_0_source_to_raw_hr_main",
						"type": "NotebookReference"
					},
					"parameters": {
						"jsonschema": {
							"value": {
								"value": "@json(pipeline().parameters.jsonschema)",
								"type": "Expression"
							},
							"type": "string"
						},
						"db_name": {
							"value": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"type": "string"
						},
						"table_name": {
							"value": {
								"value": "@pipeline().parameters.table_name",
								"type": "Expression"
							},
							"type": "string"
						},
						"target_container": {
							"value": {
								"value": "@pipeline().parameters.target_container",
								"type": "Expression"
							},
							"type": "string"
						},
						"target_folder": {
							"value": {
								"value": "@pipeline().parameters.target_folder",
								"type": "Expression"
							},
							"type": "string"
						},
						"akv_name": {
							"value": {
								"value": "@pipeline().parameters.akv_name",
								"type": "Expression"
							},
							"type": "string"
						},
						"secret_name": {
							"value": {
								"value": "@pipeline().parameters.secret_name",
								"type": "Expression"
							},
							"type": "string"
						},
						"kv_linked_service": {
							"value": {
								"value": "@pipeline().parameters.kv_linked_service",
								"type": "Expression"
							},
							"type": "string"
						},
						"share_name": {
							"value": {
								"value": "@pipeline().parameters.share_name",
								"type": "Expression"
							},
							"type": "string"
						},
						"directory_path": {
							"value": {
								"value": "@pipeline().parameters.directory_path",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "pinssynspodw",
						"type": "BigDataPoolReference"
					},
					"executorSize": null,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": null,
					"numExecutors": null
				}
			},
			{
				"name": "NewFilesCheck",
				"description": "True : If no new files are present in the Fileshare this is logged to the app insights instance.\n\nFalse: For any new files, the Copy activity starts",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "source_to_raw_main",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('source_to_raw_main').output.status.Output.result.exitValue, '[]')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CopySourceToRaw",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "0_pln_source_to_raw_fileshare_copy_activity",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"jsonschema": {
										"value": "@pipeline().parameters.jsonschema",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									},
									"akv_name": {
										"value": "@pipeline().parameters.akv_name",
										"type": "Expression"
									},
									"secret_name": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									},
									"kv_linked_service": {
										"value": "@pipeline().parameters.kv_linked_service",
										"type": "Expression"
									},
									"share_name": {
										"value": "@pipeline().parameters.share_name",
										"type": "Expression"
									},
									"AllPaths": {
										"value": "@split(activity('source_to_raw_main').output.status.Output.result.exitValue, ',,,')",
										"type": "Expression"
									},
									"directory_path": {
										"value": "@pipeline().parameters.directory_path",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "No_New_Files_Logging",
							"description": "Output of the previous notebook activity is \"[]\" which indicated that no new or modified files are present in the log table of files transferred from source to raw.",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "py_0_log_notebook_output",
									"type": "NotebookReference"
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "pinssynspodw",
									"type": "BigDataPoolReference"
								},
								"executorSize": null,
								"conf": {
									"spark.dynamicAllocation.enabled": null,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"driverSize": null,
								"numExecutors": null
							}
						}
					]
				}
			}
		],
		"parameters": {
			"jsonschema": {
				"type": "string",
				"defaultValue": "'{\"fields\": [{\"metadata\": {}, \"name\": \"Process_Date\", \"nullable\": false, \"type\": \"timestamp\"}, {\"metadata\": {}, \"name\": \"Filepath\", \"nullable\": false, \"type\": \"string\"}, {\"metadata\": {}, \"name\": \"File_Modified_Date\", \"nullable\": false, \"type\": \"timestamp\"}]}'"
			},
			"db_name": {
				"type": "string",
				"defaultValue": "odw_test_db"
			},
			"table_name": {
				"type": "string",
				"defaultValue": "datalabs_log"
			},
			"target_container": {
				"type": "string",
				"defaultValue": "abfss://odw-raw@pinsstodwdevuks9h80mb.dfs.core.windows.net/"
			},
			"target_folder": {
				"type": "string",
				"defaultValue": "config/datalabs_log_test/"
			},
			"akv_name": {
				"type": "string",
				"defaultValue": "pinskvsynwodwdevuks"
			},
			"secret_name": {
				"type": "string",
				"defaultValue": "data-lake-storage-account-connectionstring"
			},
			"kv_linked_service": {
				"type": "string",
				"defaultValue": "ls_kv"
			},
			"share_name": {
				"type": "string",
				"defaultValue": "source-to-raw-testing"
			},
			"directory_path": {
				"type": "string",
				"defaultValue": "ODW/HR/"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-11-01T08:31:03Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}