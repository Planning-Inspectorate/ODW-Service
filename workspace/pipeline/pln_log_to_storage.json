{
	"name": "pln_log_to_storage",
	"properties": {
		"activities": [
			{
				"name": "Check Stage",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.Stage, 'Completion')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Log Stage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT\n    0 AS LogId\n    ,'@{pipeline().parameters.PipelineName}' AS PipelineName                \n    ,'@{pipeline().parameters.PipelineRunID}' AS PipelineRunID\n    ,'@{pipeline().parameters.StartTime}' AS StartTime\n    ,'@{pipeline().parameters.EndTime}' AS EndTime\n    ,'@{pipeline().parameters.DurationSeconds}' AS DurationSeconds\n    ,'@{pipeline().parameters.Inserts}' AS Inserts\n    ,'@{pipeline().parameters.Updates}' AS Updates\n    ,'@{pipeline().parameters.Deletes}' AS Deletes\n    ,'@{pipeline().parameters.ErrorMessage}' AS ErrorMessage\n    ,'@{pipeline().parameters.StatusMessage}' AS StatusMessage\n    ,'@{pipeline().parameters.PipelineTriggerID}' AS PipelineTriggerID\n    ,'@{pipeline().parameters.PipelineTriggerName}' AS PipelineTriggerName\n    ,'@{pipeline().parameters.PipelineTriggerType}' AS PipelineTriggerType\n    ,'@{pipeline().parameters.PipelineTriggeredbyPipelineName}' AS PipelineTriggeredbyPipelineName\n    ,'@{pipeline().parameters.PipelineTriggeredbyPipelineRunID}' AS PipelineTriggeredbyPipelineRunID\n    ,'@{pipeline().parameters.PipelineExecutionTimeInSec}' AS PipelineExecutionTimeInSec\n    ,'@{pipeline().parameters.ActivityType}' AS ActivityType",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_odw_main_pipeline_logging",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_odw_main_pipeline_logs",
									"type": "DatasetReference"
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Log Completion",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT\n    0 AS LogId\n    ,PipelineName                \n    ,PipelineRunID\n    ,StartTime\n    ,CURRENT_TIMESTAMP AS EndTime\n    ,DATEDIFF(SECOND, StartTime, CURRENT_TIMESTAMP) AS DurationSeconds\n    ,'@{pipeline().parameters.Inserts}' AS Inserts\n    ,'@{pipeline().parameters.Updates}' AS Updates\n    ,'@{pipeline().parameters.Deletes}' AS Deletes\n    ,'@{pipeline().parameters.ErrorMessage}' AS ErrorMessage\n    ,CONCAT('Complete: ', '@{pipeline().parameters.StatusMessage}') AS StatusMessage\n    ,'@{pipeline().parameters.PipelineTriggerID}' AS PipelineTriggerID\n    ,'@{pipeline().parameters.PipelineTriggerName}' AS PipelineTriggerName\n    ,'@{pipeline().parameters.PipelineTriggerType}' AS PipelineTriggerType\n    ,'@{pipeline().parameters.PipelineTriggeredbyPipelineName}' AS PipelineTriggeredbyPipelineName\n    ,'@{pipeline().parameters.PipelineTriggeredbyPipelineRunID}' AS PipelineTriggeredbyPipelineRunID\n    ,'@{pipeline().parameters.PipelineExecutionTimeInSec}' AS PipelineExecutionTimeInSec\n    ,'@{pipeline().parameters.ActivityType}' AS ActivityType\n    FROM\n        pipeline_logs\n    WHERE\n        PipelineRunID = '@{pipeline().parameters.PipelineRunID}'\n        AND ActivityType = 'Pipeline'\n        AND StatusMessage = '@{pipeline().parameters.StatusMessage}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_odw_main_pipeline_logging",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_odw_main_pipeline_logs",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Add Log",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_main_pipeline_logs",
						"type": "DataFlowReference",
						"parameters": {
							"Stage": {
								"value": "'@{pipeline().parameters.Stage}'",
								"type": "Expression"
							},
							"PipelineName": {
								"value": "'@{pipeline().parameters.PipelineName}'",
								"type": "Expression"
							},
							"PipelineRunID": {
								"value": "'@{pipeline().parameters.PipelineRunID}'",
								"type": "Expression"
							},
							"StartTime": {
								"value": "'@{pipeline().parameters.StartTime}'",
								"type": "Expression"
							},
							"EndTime": {
								"value": "'@{pipeline().parameters.EndTime}'",
								"type": "Expression"
							},
							"Inserts": {
								"value": "@pipeline().parameters.Inserts",
								"type": "Expression"
							},
							"Updates": {
								"value": "@pipeline().parameters.Updates",
								"type": "Expression"
							},
							"Deletes": {
								"value": "@pipeline().parameters.Deletes",
								"type": "Expression"
							},
							"ErrorMessage": {
								"value": "'@{pipeline().parameters.ErrorMessage}'",
								"type": "Expression"
							},
							"StatusMessage": {
								"value": "'@{pipeline().parameters.StatusMessage}'",
								"type": "Expression"
							},
							"PipelineTriggerID": {
								"value": "'@{pipeline().parameters.PipelineTriggerID}'",
								"type": "Expression"
							},
							"PipelineTriggerName": {
								"value": "'@{pipeline().parameters.PipelineTriggerName}'",
								"type": "Expression"
							},
							"PipelineTriggerType": {
								"value": "'@{pipeline().parameters.PipelineTriggerType}'",
								"type": "Expression"
							},
							"PipelineTriggeredbyPipelineName": {
								"value": "'@{pipeline().parameters.PipelineTriggeredbyPipelineRunID}'",
								"type": "Expression"
							},
							"PipelineTriggeredbyPipelineRunID": {
								"value": "'@{pipeline().parameters.PipelineTriggeredbyPipelineName}'",
								"type": "Expression"
							},
							"PipelineExecutionTimeInSec": {
								"value": "'@{pipeline().parameters.PipelineExecutionTimeInSec}'",
								"type": "Expression"
							},
							"ActivityType": {
								"value": "'@{pipeline().parameters.ActivityType}'",
								"type": "Expression"
							},
							"DurationSeconds": {
								"value": "'@{pipeline().parameters.DurationSeconds}'",
								"type": "Expression"
							},
							"LogId": "0"
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"Stage": {
				"type": "string"
			},
			"PipelineName": {
				"type": "string"
			},
			"PipelineRunID": {
				"type": "string"
			},
			"StartTime": {
				"type": "string"
			},
			"EndTime": {
				"type": "string"
			},
			"Inserts": {
				"type": "int",
				"defaultValue": 0
			},
			"Updates": {
				"type": "int",
				"defaultValue": 0
			},
			"Deletes": {
				"type": "int",
				"defaultValue": 0
			},
			"ErrorMessage": {
				"type": "string"
			},
			"StatusMessage": {
				"type": "string"
			},
			"PipelineTriggerID": {
				"type": "string"
			},
			"PipelineTriggerName": {
				"type": "string"
			},
			"PipelineTriggerType": {
				"type": "string"
			},
			"PipelineTriggeredbyPipelineName": {
				"type": "string"
			},
			"PipelineTriggeredbyPipelineRunID": {
				"type": "string"
			},
			"PipelineExecutionTimeInSec": {
				"type": "string"
			},
			"ActivityType": {
				"type": "string"
			},
			"DurationSeconds": {
				"type": "string"
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}