{
	"name": "0_Raw_Checkmark_Data_part2",
	"properties": {
		"description": "this is a pipeline extension for the first part\n",
		"activities": [
			{
				"name": "Checkmark_Nsi",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table nsi",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.nsi"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'Nsi.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "name",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_nsi",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Nsi.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Outcome_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table outcome_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Nsi",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.outcome_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'OutcomeReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Checkmark_outcome_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "OutcomeReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Presentation_Accuracy_Detail_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table presentation_accuracy_detail_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Outcome_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.presentation_accuracy_detail_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'PresentationAccuracyDetailReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_presentation_accuracy_detail_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "PresentationAccuracyDetailReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Procedure_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table \n procedure_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Presentation_Accuracy_Detail_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.procedure_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'ProcedureReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_procedure_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "ProcedureReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Reading_Case",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table reading_case",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Procedure_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.reading_case"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'ReadingCase.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "case_reference",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "case_reference",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "inspector_email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "inspector_email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "inspector_name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "inspector_name",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reader_email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "reader_email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reader_name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "reader_name",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_level",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "case_level",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_submitted_by_inspector",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_submitted_by_inspector",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "event_date",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "event_date",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "type_of_reading",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "type_of_reading",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "procedure",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "procedure",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_target_date",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "case_target_date",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reading_status",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "reading_status",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "able_to_read_decision",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "able_to_read_decision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "advertisement",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "advertisement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "appeal_against_conditions",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "appeal_against_conditions",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "bespoke",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "bespoke",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_team_officer_email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "case_team_officer_email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_team_officer_name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "case_team_officer_name",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "costs_decision",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "costs_decision",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "green_belt",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "green_belt",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "kiosk",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "kiosk",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "linked",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "linked",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "neighbourhood_plan",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "neighbourhood_plan",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nsi_email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "nsi_email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nsi_name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "nsi_name",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "prior_approval",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "prior_approval",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reason_for_delay",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "reason_for_delay",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "redetermination",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "redetermination",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "secretary_of_state_report",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "secretary_of_state_report",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "spa_sac_eps",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "spa_sac_eps",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "special_category_data",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "special_category_data",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "specialisms",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "specialisms",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "telecommunications",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "telecommunications",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "urgent",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "urgent",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "amendments_received_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "amendments_received_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "able_to_check_amendments",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "able_to_check_amendments",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "amendments_cycles",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "amendments_cycles",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "amendments_target_date",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "amendments_target_date",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "amendments_timeliness_review_flag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "amendments_timeliness_review_flag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_amendments_checked",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_amendments_checked",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_amendments_received",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_amendments_received",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_cleared",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_cleared",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_decision_sent_for_issue",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_decision_sent_for_issue",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_read",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_read",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_read_started",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_read_started",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "decision_read",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "decision_read",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "delayed_amendments_submission",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "delayed_amendments_submission",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "delayed_submission",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "delayed_submission",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "document_version",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "document_version",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "document_version_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "document_version_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "final_decision_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "final_decision_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "notification_sent_flag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "notification_sent_flag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "on_hold_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "on_hold_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "on_hold_status",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "on_hold_status",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reading_complete_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "reading_complete_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reading_needed_flag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "reading_needed_flag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ready_for_issue",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "ready_for_issue",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "reason_for_amendments_delay",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "reason_for_amendments_delay",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "recall_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "recall_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "replacement_decision_flag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "replacement_decision_flag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "return_count",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "return_count",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "revised_decision_notification_needed",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "revised_decision_notification_needed",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "skim_read",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "skim_read",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "source",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "source",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "timeliness_review_flag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "timeliness_review_flag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "date_modified",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "date_modified",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_reading_case",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "ReadingCase.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Reading_Status_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table reading_status_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Case",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.reading_status_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'ReadingStatusReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_reading_status_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "ReadingStatusReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Reading_Type_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table \n reading_type_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Status_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.reading_type_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'ReadingTypeReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_reading_type_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "ReadingTypeReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Source_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table source_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Type_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.source_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'SourceReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_source_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "SourceReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Structure_Reasoning_Detail_Reference",
				"description": "This is ingesting data into ODW Raw from miPINS checkmark table structure_reasoning_detail_reference",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Checkmark_Source_Reference",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.structure_reasoning_detail_reference"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Checkmark', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'StructureReasoningDetailReference.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "value",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "value",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "checkmark_structure_reasoning_detail_reference",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "mipins_checkmark_data",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "StructureReasoningDetailReference.csv"
						}
					}
				]
			},
			{
				"name": "Checkmark_Nsi_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Nsi",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": " The ingestion of Checkmark Nsi data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Nsi"
				}
			},
			{
				"name": "Checkmark_Outcome_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Outcome_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Outcome Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Outcome_Reference"
				}
			},
			{
				"name": "Checkmark_Presentation_Accuracy_Detail_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Presentation_Accuracy_Detail_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Case data from MiPINS Checksum schema has failed",
					"errorCode": "0_Raw_Checkmark_Case_Data_Pipeline_Fail1"
				}
			},
			{
				"name": "Checkmark_Procedure_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Procedure_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Presentation Accuracy Detail Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Presentation_Accuracy_Detail_Reference"
				}
			},
			{
				"name": "Checkmark_Reading_Case_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Case",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Reading Case data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Reading_Case"
				}
			},
			{
				"name": "Checkmark_Reading_Status_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Status_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Reading Status Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Reading_Status_Reference_Fail"
				}
			},
			{
				"name": "Checkmark_Reading_Type_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Type_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Reading Type Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Reading_Type_Reference"
				}
			},
			{
				"name": "Checkmark_Source_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Source_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Source Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Source_Reference"
				}
			},
			{
				"name": "Logging Failed Activities-13",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Nsi_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Nsi_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-14",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Outcome_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Outcome_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-15",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Presentation_Accuracy_Detail_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Presentation_Accuracy_Detail_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-16",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Procedure_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Procedure_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-17",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Case_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Reading_Case_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-18",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Status_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Reading_Status_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-19",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Reading_Type_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Reading_Type_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-20",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Source_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Source_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Checkmark_Structure_Reasoning_Detail_Reference_Fail",
				"description": "The ingestion of Checkmark case data from MiPINS Checksum schema has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Checkmark_Structure_Reasoning_Detail_Reference",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of Checkmark Structure Reasoning Detail Reference data in 0_Raw_Checkmark_data pipeline has failed within Soruce to Raw ",
					"errorCode": "Checkmark_Structure_Reasoning_Detail_Reference"
				}
			},
			{
				"name": "Logging Failed Activities-21",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Checkmark_Structure_Reasoning_Detail_Reference_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Checkmark_Structure_Reasoning_Detail_Reference_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"folder": {
			"name": "archive/checkmark/layers/0-raw"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-19T13:05:48Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}