{
	"name": "raw_to_standardised",
	"properties": {
		"activities": [
			{
				"name": "Generate Schema",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Copy Source File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_generate_schema_script",
						"type": "NotebookReference"
					},
					"parameters": {
						"target_folder": {
							"value": "Horizon/",
							"type": "string"
						}
					},
					"snapshot": true
				}
			},
			{
				"name": "Copy Source File",
				"description": "Copies source file into schema_creation folder",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set SourceID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "raw_file",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "raw_file_copy",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Add Outstanding Entry",
				"description": "Adds Entry in odw_config_db.raw_to_std_outstanding_files table",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Generate Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "outstanding_files_add_entry",
						"type": "NotebookReference"
					},
					"parameters": {
						"jsonId": {
							"value": {
								"value": "@variables('source_id')",
								"type": "Expression"
							},
							"type": "int"
						},
						"year": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy')",
								"type": "Expression"
							},
							"type": "int"
						},
						"month": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'MM')",
								"type": "Expression"
							},
							"type": "int"
						},
						"day": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'dd')",
								"type": "Expression"
							},
							"type": "int"
						},
						"hour": {
							"value": "0",
							"type": "int"
						},
						"minute": {
							"value": "0",
							"type": "int"
						},
						"second": {
							"value": "0",
							"type": "int"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Set SourceID",
				"description": "Set this variable as the ID of the new record added in orchestration.json",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "source_id",
					"value": "82"
				}
			},
			{
				"name": "Create and Ingest",
				"description": "Creates standardised table and ingests data",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Add Outstanding Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_1_initial_run_raw_to_standardised_scheduling",
						"type": "NotebookReference"
					},
					"parameters": {
						"source_id": {
							"value": {
								"value": "@variables('source_id')",
								"type": "Expression"
							},
							"type": "int"
						}
					},
					"snapshot": true
				}
			},
			{
				"name": "py_1_initial_run_raw_to_standardised failed",
				"description": "py_1_initial_run_raw_to_standardised failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Create and Ingest",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "py_1_initial_run_raw_to_standardised failed",
					"errorCode": "py_1_initial_run_raw_to_standardised failed"
				}
			},
			{
				"name": "outstanding_files_add_entry failed",
				"description": "outstanding_files_add_entry failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Add Outstanding Entry",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "outstanding_files_add_entry failed",
					"errorCode": "outstanding_files_add_entry failed"
				}
			},
			{
				"name": "Generate Schema failed",
				"description": "Generate Schema failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Generate Schema",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Generate Schema failed",
					"errorCode": "Generate Schema failed"
				}
			},
			{
				"name": "Logging Failed Activities",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Generate Schema",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('All_Appeals_Data_Copy_Failure').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities_copy1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Create and Ingest",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('All_Appeals_Data_Copy_Failure').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities_copy2",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Add Outstanding Entry",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('All_Appeals_Data_Copy_Failure').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"variables": {
			"orchestration_sourceid": {
				"type": "String"
			},
			"source_id": {
				"type": "String"
			}
		},
		"annotations": []
	}
}