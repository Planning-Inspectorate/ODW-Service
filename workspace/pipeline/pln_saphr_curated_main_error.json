{
	"name": "pln_saphr_curated_main_error",
	"properties": {
		"activities": [
			{
				"name": "Record loading relevant reps data",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "OnProgress",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@formatDateTime(utcnow(), 'yyyy-MM-ddTHH:mm:ssZ')",
							"type": "Expression"
						},
						"StatusMessage": "Loading Sap HR Curated Layer",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "PBI_Personnel_Area",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Record loading relevant reps data",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "setharmonisedstarttime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_Personnel_Area",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_HR_Work_Contract",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "PBI_hr_cost_centre",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_Work_Contract",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_Organisation_unit",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_HR_Work_Contract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_Organisation_Unit",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_hr_grade",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "PBI_hr_gender",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_Grade",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_hr_gender",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "PBI_Personal_SubArea",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_gender",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_hr_cost_centre",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "PBI_hr_grade",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_cost_centre",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_payroll_area",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_Organisation_unit",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_hr_PayrollArea",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_fact_absence_all",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_payroll_area",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_fact_absence_all",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_hr_protected_data",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_fact_absence_all",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_HR_ProtectedData",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_Personal_SubArea",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "PBI_Personnel_Area",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_dim_HR_Personnel_SubArea",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_employee_details",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_hr_protected_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_Employee_Details",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "PBI_hr_Measures",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PBI_employee_details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "vw_hr_measures",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "record count",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_Personnel_Area",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_pa",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "setharmonisedstarttime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "harmonisedstarttime",
					"value": {
						"value": "@utcNow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "record count_psa",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_Personal_SubArea",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_copy2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_psa",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed_copy1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_psa",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message_psa",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count_psa",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_psa",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_psa",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "record count_gender",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_hr_gender",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_copy2_copy1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed_copy1_copy1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message_gender",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count_gender",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_gender",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "record count_gender_copy1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_hr_grade",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_gen",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed_copy1_copy1_copy1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_copy1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message_gender_copy1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count_gender_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_gender_copy1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_copy1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "record count_cost_centre",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_hr_cost_centre",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data__cost_centre",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_cost_centre",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed__cost_centre",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_cost_centre",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message_gender_cost_centre",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count_cost_centre",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_gender__cost",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_gender_cost_centre",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "record count_wc",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PBI_HR_Work_Contract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordCount",
					"value": {
						"value": "@string(json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).record_count)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised wc",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_wc",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "Completion",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"Inserts": {
							"value": "@variables('recordCount')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send Sap HR Harmonised failed_wc",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_wc",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Sap HR Harmonised Layer data load failed",
						"activityDuration": {
							"value": "@concat(string(div(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'H:', \nstring(mod(div(sub(ticks(formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:sss')),ticks(formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd HH:mm:sss'))),600000000),60)),'M:00s')",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "Sap HR Harmonised Master pipeline failed",
						"Message_subtitle": "Sap HR Harmonised feed failed"
					}
				}
			},
			{
				"name": "error message_wc",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "record count_wc",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "error_message",
					"value": {
						"value": "@json(activity('PBI_Personnel_Area').output.status.output.result.exitValue).error_message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Record completed Sap HR Harmonised data_wc",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "error message_wc",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "Fail",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@variables('harmonisedstarttime')",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@variables('error_message')",
							"type": "Expression"
						},
						"StatusMessage": "Sap HR Harrmonised Layer loaded",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"StatusCode": "400",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"webhook_url": {
				"type": "string"
			},
			"subscription_id": {
				"type": "string"
			},
			"resource_group": {
				"type": "string"
			},
			"starting_colour": {
				"type": "string"
			},
			"on_progress_colour": {
				"type": "string"
			},
			"failed_colour": {
				"type": "string"
			},
			"start_time": {
				"type": "string"
			},
			"starting_image": {
				"type": "string"
			},
			"progress_image": {
				"type": "string"
			},
			"warning_image": {
				"type": "string"
			},
			"failed_image": {
				"type": "string"
			},
			"warning_colour": {
				"type": "string"
			},
			"horizon_feed": {
				"type": "array"
			},
			"apps_insights_ikey": {
				"type": "string"
			}
		},
		"variables": {
			"execution_logs": {
				"type": "String"
			},
			"temp_var": {
				"type": "String"
			},
			"w": {
				"type": "String"
			},
			"errorMsg": {
				"type": "String"
			},
			"wait1": {
				"type": "Integer",
				"defaultValue": 1
			},
			"wait2": {
				"type": "Integer",
				"defaultValue": 2
			},
			"wait3": {
				"type": "Integer",
				"defaultValue": 3
			},
			"wait4": {
				"type": "Integer",
				"defaultValue": 4
			},
			"wait5": {
				"type": "Integer",
				"defaultValue": 5
			},
			"wait6": {
				"type": "Integer",
				"defaultValue": 6
			},
			"wait7": {
				"type": "Integer",
				"defaultValue": 7
			},
			"wait8": {
				"type": "Integer",
				"defaultValue": 8
			},
			"recordCount": {
				"type": "String"
			},
			"error_message": {
				"type": "String"
			},
			"harmonisedstarttime": {
				"type": "String"
			}
		},
		"folder": {
			"name": "saphr/layers/3-curated"
		},
		"annotations": []
	}
}