{
	"name": "pln_rest_api",
	"properties": {
		"activities": [
			{
				"name": "AIE document metadata",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Record loading Document metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_aie_document_data",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Record loading Document metadata",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": "OnProgress",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"StartTime": {
							"value": "@formatDateTime(utcnow(), 'yyyy-MM-ddTHH:mm:ssZ')",
							"type": "Expression"
						},
						"StatusMessage": "Loading Document metadata",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Listed Building Main completed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Listed Building Main",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "@if(or(equals(activity('Listed Building Main')?.Error?.Message, ''),equals(activity('Listed Building Main')?.Error?.Message, null)),'Successfully','Failed')",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@{if(or(equals(activity('Listed Building Main')?.Error?.Message, ''), equals(activity('Listed Building Main')?.Error?.Message, null)), ' ', activity('Listed Building Main')?.Error?.Message)}\n",
							"type": "Expression"
						},
						"StatusMessage": "Listed Building Main Failed",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Horizon EntraID",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Record loading Document metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "EntraID",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Listed Building Main",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Record loading Document metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_listed_buildings_main",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Send Listed Building Main faile",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Listed Building Main",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "Listed Building Main data failed",
						"activityDuration": {
							"value": "@concat(\n    string(div(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'H:', \n    string(mod(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'M:00s'\n)",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "ODW - Listed Building Main data failed",
						"Message_subtitle": {
							"value": "@split(activity('Listed Building Main')?.Error?.Message, ',')[2]",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send EntraID failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Horizon EntraID",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "EntraID  Data  failed ",
						"activityDuration": {
							"value": "@concat(\n    string(div(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'H:', \n    string(mod(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'M:00s'\n)",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "ODW - EntraID data failed",
						"Message_subtitle": {
							"value": "@split(activity('Horizon EntraID')?.Error?.Message, ',')[2]\n",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Send AIE document metadata failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "AIE document metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_utl_Send_Teams_Message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"dataFactorySubscription": {
							"value": "@pipeline().parameters.subscription_id",
							"type": "Expression"
						},
						"dataFactoryResourceGroup": {
							"value": "@pipeline().parameters.resource_group",
							"type": "Expression"
						},
						"pipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"teamsWebhookUrl": {
							"value": "@pipeline().parameters.webhook_url",
							"type": "Expression"
						},
						"activityName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"activityMessage": "AIE document metadata failed",
						"activityDuration": {
							"value": "@concat(\n    string(div(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'H:', \n    string(mod(div(sub(\n        ticks(formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:sss')),\n        ticks(formatDateTime(if(equals(pipeline().parameters.start_time, null), utcNow(), pipeline().parameters.start_time), 'yyyy-MM-dd HH:mm:sss'))\n    ), 600000000), 60)), 'M:00s'\n)\n",
							"type": "Expression"
						},
						"activityStatus": "Failed",
						"Colour": {
							"value": "@pipeline().parameters.failed_colour",
							"type": "Expression"
						},
						"Image": {
							"value": "@pipeline().parameters.failed_image",
							"type": "Expression"
						},
						"Message_title": "ODW - AIE data failed",
						"Message_subtitle": {
							"value": "@split(activity('AIE document metadata')?.Error?.Message, ',')[2]",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Record Horizon EntraID Completed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Horizon EntraID",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "@if(or(equals(activity('Horizon EntraID')?.Error?.Message, ''),equals(activity('Horizon EntraID')?.Error?.Message, null)),'Successfully','Failed')\n",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@{if(or(equals(activity('Horizon EntraID')?.Error?.Message, ''), equals(activity('Horizon EntraID')?.Error?.Message, null)), ' ', activity('Horizon EntraID')?.Error?.Message)}\n",
							"type": "Expression"
						},
						"StatusMessage": "Horizon EntraID Failed",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "AIE document metadata completed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "AIE document metadata",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pln_log_to_appins",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Stage": {
							"value": "@if(or(equals(activity('AIE document metadata')?.Error?.Message, ''),equals(activity('AIE document metadata')?.Error?.Message, null)),'Successfully','Failed')\n",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"PipelineRunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@{if(or(equals(activity('AIE document metadata')?.Error?.Message, ''), equals(activity('AIE document metadata')?.Error?.Message, null)), ' ', activity('AIE document metadata')?.Error?.Message)}\n",
							"type": "Expression"
						},
						"StatusMessage": "AIE document metadata Failed",
						"PipelineTriggerID": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"PipelineTriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"PipelineTriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineName": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"PipelineTriggeredbyPipelineRunID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"ActivityType": "Pipeline",
						"AppInsIKey": {
							"value": "@pipeline().parameters.apps_insights_ikey",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"webhook_url": {
				"type": "string"
			},
			"subscription_id": {
				"type": "string"
			},
			"resource_group": {
				"type": "string"
			},
			"starting_colour": {
				"type": "string"
			},
			"on_progress_colour": {
				"type": "string"
			},
			"failed_colour": {
				"type": "string"
			},
			"start_time": {
				"type": "string"
			},
			"starting_image": {
				"type": "string"
			},
			"progress_image": {
				"type": "string"
			},
			"warning_image": {
				"type": "string"
			},
			"failed_image": {
				"type": "string"
			},
			"warning_colour": {
				"type": "string"
			},
			"apps_insights_ikey": {
				"type": "string"
			}
		},
		"variables": {
			"execution_logs": {
				"type": "String"
			},
			"temp_var": {
				"type": "String"
			},
			"w": {
				"type": "String"
			},
			"errorMsg": {
				"type": "String"
			},
			"wait1": {
				"type": "Integer",
				"defaultValue": 1
			},
			"wait2": {
				"type": "Integer",
				"defaultValue": 2
			},
			"wait3": {
				"type": "Integer",
				"defaultValue": 3
			},
			"wait4": {
				"type": "Integer",
				"defaultValue": 4
			},
			"wait5": {
				"type": "Integer",
				"defaultValue": 5
			},
			"wait6": {
				"type": "Integer",
				"defaultValue": 6
			},
			"wait7": {
				"type": "Integer",
				"defaultValue": 7
			},
			"wait8": {
				"type": "Integer",
				"defaultValue": 8
			}
		},
		"folder": {
			"name": "API"
		},
		"annotations": []
	}
}