{
	"name": "pln_pipeline_result_email_notifcation",
	"properties": {
		"description": "Submit an email notification to notify engineers about a pipeline run result",
		"activities": [
			{
				"name": "If Prod Environment",
				"description": "Only run against the prod environment",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set Environment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(\n    variables('environment'),\n    'dev'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Send email",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set titleColour",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"url": {
									"value": "@variables('logicAppUrl')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"body": {
									"value": "{\n    \"pipelineName\": \"@{pipeline()?.TriggeredByPipelineName}\",\n    \"status\": \"@{variables('pipelineStatus')}\",\n    \"runId\": \"@{pipeline()?.TriggeredByPipelineRunId}\",\n    \"timestamp\": \"@{formatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ss')}\",\n    \"dataFactory\": \"@{pipeline().DataFactory}\",\n    \"environment\": \"@{variables('environment')}\",\n    \"titleColour\": \"@{variables('titleColour')}\"\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set pipelineStatus",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set logicAppUrl",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "pipelineStatus",
								"value": {
									"value": "@if(\n    bool(pipeline().parameters.pipelineSucceeded),\n    'Succeeded',\n    'Failed'\n)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set logicAppUrl",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "logicAppUrl",
								"value": "https://prod-50.uksouth.logic.azure.com:443/workflows/edf644dce8e24b96b2684b825615faa6/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=mPuvKYA7JLK8hX30pXXCmoAxgubekmoYhzKhwkcT8Lw"
							}
						},
						{
							"name": "Set titleColour",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set pipelineStatus",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "titleColour",
								"value": {
									"value": "@if(\n    bool(pipeline().parameters.pipelineSucceeded),\n    '#57a301',\n    '#d93025'\n)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set Environment",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "environment",
					"value": {
						"value": "@split(pipeline().DataFactory, '-')[3]",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"pipelineSucceeded": {
				"type": "bool",
				"defaultValue": true
			}
		},
		"variables": {
			"pipelineStatus": {
				"type": "String"
			},
			"logicAppUrl": {
				"type": "String"
			},
			"titleColour": {
				"type": "String"
			},
			"environment": {
				"type": "String"
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}