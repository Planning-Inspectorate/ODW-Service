{
	"name": "pln_ref_appeal_attribute_matrix",
	"properties": {
		"description": "Pipeline to gather the appeal-attribute-matrix csv from data labs and ingest into RAW",
		"activities": [
			{
				"name": "Get Metadata Of CSVs",
				"description": "Getting the Metadata of the csv file for appeal-attribute-matrix",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "appeal_attribute_matrix",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureFileStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "For Each Appeal Attribute Matrix",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata Of CSVs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata Of CSVs').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy File",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Wait",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureFileStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "appeal_attribute_matrix_copier",
									"type": "DatasetReference",
									"parameters": {
										"FileName": "@item().name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "appeal_attribute_matrix_raw",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": {
									"value": "@rand(1, 10)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "create_standardised_table",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "For Each Appeal Attribute Matrix",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ref_appeal_attribute_matrix",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"variables": {
			"env": {
				"type": "String"
			},
			"app_ins_ikey": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Releases/16.0.2"
		},
		"annotations": []
	}
}