{
	"name": "0_Raw_Case_Reference_Tables",
	"properties": {
		"description": "This pipeline gets reference data from the horizon source system",
		"activities": [
			{
				"name": "VW_BIS_Inspector_Cases",
				"description": "Getting data from [otcs].[dbo].[Horizon_vw_BIS_Inspector_Cases] which provides the Inspector/Case relationship",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Horizon_vw_BIS_Inspector_Cases"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'<FileName>'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AppealRefNumber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CaseReference",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "InspectorName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "InspectorName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ParentKeyID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ParentKeyID",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "VW_Inspector_Cases",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Horizon_VW_BIS_Inspector_Cases",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "VW_BIS_Inspector_Cases.csv"
						}
					}
				]
			},
			{
				"name": "Contacts_Organisation",
				"description": "Getting data from [otcs].[dbo].[Contacts_Organisation]] which provides the Inspector/Case relationship",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "VW_BIS_Inspector_Cases",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.Contacts_Organisation"
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Name",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrganisationTypeID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OrganisationTypeID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "POBox",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "POBox",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address1",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address2",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "County",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "County",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PostCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PostCode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Country",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Country",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Fax",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Fax",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PublishFlag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "PublishFlag",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LastUpdatedByID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "LastUpdatedByID",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Contacts_Organisation",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Contacts_Organisation_LPA",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Contacts_Organisation.csv"
						}
					}
				]
			},
			{
				"name": "Inspector_Cases_Fail",
				"description": "The ingestion of data from [otcs].[dbo].[Horizon_vw_BIS_Inspector_Cases] to Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "VW_BIS_Inspector_Cases",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of data from [otcs].[dbo].[Horizon_vw_BIS_Inspector_Cases] to Raw has failed",
					"errorCode": "Inspector_Cases_Fail1"
				}
			},
			{
				"name": "Contacts_Organisatoin_Fail",
				"description": "The ingestion of data from [otcs].[dbo].  [otcs].[dbo].[Contacts_Organisation] to Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Contacts_Organisation",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of data from [otcs].[dbo].  [otcs].[dbo].[Contacts_Organisation] to Raw has failed",
					"errorCode": "Contacts_Organisation_Fail1"
				}
			},
			{
				"name": "Logging Failed Activities-1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Inspector_Cases_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Inspector_Cases_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Local_Planning_Authority",
				"description": "Source to RAW pipeline to ingest local planning authority data into Raw",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Contacts_Organisation",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "Live.dim_local_planning_authority"
					},
					{
						"name": "Destination",
						"value": "odw-raw/Horizon/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "dim_local_planning_authority_key",
									"type": "Int32"
								},
								"sink": {
									"name": "dim_local_planning_authority_key",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_code",
									"type": "String"
								},
								"sink": {
									"name": "lpa_code",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_name",
									"type": "String"
								},
								"sink": {
									"name": "lpa_name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_county",
									"type": "String"
								},
								"sink": {
									"name": "lpa_county",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_country",
									"type": "String"
								},
								"sink": {
									"name": "lpa_country",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_governmental_office",
									"type": "String"
								},
								"sink": {
									"name": "lpa_governmental_office",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_latitude",
									"type": "Single"
								},
								"sink": {
									"name": "lpa_latitude",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "lpa_longitude",
									"type": "Single"
								},
								"sink": {
									"name": "lpa_longitude",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "type_short",
									"type": "String"
								},
								"sink": {
									"name": "type_short",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "type_long",
									"type": "String"
								},
								"sink": {
									"name": "type_long",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "dim_Local_Planning_Authority",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Local_Planning_Authority"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Local_Planning_Authority",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "Local_Planning_Authority.csv"
						}
					}
				]
			},
			{
				"name": "Local_Planning_Authority_Fail",
				"description": "The ingestion of data from [Live].[dim_local_planning_authority] to Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Local_Planning_Authority",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of data from [Live].[dim_local_planning_authority] to Raw has failed",
					"errorCode": "Local_Planning_Authority_1"
				}
			},
			{
				"name": "Logging Failed Activities-2",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Contacts_Organisatoin_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Contacts_Organisatoin_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Logging Failed Activities-3",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Local_Planning_Authority_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Local_Planning_Authority_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Horizon Contact Information",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Local_Planning_Authority",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "."
					},
					{
						"name": "Destination",
						"value": "odw-raw/@{concat('Horizon', '/', formatDateTime(utcnow(), 'yyyy-MM-dd'))}/@{'HorizonContactInformation.csv'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "WITH cases as\n(\nSELECT DISTINCT\n      cases.CaseNodeId, \n\t  dtree.SubType,  \n\t  cases.CaseReference, \n\t  cases.CaseUniqueId as case_number\n      \nFROM\n      Horizon_CaseReference cases\n      INNER JOIN DTree dtree ON cases.CaseNodeId = dtree.DataID\n      INNER JOIN Horizon_TypeOfCase t ON cases.CaseTypeId = t.ID\nWHERE\n\t  dtree.OwnerID != -235834 \t-- Recycle bin ownerid\n\t  AND t.CaseworkType IN ('Appeal', 'CommonLand', 'Costs', 'Environment', 'RightsOfWay')\n)\n,\ncase_involvement(DataId, ContactID, ContactDetails, TypeOfInvolvement) AS\n       (SELECT DISTINCT d.DataId AS DataId, ll1.ValStr AS [ContactID], ll2.ValStr AS [ContactDetails], ll3.ValStr AS [TypeOfInvolvement]\n       FROM DTree d\n\t\t   INNER JOIN llattrdata ll1 ON d.DataId = ll1.Id\n\t\t   INNER JOIN llattrdata ll2 ON d.DataId = ll2.Id\n\t\t   INNER JOIN llattrdata ll3 ON d.DataId = ll3.Id\n       WHERE\n\t\t   ll1.DefId = 95501 AND ll1.AttrId = 20\n\t\t   AND ll2.DefId = 95501 AND ll2.AttrId = 19\n\t\t   AND ll3.DefId = 95501 AND ll3.AttrId = 3 \n\t\t   --exclude PINS staff case involvement roles\n\t\t   --AND ll3.ValStr NOT IN ('Case Manager', 'Case Officer', 'Inspector', 'Assistant Case Officer', 'Environmental Services Officer', 'Programme Officer', 'Legal Officer', 'Previous Inspector')\n\t\t   AND ll1.ParentKeyId = ll2.ParentKeyId\n\t\t   AND ll1.ParentKeyId = ll3.ParentKeyId)\n\nSELECT DISTINCT\n\tcr.case_number,\n\tD.CreateDate as case_created_date,\n\tci.ContactID,\n\tci.TypeOfInvolvement,\n\tv.ContactType,\n\tv.FirstName,\n\tv.LastName,\n\tv.PostName,\n\tv.Title,\n\tv.Salutation,\n\tv.Suffix,\n\tv.POBox,\n\tv.Address1,\n\tv.Address2,\n\tv.City,\n\tv.County,\n\tv.Postcode,\n\tv.Country,\n\tv.TelephoneOffice,\n\tv.TelephoneMobile,\n\tv.Fax,\n\tv.Email,\n\tv.LPACode,\n\tv.OrganisationName,\n\tt.OrganisationTypeName\nFROM \n\tcases cr\n\t\tINNER JOIN DTree D ON cr.CaseNodeId = D.DataID\n\t\tINNER JOIN case_involvement ci on D.DataID = ci.DataId\n\t\tLEFT JOIN [dbo].[Horizon_vw_AllContacts] v on ci.ContactID =v.Id\n\t\tLEFT JOIN Contacts_OrganisationType t on v.OrganisationTypeID = t.ID\n--WHERE\n--\t\t\tcase_number = 3000079",
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "case_number",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "case_number",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "case_created_date",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "case_created_date",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ContactID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TypeOfInvolvement",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ContactType",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ContactType",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PostName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PostName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Title",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Title",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Salutation",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Salutation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Suffix",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Suffix",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "POBox",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "POBox",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address1",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Address2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address2",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "County",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "County",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Postcode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Postcode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Country",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Country",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TelephoneOffice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TelephoneMobile",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "TelephoneMobile",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Fax",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Fax",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "LPACode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrganisationName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OrganisationName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "OrganisationTypeName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "OrganisationTypeName",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HorizonContactInformation",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "HorizonContactInfo",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "HorizonContactInformation.csv"
						}
					}
				]
			},
			{
				"name": "Logging Failed Activities-4",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Horizon_Contact_Info_Fail",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Horizon_Contact_Info_Fail').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Horizon_Contact_Info_Fail",
				"description": "The ingestion of horizon contact info to Raw has failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Horizon Contact Information",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "The ingestion of horizon contact info to Raw has failed",
					"errorCode": "Horizon_Contact_1"
				}
			}
		],
		"folder": {
			"name": "0_Raw_Horizon_Data_Copy"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-19T13:05:43Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}