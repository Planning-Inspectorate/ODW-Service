{
	"name": "pln_initial_end_to_end",
	"properties": {
		"activities": [
			{
				"name": "Create lake databases",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_create_lake_databases",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "0_pln_source_to_raw_MiPINS",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "py_1_raw_to_standardised_scheduling",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "0_pln_source_to_raw_MiPINS",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "py_1_raw_to_standardised_scheduling",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Create lake databases",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_1_raw_to_standardised_scheduling",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "py_odw_harmonised_table_creation",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "py_1_raw_to_standardised_scheduling_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_odw_harmonised_table_creation",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "sap-hr-views-historic",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "py_odw_harmonised_table_creation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "sap-hr-views-historic",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "HIST_sap_hr_master",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "sap-hr-views-historic",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "HIST_sap_hr_master",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "py_4_curated_tables",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "HIST_sap_hr_master",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_4_curated_tables",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "py_1_raw_to_standardised_scheduling_copy1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "0_pln_source_to_raw_MiPINS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_1_raw_to_standardised_scheduling",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Lake database creation failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Create lake databases",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Lake database creation failed",
					"errorCode": "Lake database creation failed"
				}
			},
			{
				"name": "py_fail_activity_logging",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Lake database creation failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('Lake database creation failed').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true
				}
			},
			{
				"name": "sap-hr-views-historic sparksql notebook failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "sap-hr-views-historic",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "sap-hr-views-historic sparksql notebook failed",
					"errorCode": "sap-hr-views-historic sparksql notebook failed"
				}
			},
			{
				"name": "py_fail_activity_logging_copy1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "sap-hr-views-historic sparksql notebook failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('sap-hr-views-historic sparksql notebook failed').output.output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true
				}
			},
			{
				"name": "HIST_sap_hr_master failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "HIST_sap_hr_master",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "HIST_sap_hr_master failed",
					"errorCode": "HIST_sap_hr_master failed"
				}
			},
			{
				"name": "py_fail_activity_logging_copy2",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "HIST_sap_hr_master failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('HIST_sap_hr_master failed').output.output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true
				}
			},
			{
				"name": "py_4_curated_tables failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "py_4_curated_tables",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "py_4_curated_tables failed",
					"errorCode": "py_4_curated_tables failed"
				}
			},
			{
				"name": "py_fail_activity_logging_copy3",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "py_4_curated_tables failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_fail_activity_logging",
						"type": "NotebookReference"
					},
					"parameters": {
						"output": {
							"value": {
								"value": "@activity('py_4_curated_tables failed').output.message",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true
				}
			}
		],
		"folder": {
			"name": "post-deployment"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-19T12:53:30Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}