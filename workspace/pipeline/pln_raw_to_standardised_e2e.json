{
	"name": "pln_raw_to_standardised_e2e",
	"properties": {
		"activities": [
			{
				"name": "Create Schema",
				"description": "copies source file to the schema_creation folder",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_create_schema_from_raw",
						"type": "NotebookReference"
					},
					"parameters": {
						"source_id": {
							"value": {
								"value": "@pipeline().parameters.source_id",
								"type": "Expression"
							},
							"type": "int"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "Create Table and Ingest",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Create Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "py_raw_to_std",
						"type": "NotebookReference"
					},
					"parameters": {
						"date_folder": {
							"value": {
								"value": "@pipeline().parameters.source_folder_date",
								"type": "Expression"
							},
							"type": "string"
						},
						"source_folder": {
							"value": {
								"value": "@pipeline().parameters.source_folder",
								"type": "Expression"
							},
							"type": "string"
						},
						"specific_file": {
							"value": {
								"value": "@pipeline().parameters.specific_file",
								"type": "Expression"
							},
							"type": "string"
						},
						"source_frequency_folder": {
							"value": {
								"value": "@pipeline().parameters.source_frequency_folder",
								"type": "Expression"
							},
							"type": "string"
						},
						"delete_existing_table": {
							"value": {
								"value": "@pipeline().parameters.delete_existing_table",
								"type": "Expression"
							},
							"type": "bool"
						}
					},
					"snapshot": true,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"parameters": {
			"source_id": {
				"type": "int",
				"defaultValue": 124
			},
			"source_folder_date": {
				"type": "string",
				"defaultValue": "2024-06-05"
			},
			"source_folder": {
				"type": "string",
				"defaultValue": "Horizon"
			},
			"specific_file": {
				"type": "string",
				"defaultValue": "HorizonAppealsEvent"
			},
			"source_frequency_folder": {
				"type": "string"
			},
			"delete_existing_table": {
				"type": "bool",
				"defaultValue": true
			}
		},
		"folder": {
			"name": "archive/utils"
		},
		"annotations": []
	}
}