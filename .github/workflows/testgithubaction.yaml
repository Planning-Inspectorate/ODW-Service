###
# This pipeline automatically raises a PR from dev->test whenever something is pushed into dev
###
name: Create Pull Request from dev branch to test branch

on:
  pull_request:
    branches: 
      - dev

env:
  TEST_BRANCH_NAME: 'testing'

jobs:
  create_test_branch_and_raise_pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: dev
    - name: Check the ${{ env.TEST_BRANCH_NAME }} branch exists
      shell: bash
      run: |
        testingBranches=$(git ls-remote --heads origin ${{ env.TEST_BRANCH_NAME }})
        echo $testingBranches
        if [[ -z "$testingBranches" ]]; then
            echo "A test branch should be created"
            echo "createTestBranch=true" >> $GITHUB_OUTPUT
        else
            echo "The test branch already exists"
            echo "createTestBranch=false" >> $GITHUB_OUTPUT      
        fi
      id: check_test_branch_exists
    - name: Extract most recent commit message
      shell: bash
      env:
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      run: |
        delimiter=$(openssl rand -hex 8)
        echo "message<<$delimiter" >> $GITHUB_OUTPUT
        echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
        echo "$delimiter" >> $GITHUB_OUTPUT
      id: extract_commit_message
    - name: Raise Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COMMIT_MESSAGE: ${{ steps.extract_commit_message.outputs.message }}
      run: |
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config user.name "${GITHUB_ACTOR}"
        if [[ "${{ steps.check_test_branch_exists.outputs.createTestBranch }}" = true ]]; then
            echo "The $TEST_BRANCH_NAME branch does not exist, creating the branch and raising a pull request"
            git fetch
            git checkout main
            git pull
            git checkout -b $TEST_BRANCH_NAME
            git push --set-upstream origin $TEST_BRANCH_NAME
        else
            echo "The $TEST_BRANCH_NAME branch already exists, not creating the branch"
        fi
        pullRequests=$(gh pr list -B $TEST_BRANCH_NAME -H dev)
        if [[ -z "$pullRequests" ]]; then
            echo "No pull requests found from dev->$TEST_BRANCH_NAME , raising a pull request"
            gh pr create -B $TEST_BRANCH_NAME -H dev --title "Automated Pull Request from dev branch to ${{ env.TEST_BRANCH_NAME }} branch" --body "$COMMIT_MESSAGE"
        else
            echo "A pull request from the dev branch to the $TEST_BRANCH_NAME branch already exists" 
        fi
