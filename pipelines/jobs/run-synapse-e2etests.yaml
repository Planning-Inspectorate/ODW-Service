parameters:
- name: agentPool
  type: string
  default: ''
- name: env
  type: string
  default: ''

##
# Execute E2E Synapse pipeline and validate results
##
jobs:
- job: RunSynapseE2ETests
  pool: ${{ parameters.agentPool }}
  timeoutInMinutes: 0 # Max timeout
  steps:
  - checkout: self
    clean: true
  
  - task: AzureCLI@2
    displayName: 'Azure CLI Login'
    inputs:
      azureSubscription: 'ODW ${{ upper(parameters.env) }} - Infrastructure'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Logging in to Azure..."
        az account show
        echo "Azure CLI ready for Synapse operations"
  
  - task: AzureCLI@2
    displayName: 'Trigger and Monitor Synapse Master Test Pipeline'
    inputs:
      azureSubscription: 'ODW ${{ upper(parameters.env) }} - Infrastructure'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Set environment variables
        export SYNAPSE_WORKSPACE="pins-synw-odw-${{ parameters.env }}-uks"
        export PIPELINE_NAME="pln_master_test"
        
        echo "Workspace: $SYNAPSE_WORKSPACE"
        echo "Pipeline: $PIPELINE_NAME"
        
        # Verify Azure CLI is authenticated
        echo "Verifying Azure CLI authentication..."
        az account show
        
        # Trigger the master test pipeline in Synapse
        echo "Starting Synapse master test pipeline execution..."
        RUN_ID=$(az synapse pipeline create-run \
          --workspace-name $SYNAPSE_WORKSPACE \
          --name $PIPELINE_NAME \
          --query "runId" -o tsv)
        
        if [ -z "$RUN_ID" ]; then
          echo "ERROR: Failed to start pipeline. No run ID returned."
          exit 1
        fi
        
        echo "Master test pipeline run started with ID: $RUN_ID"
        
        # Wait for pipeline completion and monitor status
        echo "Monitoring master test pipeline execution..."
        
        while true; do
          # Use the correct command to get pipeline run status
          STATUS=$(az synapse pipeline-run show \
            --workspace-name $SYNAPSE_WORKSPACE \
            --run-id $RUN_ID \
            --query "status" -o tsv)
          
          echo "Current pipeline status: $STATUS"
          
          case $STATUS in
            "Succeeded")
              echo "Master test pipeline completed successfully!"
              break
              ;;
            "Failed"|"Cancelled")
            echo "Master test pipeline failed or was cancelled. Status: $STATUS"
            echo "⚠️  Pipeline execution failed, but checking if test results were still written..."
            
            # Even if pipeline failed, test results might have been written to the table
            # Let's check if we have recent test results before failing
            echo "Checking for recent test results in logging.e2e_test_results table..."
            
            # Get error details for logging
            echo "Getting detailed pipeline error information..."
            az synapse pipeline-run show \
              --workspace-name $SYNAPSE_WORKSPACE \
              --run-id $RUN_ID \
              --query "{status: status, message: message, runStart: runStart, runEnd: runEnd}" -o json
            
            # Continue to check test results even if pipeline failed
            echo "Pipeline failed, but proceeding to check test results table..."
            break
            ;;
            "InProgress"|"Queued"|"Running")
              echo "Master test pipeline is still running. Waiting 30 seconds..."
              sleep 30
              ;;
            "")
              echo "ERROR: Unable to retrieve pipeline status. Check if pipeline run ID is valid."
              exit 1
              ;;
            *)
              echo "Unexpected pipeline status: $STATUS. Waiting 30 seconds..."
              sleep 30
              ;;
          esac
        done
  
  - task: AzureCLI@2
    displayName: 'Retrieve and Validate E2E Test Results'
    inputs:
      azureSubscription: 'ODW ${{ upper(parameters.env) }} - Infrastructure'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Set environment variables
        export SYNAPSE_WORKSPACE="pins-synw-odw-${{ parameters.env }}-uks"
        export SQL_POOL="SqlPool01" # Adjust if your SQL pool has a different name
        
        echo "Retrieving E2E test results from logging.e2e_test_results table..."
        
        # Query the e2e_test_results table to get the latest test results
        QUERY="SELECT TOP 1 test_status, error_message, test_timestamp FROM logging.e2e_test_results ORDER BY test_timestamp DESC"
        
        # Execute the query and get results
        RESULTS=$(az synapse sql query \
          --workspace-name $SYNAPSE_WORKSPACE \
          --sql-pool-name $SQL_POOL \
          --query-text "$QUERY" \
          --output json)
        
        echo "Query results: $RESULTS"
        
        # Parse the results
        TEST_STATUS=$(echo $RESULTS | jq -r '.[0].test_status // empty')
        ERROR_MESSAGE=$(echo $RESULTS | jq -r '.[0].error_message // empty')
        TEST_TIMESTAMP=$(echo $RESULTS | jq -r '.[0].test_timestamp // empty')
        
        echo "Test Status: $TEST_STATUS"
        echo "Test Timestamp: $TEST_TIMESTAMP"
        
        if [ "$TEST_STATUS" = "Succeeded" ]; then
          echo "E2E Tests PASSED! All data validation tests completed successfully."
          echo "Test completed at: $TEST_TIMESTAMP"
          exit 0
        elif [ "$TEST_STATUS" = "Failed" ]; then
          echo "E2E Tests FAILED! Data validation tests encountered errors."
          echo "Test completed at: $TEST_TIMESTAMP"
          if [ -n "$ERROR_MESSAGE" ] && [ "$ERROR_MESSAGE" != "null" ]; then
            echo "Error details: $ERROR_MESSAGE"
          fi
          exit 1
        else
          echo "Unexpected test status or no results found: $TEST_STATUS"
          echo "Please check the logging.e2e_test_results table manually."
          exit 1
        fi
