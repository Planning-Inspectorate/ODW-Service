name: Synapse CI/CD

# This is the main CI/CD pipeline of the ODW. This is used to manage the CI/CD through the dev, test and main branches
parameters:
# Whether or not to run tests
- name: runTests
  type: boolean
  default: true
# Whether or not the deployment is for the backup resources
- name: failoverDeployment
  type: boolean
  default: false
# User-specified environment to deploy to. By default this is auto, which lets the pipeline decide as part of CI/CD
- name: env
  default: 'auto'
  values:
  - 'auto'
  - 'dev'
  - 'test'
  - 'prod'

# Run when Pull Request raised to the dev or testing branch
pr:
- dev

# Run when merged into main
trigger:
 branches:
  include:
  - main

variables:
- name: branchName
  value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
- name: targetBranch
  ${{ if eq(variables['Build.Reason'], 'PullRequest')}}:
    value: $[replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '')]
  ${{ else }}:
    value: ''
- name: env
  ${{ if ne(parameters.env, 'auto') }}:
    # If the override env has been set, then use this as the target environment. This is only for manual runs
    value: ${{ parameters.env }}
  ${{ else }}:
    # If no override env has been set...
    ${{ if eq(variables.targetBranch, '') }}:
      # If this is not a pull request, then set the target env based on the branch name
      ${{ if eq(variables.branchName, 'dev') }}:
        value: dev
      ${{ elseif eq(variables.branchName, 'testing') }}:
        value: test
      ${{ elseif eq(variables.branchName, 'main') }}:
        value: prod
      ${{ else }}:
        # Set the env to dev by default
        value: dev
    ${{ else }}:
      # If this is a pull request, then set the env based on the target branch name
      ${{ if eq(variables.targetBranch, 'dev') }}:
        value: dev
      ${{ elseif eq(variables.targetBranch, 'testing') }}:
        value: test
      ${{ elseif eq(variables.targetBranch, 'main') }}:
        # Only run PRs against the test env at a maximum
        value: test
      ${{ else }}:
        # Set the env to dev by default
        value: dev

- name: variableGroupName
  ${{ if eq(variables.env, 'prod') }}:
    value: "Terraform Prod"
  ${{ elseif eq(variables.env, 'test') }}:
    value: "Terraform Test"
  ${{ else }}:
    value: "Terraform Dev"
- name: agentPool
  value: 'pins-agent-pool-odw-${{ variables.env }}-uks'
- name: azureSubscription
  value: 'pins-agent-pool-odw-${{ variables.env }}-uks'
- group: ${{ variables.variableGroupName }}

stages:
- template: stages/pre-deployment.yaml
  parameters:
    agentPool: ${{ variables.agentPool }}

- template: stages/wait-for-approval.yaml

- template: stages/conditional-deployment-infrastructure.yaml
  parameters:
    agentPool: ${{ variables.agentPool }}
    env: ${{ variables.env }}
    armServiceConnectionName: "Azure Devops Pipelines - ODW ${{ upper(variables.env) }} - Infrastructure"
    failoverDeployment: ${{ parameters.failoverDeployment }}
    outputsFileName: "tfoutputs.json"

- template: stages/conditional-deployment-functionapp.yaml
  parameters:
    agentPool: ${{ variables.agentPool }}
    env: ${{ variables.env }}

- template: stages/conditional-deployment-synapse.yaml
  parameters:
    agentPool: ${{ variables.agentPool }}
    env: ${{ variables.env }}
    armServiceConnectionName: "ODW ${{ upper(variables.env) }} - Infrastructure"

- ${{ if eq(parameters.runTests, true) }}:
  - template: stages/conditional-run-tests.yaml
    parameters:
      agentPool: ${{ variables.agentPool }}
      env: ${{ variables.env }}
