parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Test
    values:
    - Test
    - Prod

variables:
- group: Synapse ${{ parameters.environment }}
- name: environment
  value: ${{ lower(parameters.environment) }}
- name: publishBranchName
  value: 'workspace_publish'

pr: none

trigger: none

pool:
  vmImage: ubuntu-22.04

stages:
  - stage: Release
    displayName: Synapse Release ${{ parameters.environment }}
    jobs:
    - deployment: Release
      displayName: Synapse Release
      environment: ${{ parameters.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              clean: true
              displayName: 'Checkout'
              persistCredentials: true

            - script: |
                git checkout ${{ variables.publishBranchName }}
                echo "##[command]ls -l $(Build.SourcesDirectory):"
                ls -l $(Build.SourcesDirectory)
              displayName: 'Switch to ${{ variables.publishBranchName }}'

            # - task: AzureSynapseWorkspace.synapsecicd-deploy.toggle-trigger.toggle-triggers-dev@2
            #   displayName: 'Disable Synapse Triggers'
            #   inputs:
            #     azureSubscription: 'ODW PreProd'
            #     ResourceGroupName: 'pins-odw-data-preprod-rg'
            #     WorkspaceName: 'pins-odw-data-preprod-syn-ws'
            #     ToggleOn: false

            # steps:
            # - task: AzureSynapseWorkspace.synapsecicd-deploy.synapse-deploy.Synapse workspace deployment@1
            #   displayName: 'Synapse deployment task for workspace: pins-odw-data-preprod-syn-ws'
            #   inputs:
            #     TemplateFile: '$(System.DefaultWorkingDirectory)/_Planning-Inspectorate.ODW-Service/workspace_arm_templates/TemplateForWorkspace.json'
            #     ParametersFile: '$(System.DefaultWorkingDirectory)/_Planning-Inspectorate.ODW-Service/workspace_arm_templates/TemplateParametersForWorkspace.json'
            #     azureSubscription: 'ODW PreProd'
            #     ResourceGroupName: 'pins-odw-data-preprod-rg'
            #     TargetWorkspaceName: 'pins-odw-data-preprod-syn-ws'
            #     DeleteArtifactsNotInTemplate: true
            #     OverrideArmParameters: '-workspaceName $(synapse_workspace_name) -ls_kv_properties_typeProperties_baseUrl https://$(synapse_workspace_name).vault.azure.net/ -pins-odw-data-dev-syn-ws-WorkspaceDefaultStorage_properties_typeProperties_url https://$(storage_account_name).dfs.core.windows.net -odw_curated_properties_0_NewEntity_Source_Location abfss://$(curated_lake_database_name)@$(storage_account_name).dfs.core.windows.net/ -odw_chris_test_properties_0_NewEntity_Source_Location abfss://$(christest_lake_database_name)@$(storage_account_name).dfs.core.windows.net/'

            # steps:
            # - task: AzureSynapseWorkspace.synapsecicd-deploy.toggle-trigger.toggle-triggers-dev@2
            #   displayName: 'Enable Synapse Triggers'
            #   inputs:
            #     azureSubscription: 'ODW PreProd'
            #     ResourceGroupName: 'pins-odw-data-preprod-rg'
            #     WorkspaceName: 'pins-odw-data-preprod-syn-ws'

            # steps:
            # - task: liprec.vsts-publish-adf.trigger-adf-pipeline.trigger-adf-pipeline@2
            #   displayName: 'Trigger pipeline run '
            #   inputs:
            #     azureSubscription: 'ODW PreProd'
            #     DatafactoryType: synapse
            #     WorkspaceUrl: 'https://pins-odw-data-preprod-syn-ws.dev.azuresynapse.net'
            #     PipelineFilter: 'pln_create_lake_databases'
