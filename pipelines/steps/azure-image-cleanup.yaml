parameters:
  - name: armServiceConnectionName
    type: string
  - name: preserveCount
    type: number
    default: 2
  - name: resourceGroupName
    type: string

steps:
  - task: AzurePowerShell@5
    displayName: 'Image Cleanup'
    inputs:
      ConnectedServiceNameARM: ${{ parameters.armServiceConnectionName }}
      errorActionPreference: 'stop'
      inline: |
        Write-Host "Checking for old images in ${{ parameters.resourceGroupName }}..."
        Write-Host "##[command]Get-AzImage -ResourceGroupName ${{ parameters.resourceGroupName }} | Sort-Object -Property Name -Descending | Select-Object -Skip ${{ parameters.preserveCount }}"
        $Images = Get-AzImage -ResourceGroupName ${{ parameters.resourceGroupName }} | Sort-Object -Property Name -Descending | Select-Object -Skip ${{ parameters.preserveCount }}

        If ($Images.Count -gt 0) {
          Write-Host "Found $($Images.Count) old images:"
          $Images | ConvertTo-Json -Depth 10

          Foreach ($Image in $Images) {
            Write-Host "Removing image $($Image.Name)..."
            Write-Host "##[command]Remove-AzImage -ResourceGroupName ${{ parameters.resourceGroupName }} -ImageName $Image.Name -Force"
            $Removal = Remove-AzImage -ResourceGroupName ${{ parameters.resourceGroupName }} -ImageName $Image.Name -Force
            $Removal | ConvertTo-Json
          }
        } Else {
          Write-Host "No old images found!"
        }
      scriptType: inlineScript
      TargetAzurePs: LatestVersion
