parameters:
  - name: armClientId
    type: string
    default: $(AZURE_SERVICE_PRINCIPAL_ID)
  - name: armClientSecret
    type: string
    default: $(AZURE_SERVICE_PRINCIPAL_SECRET)
  - name: armSubscriptionId
    type: string
    default: $(SUBSCRIPTION_ID)
  - name: armTenantId
    type: string
    default: $(AZURE_TENANT_ID)
  - name: deployAgentPool
    type: boolean
    default: false
  - name: environment
    type: string
    default: dev
  - name: failoverDeployment
    type: boolean
    default: false
  - name: workingDirectory
    type: string

steps:
  - script: |
      echo "Refreshing Terraform..."
      echo "##[command]terraform apply -refresh-only -var-file=./environments/${{ parameters.environment }}.tfvars \
      -var deploy_agent_pool=${{ lower(parameters.deployAgentPool) }} -var failover_deployment=${{ lower(parameters.failoverDeployment) }} \
      -input=false"
      terraform apply \
        -refresh-only \
        -auto-approve \
        -var-file=./environments/${{ parameters.environment }}.tfvars \
        -var "deploy_agent_pool=${{ lower(parameters.deployAgentPool) }}" \
        -var "failover_deployment=${{ lower(parameters.failoverDeployment) }}" \
        -input=false \
    displayName: 'Terraform Refresh'
    workingDirectory: ${{ parameters.workingDirectory }}
    env:
      ARM_CLIENT_ID: ${{ parameters.armClientId }}
      ARM_CLIENT_SECRET: ${{ parameters.armClientSecret }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.armSubscriptionId }}
      ARM_TENANT_ID: ${{ parameters.armTenantId }}
