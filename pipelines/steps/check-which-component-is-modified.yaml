parameters:
  enforceInfrastructureDeployment: false
  enforceFunctionsDeployment: false
  enforceSynapseDeployment: false
##
# Check which services have been modified and need to be redeployed
##
steps:
- bash: |
    sourceBranch="${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}"
    echo "build reason ${{ variables['Build.Reason'] }}"
    if [[ ${{ variables['Build.Reason'] }} = 'PullRequest' ]]; then
        echo "This run has been triggered by a pull request"
        sourceBranch="$(system.pullRequest.sourceBranch)"
    fi
    deployEverything=false
    echo "Source branch is '$sourceBranch'"
    if [[ $sourceBranch = dev ]]; then
        targetBranch=testing
    elif [[ $sourceBranch = testing ]]; then
        targetBranch=main
    elif [[ $sourceBranch = main ]]; then
        echo "The source branch is main, so forcing a full deployment"
        deployEverything=true
        targetBranch=main
    else
        targetBranch=dev
    fi
    echo "Using target branch '$targetBranch'"
    modifiedFiles="$(git diff --name-status origin/$targetBranch)"
    echo "The following files have been modified"
    echo "${modifiedFiles}"

    # The below variables represent services that need to be deployed
    infrastructureModified=false
    functionsModified=false
    synapseModified=false

    if [[ $modifiedFiles == *"infrastructure/"* || $modifiedFiles == *"servicebus/"* ]]; then
        infrastructureModified=true
        echo "Detected an Infrastructure change under 'infrastructure/' or 'servicebus/'"
    fi
    if [[ $modifiedFiles == *"functionapp/"* || $modifiedFiles == *"functions/"* ]]; then
        functionsModified=true
        echo "Detected a Function App change under 'functionapp/' or 'functions'"
    fi
    if [[ $modifiedFiles == *"workspace/"* ]]; then
        synapseModified=true
        echo "Detected a Synapse change under 'workspace/'"
    fi
    if [[ $modifiedFiles == *"pipelines/"* ]]; then
        # If CI/CD pipelines are modified, then redeploy everything to make sure the pipelines work
        infrastructureModified=true
        functionsModified=true
        synapseModified=true
        echo "Detected a change for the CI/CD process under 'pipelines/'"
    fi
    if [[ "$deployEverything" = true ]]; then
        # If fullDeployment is true, then deploy everything
        infrastructureModified=true
        functionsModified=true
        synapseModified=true
        echo "Running from the main branch, so by default everything will be deployed"
    fi
    if [[ ${{ lower(parameters.enforceInfrastructureDeployment) }} = true ]]; then
        infrastructureModified=true
        echo "enforceInfrastructureDeployment=true, deploying infrastructure"
    fi
    if [[ ${{ lower(parameters.enforceFunctionsDeployment) }} = true ]]; then
        functionsModified=true
        echo "enforceFunctionsDeployment=true, deploying functions"
    fi
    if [[ ${{ lower(parameters.enforceSynapseDeployment) }} = true ]]; then
        synapseModified=true
        echo "enforceSynapseDeployment=true, deploying synapse"
    fi

    echo "infrastructureModified = ${infrastructureModified}"
    echo "functionsModified = ${functionsModified}"
    echo "synapseModified = ${synapseModified}"

    echo "##vso[task.setvariable variable=infrastructureModified;isOutput=true]$infrastructureModified"
    echo "##vso[task.setvariable variable=functionsModified;isOutput=true]$functionsModified"
    echo "##vso[task.setvariable variable=synapseModified;isOutput=true]$synapseModified"
  displayName: 'Check which components have been modified'
  name: checkModifiedComponents
