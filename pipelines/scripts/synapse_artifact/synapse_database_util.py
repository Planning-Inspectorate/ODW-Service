from pipelines.scripts.synapse_artifact.synapse_artifact_util import SynapseArtifactUtil
from typing import List, Dict, Any


class SynapseDatabaseUtil(SynapseArtifactUtil):
    """
    Class for managing the retrieval and analysis of Synapse SQL Database artifacts
    """

    @classmethod
    def get_type_name(cls) -> str:
        return "database"

    def get(self, artifact_name: str, **kwargs: Dict[str, Any]) -> Dict[str, Any]:
        """
        Retrieves a specific SQL database definition by name.
        """
        return self._web_request(
            f"{self.synapse_endpoint}/sqlPools/{artifact_name}?api-version=2021-06-01",
        ).json()

    def get_all(self, **kwargs: Dict[str, Any]) -> List[Dict[str, Any]]:
        """
        Retrieves all SQL database (dedicated pool) definitions in the workspace.
        """
        response = self._web_request(
            f"{self.synapse_endpoint}/sqlPools?api-version=2021-06-01",
        ).json()
        print(response)
        all_databases = response["value"]

        while "nextLink" in response:
            next_link = response["nextLink"]
            response = self._web_request(next_link).json()
            all_databases.extend(response["value"])
        return all_databases

    def get_uncomparable_attributes(self) -> List[str]:
        """
        Attributes that should not be compared across environments
        (auto-generated by Synapse or environment-specific).
        """
        return [
            r"^id$",
            r"^type$",
            r"^properties.creationDate$",
            r"^properties.status$"
        ]

    def get_nullable_attributes(self) -> List[str]:
        """
        Attributes that might be null in certain environments.
        """
        return [
            r"^properties.recoverableDatabaseId$"
        ]

    def get_env_attributes_to_replace(self) -> List[str]:
        """
        Attributes that might differ per environment and need dynamic replacement.
        """
        return [
            r"^properties.administratorLogin$"
        ]
