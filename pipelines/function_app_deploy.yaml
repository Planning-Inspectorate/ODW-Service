parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
    - Dev

variables:
- group: Terraform ${{ parameters.environment }}
- name: environment
  value: ${{ lower(parameters.environment) }}
- name: armServiceConnectionName
  value: ${{ replace(format('ODW {0}', parameters.environment), 'Test', 'PreProd') }}

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'functions/*'

pr: none

pool:
  vmImage: ubuntu-22.04

stages:
  - stage: Validate
    jobs:
    - job: Validate
      steps:
      - checkout: self
        displayName: 'Checkout Repo'

      # Login to Azure using Terraform service principal
      - template: steps/azure-login.yaml

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.11'
        displayName: 'Using python 3.11'

      - script: |
          cd functions
          pip install -r requirements.txt # Adjust as per your requirements
        displayName: 'Install dependencies'

      # Zipping Files
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
          replaceExistingArchive: true

      # - task: AzureCLI@2
      #   inputs:
      #     azureSubscription: 'ODW Dev'
      #     scriptType: 'bash'
      #     scriptLocation: 'inlineScript'
      #     inlineScript: |
      #       az functionapp deployment source config-zip --resource-group 'pins-rg-function-app-odw-dev-uks' --name 'pins-fnapp01-odw-dev-uks' --src '$(Build.ArtifactStagingDirectory)/functionapp.zip'

      #   displayName: 'Deploy to Azure Function App'
