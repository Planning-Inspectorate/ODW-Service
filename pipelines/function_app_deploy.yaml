parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
    - Dev

variables:
- group: Terraform ${{ parameters.environment }}
- name: environment
  value: ${{ lower(parameters.environment) }}
- name: armServiceConnectionName
  value: ${{ replace(format('ODW {0}', parameters.environment), 'Test', 'PreProd') }}

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'functions/*'
    exclude:
      - 'functions/tests/*'

pr: none

pool:
  vmImage: ubuntu-22.04

jobs:

- job: AzureLogin
  displayName: 'Azure login'
  steps:
  - template: steps/azure-login.yaml

- job: BuildAndPackage
  displayName: 'Build and Package'
  dependsOn: AzureLogin
  steps:
  - checkout: self
    displayName: 'Checkout repo'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'
      addToPath: true

  - script: |
      python -m pip install --upgrade pip
      pip install -r $(Build.SourcesDirectory)/functions/requirements.txt
    displayName: 'Install Python Dependencies'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/functions'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/functions/FunctionAppPackage.zip'
    displayName: 'Archive Function App Code'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'FunctionAppPackage.zip'
    displayName: 'Publish build artifact'

- job: Debugging
  dependsOn: BuildAndPackage
  steps:
  - script: ls '$(Pipeline.Workspace)'
    displayName: 'Pipeline workspace files'
  - script: ls '$(Build.SourcesDirectory)'
    displayName: 'Build.SourcesDirectory files'
  - script: ls '$(Build.SourcesDirectory)/functions'
    displayName: 'Build.SourcesDirectory/functions files'
  - script: ls '$(Build.ArtifactStagingDirectory)'
    displayName: 'Build.ArtifactStagingDirectory files'

# - job: DeployToAzureFunctions
#   displayName: 'Deploy to Azure Functions'
#   dependsOn: BuildAndPackage
  
#   steps:
#   - template: steps/azure-login.yaml

#   - task: AzureFunctionApp@2
#     inputs:
#       azureSubscription: '$(armServiceConnectionName)'
#       appType: 'functionAppLinux'
#       appName: 'pins-fnapp01-odw-dev-uks'
#       package: '$(Pipeline.Workspace)/FunctionAppPackage.zip'
#       runtimeStack: 'PYTHON|3.11'