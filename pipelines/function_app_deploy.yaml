parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
    - Dev

variables:
- group: Terraform ${{ parameters.environment }}
- name: environment
  value: ${{ lower(parameters.environment) }}
- name: armServiceConnectionName
  value: ${{ replace(format('ODW {0}', parameters.environment), 'Test', 'PreProd') }}

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'functions/*'
    exclude:
      - 'functions/tests/*'

pr: none

pool:
  vmImage: ubuntu-22.04

jobs:

- job: AzureLogin
  displayName: 'Azure login'
  steps:
  - template: steps/azure-login.yaml

- job: BuildAndPackage
  displayName: 'Build and Package'
  dependsOn: AzureLogin
  steps:
  - checkout: self
    displayName: 'Checkout repo'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'
      addToPath: true

  - script: |
      python -m pip install --upgrade pip
      pip install -r $(Build.SourcesDirectory)/functions/requirements.txt
    displayName: 'Install Python Dependencies'

  - script: |
      cd $(Build.SourcesDirectory)/functions

      find . -maxdepth 1 -type f | sed 's|^\./||' > $(Build.SourcesDirectory)/functions/filelist.txt

    displayName: 'Creating top level files list'

  - script: |
      cd $(Build.SourcesDirectory)/functions
      cat $(Build.SourcesDirectory)/functions/filelist.txt | xargs zip -r $(Build.ArtifactStagingDirectory)/functions.zip
    displayName: 'Archive top level files'

  # - task: ArchiveFiles@2
  #   inputs:git
  #     rootFolderOrFile: '$(Build.SourcesDirectory)/functions'
  #     includeRootFolder: false
  #     archiveFile: '$(Build.ArtifactStagingDirectory)/FunctionAppPackage.zip'
  #   displayName: 'Archive Function App Code'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'FunctionCode'
    displayName: 'Publish build artifact'

  # - task: DownloadBuildArtifacts@1
  #   inputs:
  #     buildType: 'current'
  #     artifactName: 'FunctionCode'
  #     downloadPath: '$(System.ArtifactsDirectory)'
  #   displayName: 'Download build artifact'

  - script: ls -a '$(Pipeline.Workspace)'
    displayName: 'Pipeline workspace files'
  - script: ls -a '$(Build.SourcesDirectory)'
    displayName: 'Build.SourcesDirectory files'
  - script: ls -a '$(Build.SourcesDirectory)/functions'
    displayName: 'Build.SourcesDirectory/functions files'
  - script: ls -a '$(Build.ArtifactStagingDirectory)'
    displayName: 'Build.ArtifactStagingDirectory files'
  - script: ls -a '$(System.ArtifactsDirectory)'
    displayName: 'System.ArtifactsDirectory files'
  - script: ls -a '$(Build.ArtifactStagingDirectory)/FunctionCode'
    displayName: 'FunctionCode files'

- job: DownloadArtifact
  displayName: 'Download Artifact'
  dependsOn: BuildAndPackage

  steps:

  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      artifactName: 'FunctionCode'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'Download build artifact'

  - script: ls -a '$(System.ArtifactsDirectory)/FunctionCode'
    displayName: 'System.ArtifactsDirectory files'


# - job: DeployToAzureFunctions
#   displayName: 'Deploy to Azure Functions'
#   dependsOn: BuildAndPackage
  
#   steps:
#   - template: steps/azure-login.yaml

#   - task: AzureFunctionApp@2
#     inputs:
#       azureSubscription: '$(armServiceConnectionName)'
#       appType: 'functionAppLinux'
#       appName: 'pins-fnapp01-odw-dev-uks'
#       package: '$(Build.ArtifactStagingDirectory)/FunctionAppPackage.zip'
#       runtimeStack: 'PYTHON|3.11'