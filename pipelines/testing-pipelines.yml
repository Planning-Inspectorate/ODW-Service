# List of Azure modules are here https://azure.github.io/azure-sdk/releases/latest/all/python.html
# https://aka.ms/yaml
parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Test
    values:
      - Dev
      - Test
trigger: none
pr: none
pool: pins-agent-pool-odw-dev-uks

variables:
  - group: Terraform ${{ parameters.environment }}
  - name: armServiceConnectionName
    value: ${{ format('Azure DevOps Pipelines - ODW {0} - Infrastructure', upper(variables.environment)) }}
  - name: environment
    value: ${{ lower(parameters.environment) }}
  - name: resourceGroup
    value: 'pins-rg-function-app-odw-${{ variables.environment }}-uks'
  - name: poolName
    value: ${{ format('pins-agent-pool-odw-{0}-uks', lower(parameters.environment)) }}
stages:
  - stage: azure_login
    displayName: Terraform Output ${{ parameters.environment }}
    jobs:
    - job: Output
      displayName: Terraform Output
      pool: ${{ variables.poolName }}
      steps:
      - checkout: self
        displayName: Checkout
    - job: RunPyTests
      displayName: Run PyTests
      steps:
        - template: steps/azure-login.yaml
        - script: |
            export PATH="$PATH:/home/AzDevOps/.local/bin/"
            sudo apt-get install unixodbc-dev
            sudo curl -fsSL https://aka.ms/install-azd.sh | bash
            pip install pandas pyarrow pytest pytest-azurepipelines aiohttp pyodbc azure-storage-blob azure-keyvault-secrets azure-identity azure-storage-file-datalake azure-synapse azure-mgmt-resource pytest pytest-xdist[psutil]
            cd $(Build.SourcesDirectory)/workspace/testing/tests
            export SYNAPSE_ENDPOINT="${{ format('https://pins-synw-odw-{0}-uks.dev.azuresynapse.net/', lower(parameters.environment)) }}"
            export CREDENTIAL_NAME="${{ format('https://dev.azuresynapse.net/.default', lower(parameters.environment)) }}"
            echo $SYNAPSE_ENDPOINT 
            echo $CREDENTIAL_NAME
            pytest -vv -rP -n 4
          displayName: 'pytest'

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight run
  branches:
    include:
    - main
  always: true